{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine","program":"/Users/myunghacho/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","sp_state_machine","--edition=2021","/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"log\"","--cfg","feature=\"parking_lot\"","--cfg","feature=\"rand\"","--cfg","feature=\"sp-panic-handler\"","--cfg","feature=\"std\"","--cfg","feature=\"thiserror\"","--cfg","feature=\"tracing\"","-C","metadata=770760a6b84bd985","-C","extra-filename=-770760a6b84bd985","--out-dir","/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps","-L","dependency=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps","--extern","hash_db=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libhash_db-8503ebc18b1889d6.rmeta","--extern","log=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/liblog-5e5b893e5fa367e7.rmeta","--extern","num_traits=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libnum_traits-f639dc1d5b076ff1.rmeta","--extern","codec=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libparity_scale_codec-48d05d2fb449a544.rmeta","--extern","parking_lot=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libparking_lot-0389acd55a819da2.rmeta","--extern","rand=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/librand-f111dd43e7e7752d.rmeta","--extern","smallvec=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libsmallvec-7d2a09af1b98a0c7.rmeta","--extern","sp_core=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libsp_core-fd4b756d9c9e978e.rmeta","--extern","sp_externalities=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libsp_externalities-e5e6096fdd1862fc.rmeta","--extern","sp_panic_handler=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libsp_panic_handler-920e31eabf417e72.rmeta","--extern","sp_std=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libsp_std-caa0d9a9cb9fa1d4.rmeta","--extern","sp_trie=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libsp_trie-e2529e052889b89b.rmeta","--extern","thiserror=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libthiserror-a1b460f727a18927.rmeta","--extern","tracing=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libtracing-49238d1607b61ab1.rmeta","--extern","trie_db=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libtrie_db-917e0e4be134138e.rmeta","--extern","trie_root=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libtrie_root-2922165bb58cecda.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/myunghacho/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libsp_state_machine-770760a6b84bd985.rmeta"},"prelude":{"crate_id":{"name":"sp_state_machine","disambiguator":[14420318803208604902,0]},"crate_root":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src","external_crates":[{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9602236740471282608,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[740641686899810413,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1452182208797737205,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4474361821197688885,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11146593528668201643,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7026141623111916022,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11096207044195207047,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[16946906222655600942,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9670608472714711915,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3075685271658393714,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[7553277853646633394,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5387634511767759158,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10401181353817371068,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14296571408058143832,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":18,"id":{"name":"parity_scale_codec","disambiguator":[11025389664727138833,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":19,"id":{"name":"parity_scale_codec_derive","disambiguator":[13567950630339581430,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":20,"id":{"name":"arrayvec","disambiguator":[4765445384651765470,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":21,"id":{"name":"byte_slice_cast","disambiguator":[1450742829568187162,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":22,"id":{"name":"impl_trait_for_tuples","disambiguator":[1199501065919261664,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":23,"id":{"name":"serde","disambiguator":[9544137782352177236,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":24,"id":{"name":"serde_derive","disambiguator":[17621009518653333156,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":25,"id":{"name":"hash_db","disambiguator":[3035980359055305477,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":26,"id":{"name":"sp_core","disambiguator":[10539036770076454810,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":27,"id":{"name":"scale_info","disambiguator":[15088973142150946651,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":28,"id":{"name":"cfg_if","disambiguator":[13037983282529128945,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":29,"id":{"name":"derive_more","disambiguator":[8707368253099479613,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":30,"id":{"name":"scale_info_derive","disambiguator":[7230802250740732360,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":31,"id":{"name":"sp_runtime_interface","disambiguator":[5978476347992355165,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":32,"id":{"name":"sp_wasm_interface","disambiguator":[14621349120364007850,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":33,"id":{"name":"sp_std","disambiguator":[3836989623224051638,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":34,"id":{"name":"wasmi","disambiguator":[16123217206983833204,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":35,"id":{"name":"num_rational","disambiguator":[7244470453211819544,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":36,"id":{"name":"num_bigint","disambiguator":[635263567890515209,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":37,"id":{"name":"num_integer","disambiguator":[12790497028950123625,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":38,"id":{"name":"num_traits","disambiguator":[4458903683416238728,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":39,"id":{"name":"parity_wasm","disambiguator":[16011417072864726173,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":40,"id":{"name":"downcast_rs","disambiguator":[4795813113247543536,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":41,"id":{"name":"wasmi_validation","disambiguator":[3849529294403821989,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":42,"id":{"name":"memory_units","disambiguator":[17120499401839962369,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":43,"id":{"name":"libc","disambiguator":[9005103142181622755,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":44,"id":{"name":"sp_tracing","disambiguator":[17115281573187824974,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","num":45,"id":{"name":"tracing","disambiguator":[11336498365191347296,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":46,"id":{"name":"tracing_core","disambiguator":[13166941371739321160,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":47,"id":{"name":"lazy_static","disambiguator":[15130840265310738312,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":48,"id":{"name":"tracing_attributes","disambiguator":[6081508269012503457,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":49,"id":{"name":"pin_project_lite","disambiguator":[11425072106896568983,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":50,"id":{"name":"tracing_subscriber","disambiguator":[3482678861429152333,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":51,"id":{"name":"regex","disambiguator":[7788844225520356469,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":52,"id":{"name":"regex_syntax","disambiguator":[17206049943230988918,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":53,"id":{"name":"aho_corasick","disambiguator":[39857364077992619,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":54,"id":{"name":"memchr","disambiguator":[16906949692006644998,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":55,"id":{"name":"matchers","disambiguator":[8128970701659719436,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":56,"id":{"name":"regex_automata","disambiguator":[1456044335499460014,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":57,"id":{"name":"ansi_term","disambiguator":[5210659223695397450,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":58,"id":{"name":"tracing_log","disambiguator":[16287341719558271376,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","num":59,"id":{"name":"log","disambiguator":[6370244751661190342,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":60,"id":{"name":"serde_json","disambiguator":[16112264681940306659,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":61,"id":{"name":"itoa","disambiguator":[11535409108964451412,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":62,"id":{"name":"ryu","disambiguator":[16732346970662687665,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":63,"id":{"name":"tracing_serde","disambiguator":[13310577343698839343,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":64,"id":{"name":"sharded_slab","disambiguator":[3163472644790877400,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":65,"id":{"name":"thread_local","disambiguator":[15743197468808622674,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":66,"id":{"name":"once_cell","disambiguator":[906241516110484464,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","num":67,"id":{"name":"smallvec","disambiguator":[13996271574193408785,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":68,"id":{"name":"chrono","disambiguator":[16306847718078067803,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":69,"id":{"name":"sp_runtime_interface_proc_macro","disambiguator":[18412092644992162333,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","num":70,"id":{"name":"sp_externalities","disambiguator":[399927920652893655,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":71,"id":{"name":"sp_storage","disambiguator":[8855496573306405091,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":72,"id":{"name":"sp_debug_derive","disambiguator":[501895185402007615,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":73,"id":{"name":"ref_cast","disambiguator":[10355980937645703199,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":74,"id":{"name":"ref_cast_impl","disambiguator":[7833991851463348593,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":75,"id":{"name":"impl_serde","disambiguator":[8512808259922711046,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":76,"id":{"name":"environmental","disambiguator":[7591175807006172968,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":77,"id":{"name":"primitive_types","disambiguator":[1132617819206243597,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":78,"id":{"name":"fixed_hash","disambiguator":[17090297082099601704,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":79,"id":{"name":"static_assertions","disambiguator":[10004466869080491857,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":80,"id":{"name":"byteorder","disambiguator":[17265137979086274999,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":81,"id":{"name":"rustc_hex","disambiguator":[4904094113549843862,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":82,"id":{"name":"rand","disambiguator":[12901984643046046855,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":83,"id":{"name":"rand_core","disambiguator":[16679925004612314669,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":84,"id":{"name":"getrandom","disambiguator":[3195479937133090562,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":85,"id":{"name":"rand_chacha","disambiguator":[14569171819719609776,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":86,"id":{"name":"ppv_lite86","disambiguator":[12042266499095552183,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":87,"id":{"name":"uint","disambiguator":[9332051173416102165,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":88,"id":{"name":"hex","disambiguator":[14313328291304734710,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":89,"id":{"name":"crunchy","disambiguator":[13790995560371089749,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":90,"id":{"name":"impl_codec","disambiguator":[7953877303562084663,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":91,"id":{"name":"sp_core_hashing","disambiguator":[1548912130435483016,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":92,"id":{"name":"sha2","disambiguator":[7984982361359771615,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":93,"id":{"name":"digest","disambiguator":[7960030921902106253,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":94,"id":{"name":"crypto_common","disambiguator":[8029973214147517645,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":95,"id":{"name":"generic_array","disambiguator":[7841133790266995098,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":96,"id":{"name":"typenum","disambiguator":[14585012641457782044,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":97,"id":{"name":"block_buffer","disambiguator":[15121256659554030653,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":98,"id":{"name":"tiny_keccak","disambiguator":[4831626262459225760,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":99,"id":{"name":"blake2_rfc","disambiguator":[16494060001680096856,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":100,"id":{"name":"arrayvec","disambiguator":[4491850697814948687,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":101,"id":{"name":"nodrop","disambiguator":[2178045376185257472,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":102,"id":{"name":"constant_time_eq","disambiguator":[918597060255610487,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":103,"id":{"name":"twox_hash","disambiguator":[3781583381976325544,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":104,"id":{"name":"base58","disambiguator":[1492415652631636402,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","num":105,"id":{"name":"rand","disambiguator":[6570305274632995237,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":106,"id":{"name":"rand_core","disambiguator":[17080480140097750689,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":107,"id":{"name":"getrandom","disambiguator":[8292786742397754090,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":108,"id":{"name":"rand_chacha","disambiguator":[10140618975598609131,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":109,"id":{"name":"rand_pcg","disambiguator":[16754927045678396121,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":110,"id":{"name":"secrecy","disambiguator":[12328287557864309941,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":111,"id":{"name":"zeroize","disambiguator":[14270330548133686224,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":112,"id":{"name":"zeroize_derive","disambiguator":[14645886018623984611,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":113,"id":{"name":"ss58_registry","disambiguator":[10244720218670862445,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":114,"id":{"name":"num_format","disambiguator":[17006054312781283822,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":115,"id":{"name":"itoa","disambiguator":[6582269778583154766,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":116,"id":{"name":"bip39","disambiguator":[11314893889286737187,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","num":117,"id":{"name":"thiserror","disambiguator":[7468023769639996234,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":118,"id":{"name":"thiserror_impl","disambiguator":[5731738171410429882,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":119,"id":{"name":"rustc_hash","disambiguator":[17030272073622719790,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":120,"id":{"name":"anyhow","disambiguator":[830393935267582809,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":121,"id":{"name":"unicode_normalization","disambiguator":[8187239885301538671,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":122,"id":{"name":"tinyvec","disambiguator":[12924922863080295405,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":123,"id":{"name":"tinyvec_macros","disambiguator":[13381352415925325925,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":124,"id":{"name":"hmac","disambiguator":[5597361097560193622,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":125,"id":{"name":"crypto_mac","disambiguator":[13652587454274268186,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":126,"id":{"name":"subtle","disambiguator":[11822527493932057962,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":127,"id":{"name":"digest","disambiguator":[14851263093279560039,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":128,"id":{"name":"sha2","disambiguator":[6259963827041717268,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":129,"id":{"name":"block_buffer","disambiguator":[15898354361683503687,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":130,"id":{"name":"opaque_debug","disambiguator":[10149071386350004449,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":131,"id":{"name":"pbkdf2","disambiguator":[15860643655094233267,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":132,"id":{"name":"libsecp256k1","disambiguator":[2699982375993309303,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":133,"id":{"name":"libsecp256k1_core","disambiguator":[9632512077303058192,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":134,"id":{"name":"arrayref","disambiguator":[1650279616086479414,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":135,"id":{"name":"hmac_drbg","disambiguator":[8562318492319979916,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":136,"id":{"name":"base64","disambiguator":[9171027083854165706,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":137,"id":{"name":"ed25519_dalek","disambiguator":[16700074225571961497,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":138,"id":{"name":"ed25519","disambiguator":[1015267793177718019,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":139,"id":{"name":"signature","disambiguator":[18058162181553298212,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":140,"id":{"name":"curve25519_dalek","disambiguator":[2964809850618072849,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":141,"id":{"name":"substrate_bip39","disambiguator":[1697577346339759795,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":142,"id":{"name":"hmac","disambiguator":[13341285572281611115,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":143,"id":{"name":"crypto_mac","disambiguator":[17226725527678380297,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":144,"id":{"name":"pbkdf2","disambiguator":[13046195669477736950,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":145,"id":{"name":"schnorrkel","disambiguator":[10486160385154417059,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":146,"id":{"name":"curve25519_dalek","disambiguator":[5450037059228546913,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":147,"id":{"name":"digest","disambiguator":[1612722049855349197,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":148,"id":{"name":"generic_array","disambiguator":[8495020690264827285,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":149,"id":{"name":"sha2","disambiguator":[7577821273395372931,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":150,"id":{"name":"block_buffer","disambiguator":[7920993218300368383,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":151,"id":{"name":"block_padding","disambiguator":[9681734599640059894,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":152,"id":{"name":"byte_tools","disambiguator":[4448446428834929902,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":153,"id":{"name":"fake_simd","disambiguator":[14330172453705584098,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":154,"id":{"name":"opaque_debug","disambiguator":[4689282538842033187,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":155,"id":{"name":"merlin","disambiguator":[7615320066614362181,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":156,"id":{"name":"keccak","disambiguator":[14288935386259045601,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":157,"id":{"name":"arrayvec","disambiguator":[10813777983401750230,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":158,"id":{"name":"hash256_std_hasher","disambiguator":[10644123848667397706,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","num":159,"id":{"name":"parking_lot","disambiguator":[16537474632112846226,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":160,"id":{"name":"instant","disambiguator":[10818540477857358525,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":161,"id":{"name":"lock_api","disambiguator":[5572021129215100917,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":162,"id":{"name":"scopeguard","disambiguator":[794896012219393328,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":163,"id":{"name":"parking_lot_core","disambiguator":[13801629192239844415,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":164,"id":{"name":"bitflags","disambiguator":[5221822649502070792,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":165,"id":{"name":"dyn_clonable","disambiguator":[1243236851226104374,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":166,"id":{"name":"dyn_clone","disambiguator":[14300175821732726930,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":167,"id":{"name":"dyn_clonable_impl","disambiguator":[18184807534735114799,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":168,"id":{"name":"futures","disambiguator":[8253965773970055907,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":169,"id":{"name":"futures_core","disambiguator":[841166366787286430,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":170,"id":{"name":"futures_util","disambiguator":[14096700963666586211,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":171,"id":{"name":"pin_utils","disambiguator":[12644058774972893031,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":172,"id":{"name":"futures_macro","disambiguator":[3113027969270784767,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":173,"id":{"name":"futures_task","disambiguator":[918535662743158888,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":174,"id":{"name":"futures_sink","disambiguator":[2935170657078551846,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":175,"id":{"name":"futures_channel","disambiguator":[14207323074309291647,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":176,"id":{"name":"slab","disambiguator":[13312282856459513588,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":177,"id":{"name":"futures_io","disambiguator":[9326164172813176432,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":178,"id":{"name":"futures_executor","disambiguator":[4441633710481061927,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","num":179,"id":{"name":"num_cpus","disambiguator":[4831201215496412112,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","num":180,"id":{"name":"sp_trie","disambiguator":[992870631350192482,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","num":181,"id":{"name":"trie_db","disambiguator":[3335082550653388918,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","num":182,"id":{"name":"hashbrown","disambiguator":[10474930597283054639,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","num":183,"id":{"name":"ahash","disambiguator":[14048706732936511347,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","num":184,"id":{"name":"trie_root","disambiguator":[16305582103997779709,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","num":185,"id":{"name":"memory_db","disambiguator":[8819853156270193057,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","num":186,"id":{"name":"parity_util_mem","disambiguator":[16113266381202813629,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","num":187,"id":{"name":"parity_util_mem_derive","disambiguator":[9831126247431414965,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","num":188,"id":{"name":"hashbrown","disambiguator":[4274156849305481277,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","num":189,"id":{"name":"sp_panic_handler","disambiguator":[2554986030378427533,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","num":190,"id":{"name":"backtrace","disambiguator":[9444020036814084173,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","num":191,"id":{"name":"rustc_demangle","disambiguator":[18064903648624545889,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","num":192,"id":{"name":"addr2line","disambiguator":[1160765712610408410,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","num":193,"id":{"name":"gimli","disambiguator":[17778232601482657597,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","num":194,"id":{"name":"object","disambiguator":[1969958253925737606,0]}}],"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":686,"byte_end":67906,"line_start":18,"line_end":2277,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":2651},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":133301,"byte_end":133325,"line_start":27,"line_end":27,"column_start":19,"column_end":43},"alias_span":null,"name":"OffchainOverlayedChanges","value":"","parent":{"krate":0,"index":601}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":1174,"byte_end":1175,"line_start":42,"line_end":42,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"StorageProof, create_proof_check_backend, ProvingBackend, MemoryDB, DBValue, TrieMut","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":1221,"byte_end":1222,"line_start":45,"line_end":45,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"InMemoryProvingBackend, InMemoryBackend","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":59,"index":24},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":1262,"byte_end":1267,"line_start":47,"line_end":47,"column_start":15,"column_end":20},"alias_span":null,"name":"debug","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":59,"index":21},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":1269,"byte_end":1274,"line_start":47,"line_end":47,"column_start":22,"column_end":27},"alias_span":null,"name":"log_error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":59,"index":22},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":1289,"byte_end":1293,"line_start":47,"line_end":47,"column_start":42,"column_end":46},"alias_span":null,"name":"warn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":45,"index":61},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":1337,"byte_end":1342,"line_start":49,"line_end":49,"column_start":18,"column_end":23},"alias_span":null,"name":"trace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":48},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":2877,"byte_end":2884,"line_start":128,"line_end":128,"column_start":11,"column_end":18},"alias_span":null,"name":"Backend","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":290},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":2895,"byte_end":2900,"line_start":129,"line_end":129,"column_start":10,"column_end":15},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2196},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":2902,"byte_end":2916,"line_start":129,"line_end":129,"column_start":17,"column_end":31},"alias_span":null,"name":"ExecutionError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":406},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":2925,"byte_end":2928,"line_start":130,"line_end":130,"column_start":7,"column_end":10},"alias_span":null,"name":"Ext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":822},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":2954,"byte_end":2976,"line_start":132,"line_end":132,"column_start":3,"column_end":25},"alias_span":null,"name":"ChildStorageCollection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2689},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":2978,"byte_end":2992,"line_start":132,"line_end":132,"column_start":27,"column_end":41},"alias_span":null,"name":"IndexOperation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":823},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":2994,"byte_end":3019,"line_start":132,"line_end":132,"column_start":43,"column_end":68},"alias_span":null,"name":"OffchainChangesCollection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2651},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3023,"byte_end":3047,"line_start":133,"line_end":133,"column_start":3,"column_end":27},"alias_span":null,"name":"OffchainOverlayedChanges","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2676},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3049,"byte_end":3065,"line_start":133,"line_end":133,"column_start":29,"column_end":45},"alias_span":null,"name":"OverlayedChanges","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":828},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3067,"byte_end":3081,"line_start":133,"line_end":133,"column_start":47,"column_end":61},"alias_span":null,"name":"StorageChanges","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":821},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3083,"byte_end":3100,"line_start":133,"line_end":133,"column_start":63,"column_end":80},"alias_span":null,"name":"StorageCollection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":819},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3102,"byte_end":3112,"line_start":133,"line_end":133,"column_start":82,"column_end":92},"alias_span":null,"name":"StorageKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":841},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3116,"byte_end":3139,"line_start":134,"line_end":134,"column_start":3,"column_end":26},"alias_span":null,"name":"StorageTransactionCache","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":820},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3141,"byte_end":3153,"line_start":134,"line_end":134,"column_start":28,"column_end":40},"alias_span":null,"name":"StorageValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2752},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3168,"byte_end":3185,"line_start":136,"line_end":136,"column_start":10,"column_end":27},"alias_span":null,"name":"StateMachineStats","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2737},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3187,"byte_end":3196,"line_start":136,"line_end":136,"column_start":29,"column_end":38},"alias_span":null,"name":"UsageInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2728},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3198,"byte_end":3207,"line_start":136,"line_end":136,"column_start":40,"column_end":49},"alias_span":null,"name":"UsageUnit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1510},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3225,"byte_end":3236,"line_start":137,"line_end":137,"column_start":16,"column_end":27},"alias_span":null,"name":"TrieBackend","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1661},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3262,"byte_end":3269,"line_start":138,"line_end":138,"column_start":25,"column_end":32},"alias_span":null,"name":"Storage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1753},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3271,"byte_end":3289,"line_start":138,"line_end":138,"column_start":34,"column_end":52},"alias_span":null,"name":"TrieBackendStorage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2182},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3366,"byte_end":3384,"line_start":144,"line_end":144,"column_start":10,"column_end":28},"alias_span":null,"name":"BasicExternalities","value":"","parent":{"krate":0,"index":1867}},{"kind":"Use","ref_id":{"krate":0,"index":563},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3441,"byte_end":3451,"line_start":146,"line_end":146,"column_start":22,"column_end":32},"alias_span":null,"name":"new_in_mem","value":"","parent":{"krate":0,"index":1867}},{"kind":"Use","ref_id":{"krate":0,"index":1155},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3477,"byte_end":3503,"line_start":148,"line_end":148,"column_start":4,"column_end":30},"alias_span":null,"name":"create_proof_check_backend","value":"","parent":{"krate":0,"index":1867}},{"kind":"Use","ref_id":{"krate":0,"index":2708},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3505,"byte_end":3518,"line_start":148,"line_end":148,"column_start":32,"column_end":45},"alias_span":null,"name":"ProofRecorder","value":"","parent":{"krate":0,"index":1867}},{"kind":"Use","ref_id":{"krate":0,"index":1091},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3520,"byte_end":3534,"line_start":148,"line_end":148,"column_start":47,"column_end":61},"alias_span":null,"name":"ProvingBackend","value":"","parent":{"krate":0,"index":1867}},{"kind":"Use","ref_id":{"krate":0,"index":1064},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3536,"byte_end":3558,"line_start":148,"line_end":148,"column_start":63,"column_end":85},"alias_span":null,"name":"ProvingBackendRecorder","value":"","parent":{"krate":0,"index":1867}},{"kind":"Use","ref_id":{"krate":0,"index":1202},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3579,"byte_end":3591,"line_start":150,"line_end":150,"column_start":15,"column_end":27},"alias_span":null,"name":"InspectState","value":"","parent":{"krate":0,"index":1867}},{"kind":"Use","ref_id":{"krate":0,"index":2717},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3593,"byte_end":3614,"line_start":150,"line_end":150,"column_start":29,"column_end":50},"alias_span":null,"name":"ReadOnlyExternalities","value":"","parent":{"krate":0,"index":1867}},{"kind":"Use","ref_id":{"krate":0,"index":1364},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3628,"byte_end":3645,"line_start":151,"line_end":151,"column_start":12,"column_end":29},"alias_span":null,"name":"TestExternalities","value":"","parent":{"krate":0,"index":1867}},{"kind":"Use","ref_id":{"krate":180,"index":559},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3686,"byte_end":3697,"line_start":154,"line_end":154,"column_start":16,"column_end":27},"alias_span":null,"name":"TrieDBMutV0","value":"","parent":{"krate":0,"index":1867}},{"kind":"Use","ref_id":{"krate":180,"index":562},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3699,"byte_end":3710,"line_start":154,"line_end":154,"column_start":29,"column_end":40},"alias_span":null,"name":"TrieDBMutV1","value":"","parent":{"krate":0,"index":1867}},{"kind":"Use","ref_id":{"krate":180,"index":787},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3715,"byte_end":3727,"line_start":155,"line_end":155,"column_start":3,"column_end":15},"alias_span":null,"name":"CompactProof","value":"","parent":{"krate":0,"index":1867}},{"kind":"Use","ref_id":{"krate":181,"index":2034},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3729,"byte_end":3736,"line_start":155,"line_end":155,"column_start":17,"column_end":24},"alias_span":null,"name":"DBValue","value":"","parent":{"krate":0,"index":1867}},{"kind":"Use","ref_id":{"krate":180,"index":480},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3738,"byte_end":3746,"line_start":155,"line_end":155,"column_start":26,"column_end":34},"alias_span":null,"name":"LayoutV0","value":"","parent":{"krate":0,"index":1867}},{"kind":"Use","ref_id":{"krate":180,"index":484},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3748,"byte_end":3756,"line_start":155,"line_end":155,"column_start":36,"column_end":44},"alias_span":null,"name":"LayoutV1","value":"","parent":{"krate":0,"index":1867}},{"kind":"Use","ref_id":{"krate":180,"index":537},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3758,"byte_end":3766,"line_start":155,"line_end":155,"column_start":46,"column_end":54},"alias_span":null,"name":"MemoryDB","value":"","parent":{"krate":0,"index":1867}},{"kind":"Use","ref_id":{"krate":180,"index":756},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3768,"byte_end":3780,"line_start":155,"line_end":155,"column_start":56,"column_end":68},"alias_span":null,"name":"StorageProof","value":"","parent":{"krate":0,"index":1867}},{"kind":"Use","ref_id":{"krate":181,"index":2098},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":3782,"byte_end":3789,"line_start":155,"line_end":155,"column_start":70,"column_end":77},"alias_span":null,"name":"TrieMut","value":"","parent":{"krate":0,"index":1867}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":686,"byte_end":67906,"line_start":18,"line_end":2277,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":136},{"krate":0,"index":286},{"krate":0,"index":293},{"krate":0,"index":513},{"krate":0,"index":601},{"krate":0,"index":962},{"krate":0,"index":1157},{"krate":0,"index":1264},{"krate":0,"index":1283},{"krate":0,"index":1430},{"krate":0,"index":1563},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1792},{"krate":0,"index":1795},{"krate":0,"index":1798},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1810},{"krate":0,"index":1813},{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1820},{"krate":0,"index":1823},{"krate":0,"index":1826},{"krate":0,"index":1829},{"krate":0,"index":1832},{"krate":0,"index":1835},{"krate":0,"index":1838},{"krate":0,"index":1841},{"krate":0,"index":1844},{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1851},{"krate":0,"index":1854},{"krate":0,"index":1857},{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1864},{"krate":0,"index":1867},{"krate":0,"index":1934}],"decl_id":null,"docs":" Substrate state machine implementation.\n","sig":null,"attributes":[{"value":"/ Substrate state machine implementation.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":686,"byte_end":729,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":731,"byte_end":753,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"backend","qualname":"::backend","value":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":117},{"krate":0,"index":123},{"krate":0,"index":129}],"decl_id":null,"docs":" State machine backends. These manage the code and storage of contracts.\n","sig":null,"attributes":[{"value":"/ State machine backends. These manage the code and storage of contracts.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":68594,"byte_end":68669,"line_start":18,"line_end":18,"column_start":1,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":48},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":69188,"byte_end":69195,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Backend","qualname":"::backend::Backend","value":"Backend<H: Hasher>: sp_std::fmt::Debug","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106}],"decl_id":null,"docs":" A state backend is used to read state data and can have changes committed\n to it.","sig":null,"attributes":[{"value":"/ A state backend is used to read state data and can have changes committed","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":69027,"byte_end":69104,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ to it.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":69105,"byte_end":69115,"line_start":32,"line_end":32,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":69116,"byte_end":69119,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The clone operation (if implemented) should be cheap.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":69120,"byte_end":69177,"line_start":34,"line_end":34,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":50},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":69290,"byte_end":69295,"line_start":37,"line_end":37,"column_start":7,"column_end":12},"name":"Error","qualname":"::backend::Backend::Error","value":"type Error: super::Error;","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" An error type when fetching data is not possible.\n","sig":null,"attributes":[{"value":"/ An error type when fetching data is not possible.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":69230,"byte_end":69283,"line_start":36,"line_end":36,"column_start":2,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":51},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":69367,"byte_end":69378,"line_start":40,"line_end":40,"column_start":7,"column_end":18},"name":"Transaction","qualname":"::backend::Backend::Transaction","value":"type Transaction: Consolidate + Default + Send;","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Storage changes to be applied if committing\n","sig":null,"attributes":[{"value":"/ Storage changes to be applied if committing","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":69313,"byte_end":69360,"line_start":39,"line_end":39,"column_start":2,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":52},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":69452,"byte_end":69470,"line_start":43,"line_end":43,"column_start":7,"column_end":25},"name":"TrieBackendStorage","qualname":"::backend::Backend::TrieBackendStorage","value":"type TrieBackendStorage: TrieBackendStorage<H, Overlay = Self::Transaction>;","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Type of trie backend storage.\n","sig":null,"attributes":[{"value":"/ Type of trie backend storage.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":69412,"byte_end":69445,"line_start":42,"line_end":42,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":69592,"byte_end":69599,"line_start":46,"line_end":46,"column_start":5,"column_end":12},"name":"storage","qualname":"::backend::Backend::storage","value":"pub fn storage(&Self, &[u8]) -> Result<Option<StorageValue>, Self::Error>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Get keyed storage or None if there is nothing associated.\n","sig":null,"attributes":[{"value":"/ Get keyed storage or None if there is nothing associated.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":69526,"byte_end":69587,"line_start":45,"line_end":45,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":69744,"byte_end":69756,"line_start":49,"line_end":49,"column_start":5,"column_end":17},"name":"storage_hash","qualname":"::backend::Backend::storage_hash","value":"pub fn storage_hash(&Self, &[u8]) -> Result<Option<H::Out>, Self::Error>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Get keyed storage value hash or None if there is nothing associated.\n","sig":null,"attributes":[{"value":"/ Get keyed storage value hash or None if there is nothing associated.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":69667,"byte_end":69739,"line_start":48,"line_end":48,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":69946,"byte_end":69959,"line_start":54,"line_end":54,"column_start":5,"column_end":18},"name":"child_storage","qualname":"::backend::Backend::child_storage","value":"pub fn child_storage(&Self, &ChildInfo, &[u8])\n-> Result<Option<StorageValue>, Self::Error>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Get keyed child storage or None if there is nothing associated.\n","sig":null,"attributes":[{"value":"/ Get keyed child storage or None if there is nothing associated.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":69874,"byte_end":69941,"line_start":53,"line_end":53,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":70144,"byte_end":70162,"line_start":61,"line_end":61,"column_start":5,"column_end":23},"name":"child_storage_hash","qualname":"::backend::Backend::child_storage_hash","value":"pub fn child_storage_hash(&Self, &ChildInfo, &[u8])\n-> Result<Option<H::Out>, Self::Error>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Get child keyed storage value hash or None if there is nothing associated.\n","sig":null,"attributes":[{"value":"/ Get child keyed storage value hash or None if there is nothing associated.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":70061,"byte_end":70139,"line_start":60,"line_end":60,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":70373,"byte_end":70387,"line_start":70,"line_end":70,"column_start":5,"column_end":19},"name":"exists_storage","qualname":"::backend::Backend::exists_storage","value":"pub fn exists_storage(&Self, &[u8]) -> Result<bool, Self::Error>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" true if a key exists in storage.\n","sig":null,"attributes":[{"value":"/ true if a key exists in storage.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":70332,"byte_end":70368,"line_start":69,"line_end":69,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":70525,"byte_end":70545,"line_start":75,"line_end":75,"column_start":5,"column_end":25},"name":"exists_child_storage","qualname":"::backend::Backend::exists_child_storage","value":"pub fn exists_child_storage(&Self, &ChildInfo, &[u8])\n-> Result<bool, Self::Error>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" true if a key exists in child storage.\n","sig":null,"attributes":[{"value":"/ true if a key exists in child storage.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":70478,"byte_end":70520,"line_start":74,"line_end":74,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":70782,"byte_end":70798,"line_start":84,"line_end":84,"column_start":5,"column_end":21},"name":"next_storage_key","qualname":"::backend::Backend::next_storage_key","value":"pub fn next_storage_key(&Self, &[u8])\n-> Result<Option<StorageKey>, Self::Error>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Return the next key in storage in lexicographic order or `None` if there is no value.\n","sig":null,"attributes":[{"value":"/ Return the next key in storage in lexicographic order or `None` if there is no value.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":70688,"byte_end":70777,"line_start":83,"line_end":83,"column_start":2,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":70964,"byte_end":70986,"line_start":87,"line_end":87,"column_start":5,"column_end":27},"name":"next_child_storage_key","qualname":"::backend::Backend::next_child_storage_key","value":"pub fn next_child_storage_key(&Self, &ChildInfo, &[u8])\n-> Result<Option<StorageKey>, Self::Error>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Return the next key in child storage in lexicographic order or `None` if there is no value.\n","sig":null,"attributes":[{"value":"/ Return the next key in child storage in lexicographic order or `None` if there is no value.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":70864,"byte_end":70959,"line_start":86,"line_end":86,"column_start":2,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":71456,"byte_end":71481,"line_start":100,"line_end":100,"column_start":5,"column_end":30},"name":"apply_to_key_values_while","qualname":"::backend::Backend::apply_to_key_values_while","value":"pub fn apply_to_key_values_while<F: FnMut(Vec<u8>, Vec<u8>) ->\nbool>(&Self, Option<&ChildInfo>, Option<&[u8]>, Option<&[u8]>, F, bool)\n-> Result<bool, Self::Error>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Iterate over storage starting at key, for a given prefix and child trie.\n Aborts as soon as `f` returns false.\n Warning, this fails at first error when usual iteration skips errors.\n If `allow_missing` is true, iteration stops when it reaches a missing trie node.\n Otherwise an error is produced.","sig":null,"attributes":[{"value":"/ Iterate over storage starting at key, for a given prefix and child trie.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":71086,"byte_end":71162,"line_start":93,"line_end":93,"column_start":2,"column_end":78}},{"value":"/ Aborts as soon as `f` returns false.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":71164,"byte_end":71204,"line_start":94,"line_end":94,"column_start":2,"column_end":42}},{"value":"/ Warning, this fails at first error when usual iteration skips errors.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":71206,"byte_end":71279,"line_start":95,"line_end":95,"column_start":2,"column_end":75}},{"value":"/ If `allow_missing` is true, iteration stops when it reaches a missing trie node.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":71281,"byte_end":71365,"line_start":96,"line_end":96,"column_start":2,"column_end":86}},{"value":"/ Otherwise an error is produced.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":71367,"byte_end":71402,"line_start":97,"line_end":97,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":71404,"byte_end":71407,"line_start":98,"line_end":98,"column_start":2,"column_end":5}},{"value":"/ Returns `true` if trie end is reached.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":71409,"byte_end":71451,"line_start":99,"line_end":99,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":71804,"byte_end":71823,"line_start":111,"line_end":111,"column_start":5,"column_end":24},"name":"apply_to_keys_while","qualname":"::backend::Backend::apply_to_keys_while","value":"pub fn apply_to_keys_while<F: FnMut(&[u8]) ->\nbool>(&Self, Option<&ChildInfo>, Option<&[u8]>, F)","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Retrieve all entries keys of storage and call `f` for each of those keys.\n Aborts as soon as `f` returns false.\n","sig":null,"attributes":[{"value":"/ Retrieve all entries keys of storage and call `f` for each of those keys.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":71680,"byte_end":71757,"line_start":109,"line_end":109,"column_start":2,"column_end":79}},{"value":"/ Aborts as soon as `f` returns false.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":71759,"byte_end":71799,"line_start":110,"line_end":110,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":72042,"byte_end":72062,"line_start":120,"line_end":120,"column_start":5,"column_end":25},"name":"for_keys_with_prefix","qualname":"::backend::Backend::for_keys_with_prefix","value":"pub fn for_keys_with_prefix<F: FnMut(&[u8]) -> ()>(&Self, &[u8], F)","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Retrieve all entries keys which start with the given prefix and\n call `f` for each of those keys.\n","sig":null,"attributes":[{"value":"/ Retrieve all entries keys which start with the given prefix and","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":71932,"byte_end":71999,"line_start":118,"line_end":118,"column_start":2,"column_end":69}},{"value":"/ call `f` for each of those keys.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":72001,"byte_end":72037,"line_start":119,"line_end":119,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":72299,"byte_end":72325,"line_start":126,"line_end":126,"column_start":5,"column_end":31},"name":"for_key_values_with_prefix","qualname":"::backend::Backend::for_key_values_with_prefix","value":"pub fn for_key_values_with_prefix<F: FnMut(&[u8], &[u8]) ->\n()>(&Self, &[u8], F)","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Retrieve all entries keys and values of which start with the given prefix and\n call `f` for each of those keys.\n","sig":null,"attributes":[{"value":"/ Retrieve all entries keys and values of which start with the given prefix and","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":72175,"byte_end":72256,"line_start":124,"line_end":124,"column_start":2,"column_end":83}},{"value":"/ call `f` for each of those keys.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":72258,"byte_end":72294,"line_start":125,"line_end":125,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":72497,"byte_end":72523,"line_start":130,"line_end":130,"column_start":5,"column_end":31},"name":"for_child_keys_with_prefix","qualname":"::backend::Backend::for_child_keys_with_prefix","value":"pub fn for_child_keys_with_prefix<F: FnMut(&[u8]) ->\n()>(&Self, &ChildInfo, &[u8], F)","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Retrieve all child entries keys which start with the given prefix and\n call `f` for each of those keys.\n","sig":null,"attributes":[{"value":"/ Retrieve all child entries keys which start with the given prefix and","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":72381,"byte_end":72454,"line_start":128,"line_end":128,"column_start":2,"column_end":75}},{"value":"/ call `f` for each of those keys.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":72456,"byte_end":72492,"line_start":129,"line_end":129,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":72811,"byte_end":72823,"line_start":140,"line_end":140,"column_start":5,"column_end":17},"name":"storage_root","qualname":"::backend::Backend::storage_root","value":"pub fn storage_root<'a,\nimpl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>: Iterator<Item =\n(&'a [u8],\nOption<&'a [u8]>)>>(&Self, impl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>,\nStateVersion) -> (H::Out, Self::Transaction) where H::Out: Ord","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Calculate the storage root, with given delta over what is already stored in\n the backend, and produce a \"transaction\" that can be used to commit.\n Does not include child storage updates.\n","sig":null,"attributes":[{"value":"/ Calculate the storage root, with given delta over what is already stored in","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":72608,"byte_end":72687,"line_start":137,"line_end":137,"column_start":2,"column_end":81}},{"value":"/ the backend, and produce a \"transaction\" that can be used to commit.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":72689,"byte_end":72761,"line_start":138,"line_end":138,"column_start":2,"column_end":74}},{"value":"/ Does not include child storage updates.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":72763,"byte_end":72806,"line_start":139,"line_end":139,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":73236,"byte_end":73254,"line_start":151,"line_end":151,"column_start":5,"column_end":23},"name":"child_storage_root","qualname":"::backend::Backend::child_storage_root","value":"pub fn child_storage_root<'a,\nimpl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>: Iterator<Item =\n(&'a [u8],\nOption<&'a [u8]>)>>(&Self, &ChildInfo,\nimpl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>, StateVersion)\n-> (H::Out, bool, Self::Transaction) where H::Out: Ord","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Calculate the child storage root, with given delta over what is already stored in\n the backend, and produce a \"transaction\" that can be used to commit. The second argument\n is true if child storage root equals default storage root.\n","sig":null,"attributes":[{"value":"/ Calculate the child storage root, with given delta over what is already stored in","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":72988,"byte_end":73073,"line_start":148,"line_end":148,"column_start":2,"column_end":87}},{"value":"/ the backend, and produce a \"transaction\" that can be used to commit. The second argument","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":73075,"byte_end":73167,"line_start":149,"line_end":149,"column_start":2,"column_end":94}},{"value":"/ is true if child storage root equals default storage root.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":73169,"byte_end":73231,"line_start":150,"line_end":150,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":73495,"byte_end":73500,"line_start":161,"line_end":161,"column_start":5,"column_end":10},"name":"pairs","qualname":"::backend::Backend::pairs","value":"pub fn pairs(&Self) -> Vec<(StorageKey, StorageValue)>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Get all key/value pairs into a Vec.\n","sig":null,"attributes":[{"value":"/ Get all key/value pairs into a Vec.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":73451,"byte_end":73490,"line_start":160,"line_end":160,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":73585,"byte_end":73589,"line_start":164,"line_end":164,"column_start":5,"column_end":9},"name":"keys","qualname":"::backend::Backend::keys","value":"pub fn keys(&Self, &[u8]) -> Vec<StorageKey>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Get all keys with given prefix\n","sig":null,"attributes":[{"value":"/ Get all keys with given prefix","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":73546,"byte_end":73580,"line_start":163,"line_end":163,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":73791,"byte_end":73801,"line_start":171,"line_end":171,"column_start":5,"column_end":15},"name":"child_keys","qualname":"::backend::Backend::child_keys","value":"pub fn child_keys(&Self, &ChildInfo, &[u8]) -> Vec<StorageKey>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Get all keys of child storage with given prefix\n","sig":null,"attributes":[{"value":"/ Get all keys of child storage with given prefix","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":73735,"byte_end":73786,"line_start":170,"line_end":170,"column_start":2,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":74028,"byte_end":74043,"line_start":178,"line_end":178,"column_start":5,"column_end":20},"name":"as_trie_backend","qualname":"::backend::Backend::as_trie_backend","value":"pub fn as_trie_backend(&Self)\n-> Option<&TrieBackend<Self::TrieBackendStorage, H>>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Try convert into trie backend.\n","sig":null,"attributes":[{"value":"/ Try convert into trie backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":73989,"byte_end":74023,"line_start":177,"line_end":177,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":74316,"byte_end":74333,"line_start":184,"line_end":184,"column_start":5,"column_end":22},"name":"full_storage_root","qualname":"::backend::Backend::full_storage_root","value":"pub fn full_storage_root<'a,\nimpl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>: Iterator<Item =\n(&'a [u8], Option<&'a [u8]>)>,\nimpl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>: Iterator<Item =\n(&'a [u8], Option<&'a [u8]>)>,\nimpl Iterator<Item =\n(&'a ChildInfo, impl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>)>: Iterator<Item\n=\n(&'a ChildInfo,\nimpl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>)>>(&Self,\nimpl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>,\nimpl Iterator<Item =\n(&'a ChildInfo, impl Iterator<Item = (&'a [u8], Option<&'a [u8]>)>)>,\nStateVersion) -> (H::Out, Self::Transaction) where H::Out: Ord + Encode","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Calculate the storage root, with given delta over what is already stored\n in the backend, and produce a \"transaction\" that can be used to commit.\n Does include child storage updates.\n","sig":null,"attributes":[{"value":"/ Calculate the storage root, with given delta over what is already stored","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":74117,"byte_end":74193,"line_start":181,"line_end":181,"column_start":2,"column_end":78}},{"value":"/ in the backend, and produce a \"transaction\" that can be used to commit.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":74195,"byte_end":74270,"line_start":182,"line_end":182,"column_start":2,"column_end":77}},{"value":"/ Does include child storage updates.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":74272,"byte_end":74311,"line_start":183,"line_end":183,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":75549,"byte_end":75571,"line_start":222,"line_end":222,"column_start":5,"column_end":27},"name":"register_overlay_stats","qualname":"::backend::Backend::register_overlay_stats","value":"pub fn register_overlay_stats(&Self, &crate::stats::StateMachineStats)","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Register stats from overlay of state machine.","sig":null,"attributes":[{"value":"/ Register stats from overlay of state machine.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":75451,"byte_end":75500,"line_start":219,"line_end":219,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":75502,"byte_end":75505,"line_start":220,"line_end":220,"column_start":2,"column_end":5}},{"value":"/ By default nothing is registered.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":75507,"byte_end":75544,"line_start":221,"line_end":221,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":75811,"byte_end":75821,"line_start":228,"line_end":228,"column_start":5,"column_end":15},"name":"usage_info","qualname":"::backend::Backend::usage_info","value":"pub fn usage_info(&Self) -> UsageInfo","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Query backend usage statistics (i/o, memory)","sig":null,"attributes":[{"value":"/ Query backend usage statistics (i/o, memory)","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":75624,"byte_end":75672,"line_start":224,"line_end":224,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":75674,"byte_end":75677,"line_start":225,"line_end":225,"column_start":2,"column_end":5}},{"value":"/ Not all implementations are expected to be able to do this. In the","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":75679,"byte_end":75749,"line_start":226,"line_end":226,"column_start":2,"column_end":72}},{"value":"/ case when they don't, empty statistics is returned.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":75751,"byte_end":75806,"line_start":227,"line_end":227,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":75878,"byte_end":75882,"line_start":231,"line_end":231,"column_start":5,"column_end":9},"name":"wipe","qualname":"::backend::Backend::wipe","value":"pub fn wipe(&Self) -> Result<(), Self::Error>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Wipe the state database.\n","sig":null,"attributes":[{"value":"/ Wipe the state database.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":75845,"byte_end":75873,"line_start":230,"line_end":230,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":75988,"byte_end":75994,"line_start":236,"line_end":236,"column_start":5,"column_end":11},"name":"commit","qualname":"::backend::Backend::commit","value":"pub fn commit(&Self, H::Out, Self::Transaction, StorageCollection,\nChildStorageCollection) -> Result<(), Self::Error>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Commit given transaction to storage.\n","sig":null,"attributes":[{"value":"/ Commit given transaction to storage.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":75943,"byte_end":75983,"line_start":235,"line_end":235,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":76194,"byte_end":76210,"line_start":247,"line_end":247,"column_start":5,"column_end":21},"name":"read_write_count","qualname":"::backend::Backend::read_write_count","value":"pub fn read_write_count(&Self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Get the read/write count of the db\n","sig":null,"attributes":[{"value":"/ Get the read/write count of the db","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":76151,"byte_end":76189,"line_start":246,"line_end":246,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":76311,"byte_end":76333,"line_start":252,"line_end":252,"column_start":5,"column_end":27},"name":"reset_read_write_count","qualname":"::backend::Backend::reset_read_write_count","value":"pub fn reset_read_write_count(&Self)","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Get the read/write count of the db\n","sig":null,"attributes":[{"value":"/ Get the read/write count of the db","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":76268,"byte_end":76306,"line_start":251,"line_end":251,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":76422,"byte_end":76435,"line_start":257,"line_end":257,"column_start":5,"column_end":18},"name":"get_whitelist","qualname":"::backend::Backend::get_whitelist","value":"pub fn get_whitelist(&Self) -> Vec<TrackedStorageKey>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Get the whitelist for tracking db reads/writes\n","sig":null,"attributes":[{"value":"/ Get the whitelist for tracking db reads/writes","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":76367,"byte_end":76417,"line_start":256,"line_end":256,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":76555,"byte_end":76568,"line_start":262,"line_end":262,"column_start":5,"column_end":18},"name":"set_whitelist","qualname":"::backend::Backend::set_whitelist","value":"pub fn set_whitelist(&Self, Vec<TrackedStorageKey>)","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Update the whitelist for tracking db reads/writes\n","sig":null,"attributes":[{"value":"/ Update the whitelist for tracking db reads/writes","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":76497,"byte_end":76550,"line_start":261,"line_end":261,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":76636,"byte_end":76646,"line_start":265,"line_end":265,"column_start":5,"column_end":15},"name":"proof_size","qualname":"::backend::Backend::proof_size","value":"pub fn proof_size(&Self) -> Option<u32>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Estimate proof size\n","sig":null,"attributes":[{"value":"/ Estimate proof size","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":76608,"byte_end":76631,"line_start":264,"line_end":264,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":76743,"byte_end":76768,"line_start":270,"line_end":270,"column_start":5,"column_end":30},"name":"get_read_and_written_keys","qualname":"::backend::Backend::get_read_and_written_keys","value":"pub fn get_read_and_written_keys(&Self) -> Vec<(Vec<u8>, u32, u32, bool)>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Extend storage info for benchmarking db\n","sig":null,"attributes":[{"value":"/ Extend storage info for benchmarking db","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":76695,"byte_end":76738,"line_start":269,"line_end":269,"column_start":2,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":107},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":76908,"byte_end":76919,"line_start":276,"line_end":276,"column_start":11,"column_end":22},"name":"Consolidate","qualname":"::backend::Consolidate","value":"Consolidate","parent":null,"children":[{"krate":0,"index":108}],"decl_id":null,"docs":" Trait that allows consolidate two transactions together.\n","sig":null,"attributes":[{"value":"/ Trait that allows consolidate two transactions together.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":76837,"byte_end":76897,"line_start":275,"line_end":275,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":76970,"byte_end":76981,"line_start":278,"line_end":278,"column_start":5,"column_end":16},"name":"consolidate","qualname":"::backend::Consolidate::consolidate","value":"pub fn consolidate(&mut Self, Self)","parent":{"krate":0,"index":107},"children":[],"decl_id":null,"docs":" Consolidate two transactions into one.\n","sig":null,"attributes":[{"value":"/ Consolidate two transactions into one.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":76923,"byte_end":76965,"line_start":277,"line_end":277,"column_start":2,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":117},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":77558,"byte_end":77576,"line_start":305,"line_end":305,"column_start":12,"column_end":30},"name":"BackendRuntimeCode","qualname":"::backend::BackendRuntimeCode","value":"BackendRuntimeCode {  }","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122}],"decl_id":null,"docs":" Wrapper to create a [`RuntimeCode`] from a type that implements [`Backend`].\n","sig":null,"attributes":[{"value":"/ Wrapper to create a [`RuntimeCode`] from a type that implements [`Backend`].","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":77442,"byte_end":77522,"line_start":303,"line_end":303,"column_start":1,"column_end":81}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":77523,"byte_end":77546,"line_start":304,"line_end":304,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":78120,"byte_end":78123,"line_start":329,"line_end":329,"column_start":9,"column_end":12},"name":"new","qualname":"<BackendRuntimeCode>::new","value":"pub fn new(&'a B) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance.\n","sig":null,"attributes":[{"value":"/ Create a new instance.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":78085,"byte_end":78111,"line_start":328,"line_end":328,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":78282,"byte_end":78294,"line_start":334,"line_end":334,"column_start":9,"column_end":21},"name":"runtime_code","qualname":"<BackendRuntimeCode>::runtime_code","value":"pub fn runtime_code(&Self) -> Result<RuntimeCode, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Return the [`RuntimeCode`] build from the wrapped `backend`.\n","sig":null,"attributes":[{"value":"/ Return the [`RuntimeCode`] build from the wrapped `backend`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":78209,"byte_end":78273,"line_start":333,"line_end":333,"column_start":2,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2182},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":80050,"byte_end":80068,"line_start":43,"line_end":43,"column_start":12,"column_end":30},"name":"BasicExternalities","qualname":"::basic::BasicExternalities","value":"BasicExternalities {  }","parent":null,"children":[{"krate":0,"index":2183},{"krate":0,"index":2184}],"decl_id":null,"docs":" Simple Map-based Externalities impl.\n","sig":null,"attributes":[{"value":"/ Simple Map-based Externalities impl.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":79981,"byte_end":80021,"line_start":41,"line_end":41,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":80201,"byte_end":80204,"line_start":50,"line_end":50,"column_start":9,"column_end":12},"name":"new","qualname":"<BasicExternalities>::new","value":"pub fn new(Storage) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `BasicExternalities`\n","sig":null,"attributes":[{"value":"/ Create a new instance of `BasicExternalities`","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":80143,"byte_end":80192,"line_start":49,"line_end":49,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":80355,"byte_end":80364,"line_start":55,"line_end":55,"column_start":9,"column_end":18},"name":"new_empty","qualname":"<BasicExternalities>::new_empty","value":"pub fn new_empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" New basic externalities with empty storage.\n","sig":null,"attributes":[{"value":"/ New basic externalities with empty storage.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":80299,"byte_end":80346,"line_start":54,"line_end":54,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":80443,"byte_end":80449,"line_start":60,"line_end":60,"column_start":9,"column_end":15},"name":"insert","qualname":"<BasicExternalities>::insert","value":"pub fn insert(&mut Self, StorageKey, StorageValue) -> Option<StorageValue>","parent":null,"children":[],"decl_id":null,"docs":" Insert key/value\n","sig":null,"attributes":[{"value":"/ Insert key/value","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":80414,"byte_end":80434,"line_start":59,"line_end":59,"column_start":2,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":80606,"byte_end":80619,"line_start":65,"line_end":65,"column_start":9,"column_end":22},"name":"into_storages","qualname":"<BasicExternalities>::into_storages","value":"pub fn into_storages(Self) -> Storage","parent":null,"children":[],"decl_id":null,"docs":" Consume self and returns inner storages\n","sig":null,"attributes":[{"value":"/ Consume self and returns inner storages","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":80554,"byte_end":80597,"line_start":64,"line_end":64,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":80842,"byte_end":80862,"line_start":72,"line_end":72,"column_start":9,"column_end":29},"name":"execute_with_storage","qualname":"<BasicExternalities>::execute_with_storage","value":"pub fn execute_with_storage<R, impl FnOnce() -> R: FnOnce() ->\nR>(&mut sp_core::storage::Storage, impl FnOnce() -> R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Execute the given closure `f` with the externalities set and initialized with `storage`.","sig":null,"attributes":[{"value":"/ Execute the given closure `f` with the externalities set and initialized with `storage`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":80657,"byte_end":80749,"line_start":69,"line_end":69,"column_start":2,"column_end":94}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":80751,"byte_end":80754,"line_start":70,"line_end":70,"column_start":2,"column_end":5}},{"value":"/ Returns the result of the closure and updates `storage` with all changes.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":80756,"byte_end":80833,"line_start":71,"line_end":71,"column_start":2,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":81350,"byte_end":81362,"line_start":94,"line_end":94,"column_start":9,"column_end":21},"name":"execute_with","qualname":"<BasicExternalities>::execute_with","value":"pub fn execute_with<R, impl FnOnce() -> R: FnOnce() ->\nR>(&mut Self, impl FnOnce() -> R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Execute the given closure while `self` is set as externalities.","sig":null,"attributes":[{"value":"/ Execute the given closure while `self` is set as externalities.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":81223,"byte_end":81290,"line_start":91,"line_end":91,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":81292,"byte_end":81295,"line_start":92,"line_end":92,"column_start":2,"column_end":5}},{"value":"/ Returns the result of the given closure.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":81297,"byte_end":81341,"line_start":93,"line_end":93,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":81511,"byte_end":81521,"line_start":99,"line_end":99,"column_start":9,"column_end":19},"name":"extensions","qualname":"<BasicExternalities>::extensions","value":"pub fn extensions(&mut Self) -> &mut Extensions","parent":null,"children":[],"decl_id":null,"docs":" List of active extensions.\n","sig":null,"attributes":[{"value":"/ List of active extensions.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":81472,"byte_end":81502,"line_start":98,"line_end":98,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":81617,"byte_end":81635,"line_start":104,"line_end":104,"column_start":9,"column_end":27},"name":"register_extension","qualname":"<BasicExternalities>::register_extension","value":"pub fn register_extension<impl Extension: Extension>(&mut Self,\nimpl Extension)","parent":null,"children":[],"decl_id":null,"docs":" Register an extension.\n","sig":null,"attributes":[{"value":"/ Register an extension.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":81582,"byte_end":81608,"line_start":103,"line_end":103,"column_start":2,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":290},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":92877,"byte_end":92882,"line_start":24,"line_end":24,"column_start":11,"column_end":16},"name":"Error","qualname":"::error::Error","value":"Error: 'static + fmt::Debug + fmt::Display + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" State Machine Error bound.","sig":null,"attributes":[{"value":"/ State Machine Error bound.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":92760,"byte_end":92790,"line_start":21,"line_end":21,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":92791,"byte_end":92794,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This should reflect Wasm error type bound for future compatibility.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":92795,"byte_end":92866,"line_start":23,"line_end":23,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2200},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":93495,"byte_end":93502,"line_start":38,"line_end":38,"column_start":2,"column_end":9},"name":"Backend","qualname":"::error::ExecutionError::Backend","value":"ExecutionError::Backend(crate::DefaultError)","parent":{"krate":0,"index":2196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Backend error {0:?}\")","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":93463,"byte_end":93491,"line_start":37,"line_end":37,"column_start":30,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2203},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":93607,"byte_end":93628,"line_start":41,"line_end":41,"column_start":2,"column_end":23},"name":"CodeEntryDoesNotExist","qualname":"::error::ExecutionError::CodeEntryDoesNotExist","value":"ExecutionError::CodeEntryDoesNotExist","parent":{"krate":0,"index":2196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"`:code` entry does not exist in storage\")","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":93555,"byte_end":93603,"line_start":40,"line_end":40,"column_start":30,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2205},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":93697,"byte_end":93718,"line_start":44,"line_end":44,"column_start":2,"column_end":23},"name":"UnableToGenerateProof","qualname":"::error::ExecutionError::UnableToGenerateProof","value":"ExecutionError::UnableToGenerateProof","parent":{"krate":0,"index":2196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unable to generate proof\")","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":93660,"byte_end":93693,"line_start":43,"line_end":43,"column_start":30,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2207},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":93786,"byte_end":93798,"line_start":47,"line_end":47,"column_start":2,"column_end":14},"name":"InvalidProof","qualname":"::error::ExecutionError::InvalidProof","value":"ExecutionError::InvalidProof","parent":{"krate":0,"index":2196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid execution proof\")","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":93750,"byte_end":93782,"line_start":46,"line_end":46,"column_start":30,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":2196},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":93417,"byte_end":93431,"line_start":36,"line_end":36,"column_start":10,"column_end":24},"name":"ExecutionError","qualname":"::error::ExecutionError","value":"pub enum ExecutionError {\n    Backend(crate::DefaultError),\n    CodeEntryDoesNotExist,\n    UnableToGenerateProof,\n    InvalidProof,\n}","parent":null,"children":[{"krate":0,"index":2200},{"krate":0,"index":2203},{"krate":0,"index":2205},{"krate":0,"index":2207}],"decl_id":null,"docs":" Externalities Error.","sig":null,"attributes":[{"value":"/ Externalities Error.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":93013,"byte_end":93037,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":93038,"byte_end":93041,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Externalities are not really allowed to have errors, since it's assumed that dependent code","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":93042,"byte_end":93137,"line_start":30,"line_end":30,"column_start":1,"column_end":96}},{"value":"/ would not be executed unless externalities were available. This is included for completeness,","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":93138,"byte_end":93235,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"/ and as a transition away from the pre-existing framework.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":93236,"byte_end":93297,"line_start":32,"line_end":32,"column_start":1,"column_end":62}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":93330,"byte_end":93352,"line_start":34,"line_end":34,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":406},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":96777,"byte_end":96780,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"Ext","qualname":"::ext::Ext","value":"Ext { id }","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414}],"decl_id":null,"docs":" Wraps a read-only backend, call executor, and current overlayed changes.\n","sig":null,"attributes":[{"value":"/ Wraps a read-only backend, call executor, and current overlayed changes.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":96689,"byte_end":96765,"line_start":92,"line_end":92,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":413},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":97134,"byte_end":97136,"line_start":105,"line_end":105,"column_start":6,"column_end":8},"name":"id","qualname":"::ext::Ext::id","value":"u16","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Pseudo-unique id used for tracing.\n","sig":null,"attributes":[{"value":"/ Pseudo-unique id used for tracing.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":97090,"byte_end":97128,"line_start":104,"line_end":104,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":97713,"byte_end":97716,"line_start":128,"line_end":128,"column_start":9,"column_end":12},"name":"new","qualname":"<Ext>::new","value":"pub fn new(&'a mut OverlayedChanges,\n&'a mut StorageTransactionCache<B::Transaction, H>, &'a B,\nOption<&'a mut sp_externalities::Extensions>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Ext` from overlayed changes and read-only backend\n","sig":null,"attributes":[{"value":"/ Create a new `Ext` from overlayed changes and read-only backend","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":97612,"byte_end":97679,"line_start":126,"line_end":126,"column_start":2,"column_end":69}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":97681,"byte_end":97704,"line_start":127,"line_end":127,"column_start":2,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":563},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":126864,"byte_end":126874,"line_start":30,"line_end":30,"column_start":8,"column_end":18},"name":"new_in_mem","qualname":"::in_memory_backend::new_in_mem","value":"pub fn new_in_mem<H: Hasher>() -> TrieBackend<MemoryDB<H>, H> where\nH::Out: Codec + Ord","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty instance of in-memory backend.\n","sig":null,"attributes":[{"value":"/ Create a new empty instance of in-memory backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":126803,"byte_end":126856,"line_start":29,"line_end":29,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":127203,"byte_end":127209,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"name":"update","qualname":"<TrieBackend<MemoryDB<H>, H>>::update","value":"pub fn update<T: IntoIterator<Item =\n(Option<ChildInfo>, StorageCollection)>>(&Self, T, StateVersion) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Copy the state, with applied updates\n","sig":null,"attributes":[{"value":"/ Copy the state, with applied updates","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":127154,"byte_end":127194,"line_start":43,"line_end":43,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":127472,"byte_end":127478,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"name":"insert","qualname":"<TrieBackend<MemoryDB<H>, H>>::insert","value":"pub fn insert<T: IntoIterator<Item =\n(Option<ChildInfo>, StorageCollection)>>(&mut Self, T, StateVersion)","parent":null,"children":[],"decl_id":null,"docs":" Insert values into backend trie.\n","sig":null,"attributes":[{"value":"/ Insert values into backend trie.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":127427,"byte_end":127463,"line_start":54,"line_end":54,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":128062,"byte_end":128076,"line_start":73,"line_end":73,"column_start":9,"column_end":23},"name":"update_backend","qualname":"<TrieBackend<MemoryDB<H>, H>>::update_backend","value":"pub fn update_backend(&Self, H::Out, MemoryDB<H>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Merge trie nodes into this backend.\n","sig":null,"attributes":[{"value":"/ Merge trie nodes into this backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":128014,"byte_end":128053,"line_start":72,"line_end":72,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":128333,"byte_end":128350,"line_start":80,"line_end":80,"column_start":9,"column_end":26},"name":"apply_transaction","qualname":"<TrieBackend<MemoryDB<H>, H>>::apply_transaction","value":"pub fn apply_transaction(&mut Self, H::Out, MemoryDB<H>)","parent":null,"children":[],"decl_id":null,"docs":" Apply the given transaction to this backend and set the root to the given value.\n","sig":null,"attributes":[{"value":"/ Apply the given transaction to this backend and set the root to the given value.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":128240,"byte_end":128324,"line_start":79,"line_end":79,"column_start":2,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":128600,"byte_end":128602,"line_start":87,"line_end":87,"column_start":9,"column_end":11},"name":"eq","qualname":"<TrieBackend<MemoryDB<H>, H>>::eq","value":"pub fn eq(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compare with another in-memory backend.\n","sig":null,"attributes":[{"value":"/ Compare with another in-memory backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":128548,"byte_end":128591,"line_start":86,"line_end":86,"column_start":2,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":2592},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":166948,"byte_end":166965,"line_start":45,"line_end":45,"column_start":12,"column_end":29},"name":"NoOpenTransaction","qualname":"::overlayed_changes::changeset::NoOpenTransaction","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned when trying to commit or rollback while no transaction is open or\n when the runtime is trying to close a transaction started by the client.\n","sig":null,"attributes":[{"value":"/ Error returned when trying to commit or rollback while no transaction is open or","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":166721,"byte_end":166805,"line_start":41,"line_end":41,"column_start":1,"column_end":85}},{"value":"/ when the runtime is trying to close a transaction started by the client.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":166806,"byte_end":166882,"line_start":42,"line_end":42,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":2596},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":167118,"byte_end":167134,"line_start":50,"line_end":50,"column_start":12,"column_end":28},"name":"AlreadyInRuntime","qualname":"::overlayed_changes::changeset::AlreadyInRuntime","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error when calling `enter_runtime` when already being in runtime execution mode.\n","sig":null,"attributes":[{"value":"/ Error when calling `enter_runtime` when already being in runtime execution mode.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":166968,"byte_end":167052,"line_start":47,"line_end":47,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":2600},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":167281,"byte_end":167293,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"NotInRuntime","qualname":"::overlayed_changes::changeset::NotInRuntime","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error when calling `exit_runtime` when not being in runtime exection mdde.\n","sig":null,"attributes":[{"value":"/ Error when calling `exit_runtime` when not being in runtime exection mdde.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":167137,"byte_end":167215,"line_start":52,"line_end":52,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":2627},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":167982,"byte_end":167996,"line_start":78,"line_end":78,"column_start":12,"column_end":26},"name":"OverlayedEntry","qualname":"::overlayed_changes::changeset::OverlayedEntry","value":"OverlayedEntry {  }","parent":null,"children":[{"krate":0,"index":2629}],"decl_id":null,"docs":" An overlay that contains all versions of a value for a specific key.\n","sig":null,"attributes":[{"value":"/ An overlay that contains all versions of a value for a specific key.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":167837,"byte_end":167909,"line_start":75,"line_end":75,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":2636},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":168662,"byte_end":168674,"line_start":98,"line_end":98,"column_start":12,"column_end":24},"name":"OverlayedMap","qualname":"::overlayed_changes::changeset::OverlayedMap","value":"OverlayedMap {  }","parent":null,"children":[{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642}],"decl_id":null,"docs":" Holds a set of changes with the ability modify them using nested transactions.\n","sig":null,"attributes":[{"value":"/ Holds a set of changes with the ability modify them using nested transactions.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":168544,"byte_end":168626,"line_start":96,"line_end":96,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":169847,"byte_end":169856,"line_start":132,"line_end":132,"column_start":9,"column_end":18},"name":"value_ref","qualname":"<OverlayedEntry<V>>::value_ref","value":"pub fn value_ref(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" The value as seen by the current transaction.\n","sig":null,"attributes":[{"value":"/ The value as seen by the current transaction.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":169789,"byte_end":169838,"line_start":131,"line_end":131,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":170001,"byte_end":170011,"line_start":137,"line_end":137,"column_start":9,"column_end":19},"name":"into_value","qualname":"<OverlayedEntry<V>>::into_value","value":"pub fn into_value(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" The value as seen by the current transaction.\n","sig":null,"attributes":[{"value":"/ The value as seen by the current transaction.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":169943,"byte_end":169992,"line_start":136,"line_end":136,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":170169,"byte_end":170179,"line_start":142,"line_end":142,"column_start":9,"column_end":19},"name":"extrinsics","qualname":"<OverlayedEntry<V>>::extrinsics","value":"pub fn extrinsics(&Self) -> BTreeSet<u32>","parent":null,"children":[],"decl_id":null,"docs":" Unique list of extrinsic indices which modified the value.\n","sig":null,"attributes":[{"value":"/ Unique list of extrinsic indices which modified the value.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":170098,"byte_end":170160,"line_start":141,"line_end":141,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":171541,"byte_end":171546,"line_start":184,"line_end":184,"column_start":9,"column_end":14},"name":"value","qualname":"<OverlayedEntry<Option<StorageValue>>>::value","value":"pub fn value(&Self) -> Option<&StorageValue>","parent":null,"children":[],"decl_id":null,"docs":" The value as seen by the current transaction.\n","sig":null,"attributes":[{"value":"/ The value as seen by the current transaction.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":171483,"byte_end":171532,"line_start":183,"line_end":183,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":172251,"byte_end":172262,"line_start":202,"line_end":202,"column_start":9,"column_end":20},"name":"spawn_child","qualname":"<OverlayedMap<K, V>>::spawn_child","value":"pub fn spawn_child(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new changeset at the same transaction state but without any contents.","sig":null,"attributes":[{"value":"/ Create a new changeset at the same transaction state but without any contents.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":171994,"byte_end":172076,"line_start":198,"line_end":198,"column_start":2,"column_end":84}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":172078,"byte_end":172081,"line_start":199,"line_end":199,"column_start":2,"column_end":5}},{"value":"/ This changeset might be created when there are already open transactions.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":172083,"byte_end":172160,"line_start":200,"line_end":200,"column_start":2,"column_end":79}},{"value":"/ We need to catch up here so that the child is at the same transaction depth.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":172162,"byte_end":172242,"line_start":201,"line_end":201,"column_start":2,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":172603,"byte_end":172611,"line_start":213,"line_end":213,"column_start":9,"column_end":17},"name":"is_empty","qualname":"<OverlayedMap<K, V>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if no changes at all are contained in the change set.\n","sig":null,"attributes":[{"value":"/ True if no changes at all are contained in the change set.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":172532,"byte_end":172594,"line_start":212,"line_end":212,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":172741,"byte_end":172744,"line_start":218,"line_end":218,"column_start":9,"column_end":12},"name":"get","qualname":"<OverlayedMap<K, V>>::get","value":"pub fn get<Q>(&Self, &Q) -> Option<&OverlayedEntry<V>> where\nK: sp_std::borrow::Borrow<Q>, Q: Ord + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Get an optional reference to the value stored for the specified key.\n","sig":null,"attributes":[{"value":"/ Get an optional reference to the value stored for the specified key.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":172660,"byte_end":172732,"line_start":217,"line_end":217,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":173011,"byte_end":173014,"line_start":229,"line_end":229,"column_start":9,"column_end":12},"name":"set","qualname":"<OverlayedMap<K, V>>::set","value":"pub fn set(&mut Self, K, V, Option<u32>)","parent":null,"children":[],"decl_id":null,"docs":" Set a new value for the specified key.","sig":null,"attributes":[{"value":"/ Set a new value for the specified key.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":172884,"byte_end":172926,"line_start":226,"line_end":226,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":172928,"byte_end":172931,"line_start":227,"line_end":227,"column_start":2,"column_end":5}},{"value":"/ Can be rolled back or committed when called inside a transaction.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":172933,"byte_end":173002,"line_start":228,"line_end":228,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":173291,"byte_end":173298,"line_start":235,"line_end":235,"column_start":9,"column_end":16},"name":"changes","qualname":"<OverlayedMap<K, V>>::changes","value":"pub fn changes(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get a list of all changes as seen by current transaction.\n","sig":null,"attributes":[{"value":"/ Get a list of all changes as seen by current transaction.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":173221,"byte_end":173282,"line_start":234,"line_end":234,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":173482,"byte_end":173494,"line_start":241,"line_end":241,"column_start":9,"column_end":21},"name":"into_changes","qualname":"<OverlayedMap<K, V>>::into_changes","value":"pub fn into_changes(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get a list of all changes as seen by current transaction, consumes\n the overlay.\n","sig":null,"attributes":[{"value":"/ Get a list of all changes as seen by current transaction, consumes","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":173385,"byte_end":173455,"line_start":239,"line_end":239,"column_start":2,"column_end":72}},{"value":"/ the overlay.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":173457,"byte_end":173473,"line_start":240,"line_end":240,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":173740,"byte_end":173754,"line_start":249,"line_end":249,"column_start":9,"column_end":23},"name":"drain_commited","qualname":"<OverlayedMap<K, V>>::drain_commited","value":"pub fn drain_commited(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Consume this changeset and return all committed changes.","sig":null,"attributes":[{"value":"/ Consume this changeset and return all committed changes.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":173583,"byte_end":173643,"line_start":245,"line_end":245,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":173645,"byte_end":173648,"line_start":246,"line_end":246,"column_start":2,"column_end":5}},{"value":"/ Panics:","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":173650,"byte_end":173661,"line_start":247,"line_end":247,"column_start":2,"column_end":13}},{"value":"/ Panics if there are open transactions: `transaction_depth() > 0`","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":173663,"byte_end":173731,"line_start":248,"line_end":248,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":174134,"byte_end":174151,"line_start":257,"line_end":257,"column_start":9,"column_end":26},"name":"transaction_depth","qualname":"<OverlayedMap<K, V>>::transaction_depth","value":"pub fn transaction_depth(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current nesting depth of the transaction stack.","sig":null,"attributes":[{"value":"/ Returns the current nesting depth of the transaction stack.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":173966,"byte_end":174029,"line_start":254,"line_end":254,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":174031,"byte_end":174034,"line_start":255,"line_end":255,"column_start":2,"column_end":5}},{"value":"/ A value of zero means that no transaction is open and changes are committed on write.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":174036,"byte_end":174125,"line_start":256,"line_end":256,"column_start":2,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":174422,"byte_end":174435,"line_start":265,"line_end":265,"column_start":9,"column_end":22},"name":"enter_runtime","qualname":"<OverlayedMap<K, V>>::enter_runtime","value":"pub fn enter_runtime(&mut Self) -> Result<(), AlreadyInRuntime>","parent":null,"children":[],"decl_id":null,"docs":" Call this before transfering control to the runtime.","sig":null,"attributes":[{"value":"/ Call this before transfering control to the runtime.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":174199,"byte_end":174255,"line_start":261,"line_end":261,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":174257,"byte_end":174260,"line_start":262,"line_end":262,"column_start":2,"column_end":5}},{"value":"/ This protects all existing transactions from being removed by the runtime.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":174262,"byte_end":174340,"line_start":263,"line_end":263,"column_start":2,"column_end":80}},{"value":"/ Calling this while already inside the runtime will return an error.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":174342,"byte_end":174413,"line_start":264,"line_end":264,"column_start":2,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":174903,"byte_end":174915,"line_start":278,"line_end":278,"column_start":9,"column_end":21},"name":"exit_runtime","qualname":"<OverlayedMap<K, V>>::exit_runtime","value":"pub fn exit_runtime(&mut Self) -> Result<(), NotInRuntime>","parent":null,"children":[],"decl_id":null,"docs":" Call this when control returns from the runtime.","sig":null,"attributes":[{"value":"/ Call this when control returns from the runtime.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":174694,"byte_end":174746,"line_start":274,"line_end":274,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":174748,"byte_end":174751,"line_start":275,"line_end":275,"column_start":2,"column_end":5}},{"value":"/ This commits all dangling transaction left open by the runtime.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":174753,"byte_end":174820,"line_start":276,"line_end":276,"column_start":2,"column_end":69}},{"value":"/ Calling this while already outside the runtime will return an error.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":174822,"byte_end":174894,"line_start":277,"line_end":277,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":175873,"byte_end":175890,"line_start":303,"line_end":303,"column_start":9,"column_end":26},"name":"start_transaction","qualname":"<OverlayedMap<K, V>>::start_transaction","value":"pub fn start_transaction(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Start a new nested transaction.","sig":null,"attributes":[{"value":"/ Start a new nested transaction.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":175481,"byte_end":175516,"line_start":296,"line_end":296,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":175518,"byte_end":175521,"line_start":297,"line_end":297,"column_start":2,"column_end":5}},{"value":"/ This allows to either commit or roll back all changes that were made while this","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":175523,"byte_end":175606,"line_start":298,"line_end":298,"column_start":2,"column_end":85}},{"value":"/ transaction was open. Any transaction must be closed by either `commit_transaction`","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":175608,"byte_end":175695,"line_start":299,"line_end":299,"column_start":2,"column_end":89}},{"value":"/ or `rollback_transaction` before this overlay can be converted into storage changes.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":175697,"byte_end":175785,"line_start":300,"line_end":300,"column_start":2,"column_end":90}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":175787,"byte_end":175790,"line_start":301,"line_end":301,"column_start":2,"column_end":5}},{"value":"/ Changes made without any open transaction are committed immediately.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":175792,"byte_end":175864,"line_start":302,"line_end":302,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":176172,"byte_end":176192,"line_start":311,"line_end":311,"column_start":9,"column_end":29},"name":"rollback_transaction","qualname":"<OverlayedMap<K, V>>::rollback_transaction","value":"pub fn rollback_transaction(&mut Self) -> Result<(), NoOpenTransaction>","parent":null,"children":[],"decl_id":null,"docs":" Rollback the last transaction started by `start_transaction`.","sig":null,"attributes":[{"value":"/ Rollback the last transaction started by `start_transaction`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":175953,"byte_end":176018,"line_start":307,"line_end":307,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":176020,"byte_end":176023,"line_start":308,"line_end":308,"column_start":2,"column_end":5}},{"value":"/ Any changes made during that transaction are discarded. Returns an error if","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":176025,"byte_end":176104,"line_start":309,"line_end":309,"column_start":2,"column_end":81}},{"value":"/ there is no open transaction that can be rolled back.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":176106,"byte_end":176163,"line_start":310,"line_end":310,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":176490,"byte_end":176508,"line_start":319,"line_end":319,"column_start":9,"column_end":27},"name":"commit_transaction","qualname":"<OverlayedMap<K, V>>::commit_transaction","value":"pub fn commit_transaction(&mut Self) -> Result<(), NoOpenTransaction>","parent":null,"children":[],"decl_id":null,"docs":" Commit the last transaction started by `start_transaction`.","sig":null,"attributes":[{"value":"/ Commit the last transaction started by `start_transaction`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":176275,"byte_end":176338,"line_start":315,"line_end":315,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":176340,"byte_end":176343,"line_start":316,"line_end":316,"column_start":2,"column_end":5}},{"value":"/ Any changes made during that transaction are committed. Returns an error if","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":176345,"byte_end":176424,"line_start":317,"line_end":317,"column_start":2,"column_end":81}},{"value":"/ there is no open transaction that can be committed.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":176426,"byte_end":176481,"line_start":318,"line_end":318,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":178713,"byte_end":178719,"line_start":382,"line_end":382,"column_start":9,"column_end":15},"name":"modify","qualname":"<OverlayedChangeSet>::modify","value":"pub fn modify<impl Fn() -> StorageValue: Fn() ->\nStorageValue>(&mut Self, StorageKey, impl Fn() -> StorageValue, Option<u32>)\n-> &mut Option<StorageValue>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference for a value.","sig":null,"attributes":[{"value":"/ Get a mutable reference for a value.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":178514,"byte_end":178554,"line_start":378,"line_end":378,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":178556,"byte_end":178559,"line_start":379,"line_end":379,"column_start":2,"column_end":5}},{"value":"/ Can be rolled back or committed when called inside a transaction.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":178561,"byte_end":178630,"line_start":380,"line_end":380,"column_start":2,"column_end":71}},{"value":"must_use = \"A change was registered, so this value MUST be modified.\"","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":178632,"byte_end":178704,"line_start":381,"line_end":381,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":179462,"byte_end":179473,"line_start":409,"line_end":409,"column_start":9,"column_end":20},"name":"clear_where","qualname":"<OverlayedChangeSet>::clear_where","value":"pub fn clear_where<impl Fn(&[u8], &OverlayedValue) -> bool: Fn(&[u8],\n&OverlayedValue) ->\nbool>(&mut Self, impl Fn(&[u8], &OverlayedValue) -> bool, Option<u32>)","parent":null,"children":[],"decl_id":null,"docs":" Set all values to deleted which are matched by the predicate.","sig":null,"attributes":[{"value":"/ Set all values to deleted which are matched by the predicate.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":179312,"byte_end":179377,"line_start":406,"line_end":406,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":179379,"byte_end":179382,"line_start":407,"line_end":407,"column_start":2,"column_end":5}},{"value":"/ Can be rolled back or committed when called inside a transaction.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":179384,"byte_end":179453,"line_start":408,"line_end":408,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":179823,"byte_end":179836,"line_start":420,"line_end":420,"column_start":9,"column_end":22},"name":"changes_after","qualname":"<OverlayedChangeSet>::changes_after","value":"pub fn changes_after(&Self, &[u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get the iterator over all changes that follow the supplied `key`.\n","sig":null,"attributes":[{"value":"/ Get the iterator over all changes that follow the supplied `key`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":179745,"byte_end":179814,"line_start":419,"line_end":419,"column_start":2,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":2651},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":194751,"byte_end":194775,"line_start":27,"line_end":27,"column_start":12,"column_end":36},"name":"OffchainOverlayedChanges","qualname":"::overlayed_changes::offchain::OffchainOverlayedChanges","value":"","parent":null,"children":[],"decl_id":null,"docs":" In-memory storage for offchain workers recoding changes for the actual offchain storage\n implementation.\n","sig":null,"attributes":[{"value":"/ In-memory storage for offchain workers recoding changes for the actual offchain storage","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":194595,"byte_end":194686,"line_start":24,"line_end":24,"column_start":1,"column_end":92}},{"value":"/ implementation.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":194687,"byte_end":194706,"line_start":25,"line_end":25,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":195354,"byte_end":195363,"line_start":40,"line_end":40,"column_start":9,"column_end":18},"name":"into_iter","qualname":"<OffchainOverlayedChanges>::into_iter","value":"pub fn into_iter(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Consume the offchain storage and iterate over all key value pairs.\n","sig":null,"attributes":[{"value":"/ Consume the offchain storage and iterate over all key value pairs.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":195275,"byte_end":195345,"line_start":39,"line_end":39,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":195555,"byte_end":195559,"line_start":45,"line_end":45,"column_start":9,"column_end":13},"name":"iter","qualname":"<OffchainOverlayedChanges>::iter","value":"pub fn iter<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterate over all key value pairs by reference.\n","sig":null,"attributes":[{"value":"/ Iterate over all key value pairs by reference.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":195496,"byte_end":195546,"line_start":44,"line_end":44,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":195738,"byte_end":195743,"line_start":50,"line_end":50,"column_start":9,"column_end":14},"name":"drain","qualname":"<OffchainOverlayedChanges>::drain","value":"pub fn drain(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Drain all elements of changeset.\n","sig":null,"attributes":[{"value":"/ Drain all elements of changeset.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":195693,"byte_end":195729,"line_start":49,"line_end":49,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":195937,"byte_end":195943,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"name":"remove","qualname":"<OffchainOverlayedChanges>::remove","value":"pub fn remove(&mut Self, &[u8], &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Remove a key and its associated value from the offchain database.\n","sig":null,"attributes":[{"value":"/ Remove a key and its associated value from the offchain database.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":195859,"byte_end":195928,"line_start":54,"line_end":54,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":196177,"byte_end":196180,"line_start":62,"line_end":62,"column_start":9,"column_end":12},"name":"set","qualname":"<OffchainOverlayedChanges>::set","value":"pub fn set(&mut Self, &[u8], &[u8], &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Set the value associated with a key under a prefix to the value provided.\n","sig":null,"attributes":[{"value":"/ Set the value associated with a key under a prefix to the value provided.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":196091,"byte_end":196168,"line_start":61,"line_end":61,"column_start":2,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":196445,"byte_end":196448,"line_start":71,"line_end":71,"column_start":9,"column_end":12},"name":"get","qualname":"<OffchainOverlayedChanges>::get","value":"pub fn get(&Self, &[u8], &[u8]) -> Option<OffchainOverlayedChange>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a associated value to the given key in storage with prefix.\n","sig":null,"attributes":[{"value":"/ Obtain a associated value to the given key in storage with prefix.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":196366,"byte_end":196436,"line_start":70,"line_end":70,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":196672,"byte_end":196679,"line_start":77,"line_end":77,"column_start":9,"column_end":16},"name":"overlay","qualname":"<OffchainOverlayedChanges>::overlay","value":"pub fn overlay(&Self)\n-> &OverlayedMap<(Vec<u8>, Vec<u8>), OffchainOverlayedChange>","parent":null,"children":[],"decl_id":null,"docs":" Reference to inner change set.\n","sig":null,"attributes":[{"value":"/ Reference to inner change set.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":196629,"byte_end":196663,"line_start":76,"line_end":76,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":196817,"byte_end":196828,"line_start":82,"line_end":82,"column_start":9,"column_end":20},"name":"overlay_mut","qualname":"<OffchainOverlayedChanges>::overlay_mut","value":"pub fn overlay_mut(&mut Self)\n-> &mut OverlayedMap<(Vec<u8>, Vec<u8>), OffchainOverlayedChange>","parent":null,"children":[],"decl_id":null,"docs":" Mutable reference to inner change set.\n","sig":null,"attributes":[{"value":"/ Mutable reference to inner change set.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":196766,"byte_end":196808,"line_start":81,"line_end":81,"column_start":2,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":819},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":134075,"byte_end":134085,"line_start":51,"line_end":51,"column_start":10,"column_end":20},"name":"StorageKey","qualname":"::overlayed_changes::StorageKey","value":"Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Storage key.\n","sig":null,"attributes":[{"value":"/ Storage key.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":134049,"byte_end":134065,"line_start":50,"line_end":50,"column_start":1,"column_end":17}}]},{"kind":"Type","id":{"krate":0,"index":820},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":134126,"byte_end":134138,"line_start":54,"line_end":54,"column_start":10,"column_end":22},"name":"StorageValue","qualname":"::overlayed_changes::StorageValue","value":"Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Storage value.\n","sig":null,"attributes":[{"value":"/ Storage value.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":134098,"byte_end":134116,"line_start":53,"line_end":53,"column_start":1,"column_end":19}}]},{"kind":"Type","id":{"krate":0,"index":821},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":134199,"byte_end":134216,"line_start":57,"line_end":57,"column_start":10,"column_end":27},"name":"StorageCollection","qualname":"::overlayed_changes::StorageCollection","value":"Vec<(StorageKey, Option<StorageValue>)>","parent":null,"children":[],"decl_id":null,"docs":" In memory array of storage values.\n","sig":null,"attributes":[{"value":"/ In memory array of storage values.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":134151,"byte_end":134189,"line_start":56,"line_end":56,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":822},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":134335,"byte_end":134357,"line_start":60,"line_end":60,"column_start":10,"column_end":32},"name":"ChildStorageCollection","qualname":"::overlayed_changes::ChildStorageCollection","value":"Vec<(StorageKey, StorageCollection)>","parent":null,"children":[],"decl_id":null,"docs":" In memory arrays of storage values for multiple child tries.\n","sig":null,"attributes":[{"value":"/ In memory arrays of storage values for multiple child tries.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":134261,"byte_end":134325,"line_start":59,"line_end":59,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":823},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":134447,"byte_end":134472,"line_start":63,"line_end":63,"column_start":10,"column_end":35},"name":"OffchainChangesCollection","qualname":"::overlayed_changes::OffchainChangesCollection","value":"Vec<((Vec<u8>, Vec<u8>), OffchainOverlayedChange)>","parent":null,"children":[],"decl_id":null,"docs":" In memory array of storage values.\n","sig":null,"attributes":[{"value":"/ In memory array of storage values.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":134399,"byte_end":134437,"line_start":62,"line_end":62,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2676},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":135232,"byte_end":135248,"line_start":92,"line_end":92,"column_start":12,"column_end":28},"name":"OverlayedChanges","qualname":"::overlayed_changes::OverlayedChanges","value":"OverlayedChanges {  }","parent":null,"children":[{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682}],"decl_id":null,"docs":" The set of changes that are overlaid onto the backend.","sig":null,"attributes":[{"value":"/ The set of changes that are overlaid onto the backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":135059,"byte_end":135117,"line_start":88,"line_end":88,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":135118,"byte_end":135121,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ It allows changes to be modified using nestable transactions.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":135122,"byte_end":135187,"line_start":90,"line_end":90,"column_start":1,"column_end":66}}]},{"kind":"StructVariant","id":{"krate":0,"index":2690},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":135875,"byte_end":135881,"line_start":111,"line_end":111,"column_start":2,"column_end":8},"name":"Insert","qualname":"::overlayed_changes::IndexOperation::Insert","value":"IndexOperation::Insert { extrinsic, hash, size }","parent":{"krate":0,"index":2689},"children":[],"decl_id":null,"docs":" Insert transaction into index.\n","sig":null,"attributes":[{"value":"/ Insert transaction into index.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":135839,"byte_end":135873,"line_start":110,"line_end":110,"column_start":2,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":2694},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":136072,"byte_end":136077,"line_start":120,"line_end":120,"column_start":2,"column_end":7},"name":"Renew","qualname":"::overlayed_changes::IndexOperation::Renew","value":"IndexOperation::Renew { extrinsic, hash }","parent":{"krate":0,"index":2689},"children":[],"decl_id":null,"docs":" Renew existing transaction storage.\n","sig":null,"attributes":[{"value":"/ Renew existing transaction storage.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":136031,"byte_end":136070,"line_start":119,"line_end":119,"column_start":2,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":2689},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":135821,"byte_end":135835,"line_start":109,"line_end":109,"column_start":10,"column_end":24},"name":"IndexOperation","qualname":"::overlayed_changes::IndexOperation","value":"pub enum IndexOperation {\n    Insert {\n            extrinsic: u32,\n            hash: Vec<u8>,\n            size: u32,\n        },\n    Renew {\n            extrinsic: u32,\n            hash: Vec<u8>,\n        },\n}","parent":null,"children":[{"krate":0,"index":2690},{"krate":0,"index":2694}],"decl_id":null,"docs":" Transaction index operation.\n","sig":null,"attributes":[{"value":"/ Transaction index operation.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":135755,"byte_end":135787,"line_start":107,"line_end":107,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":828},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":136421,"byte_end":136435,"line_start":132,"line_end":132,"column_start":12,"column_end":26},"name":"StorageChanges","qualname":"::overlayed_changes::StorageChanges","value":"StorageChanges { main_storage_changes, child_storage_changes, offchain_storage_changes, transaction, transaction_storage_root, transaction_index_changes }","parent":null,"children":[{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836}],"decl_id":null,"docs":" A storage changes structure that can be generated by the data collected in [`OverlayedChanges`].","sig":null,"attributes":[{"value":"/ A storage changes structure that can be generated by the data collected in [`OverlayedChanges`].","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":136195,"byte_end":136295,"line_start":128,"line_end":128,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":136296,"byte_end":136299,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This contains all the changes to the storage and transactions to apply theses changes to the","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":136300,"byte_end":136396,"line_start":130,"line_end":130,"column_start":1,"column_end":97}},{"value":"/ backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":136397,"byte_end":136409,"line_start":131,"line_end":131,"column_start":1,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":831},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":136560,"byte_end":136580,"line_start":136,"line_end":136,"column_start":6,"column_end":26},"name":"main_storage_changes","qualname":"::overlayed_changes::StorageChanges::main_storage_changes","value":"std::vec::Vec<(std::vec::Vec<u8>, std::option::Option<std::vec::Vec<u8>>)>","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" All changes to the main storage.","sig":null,"attributes":[{"value":"/ All changes to the main storage.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":136463,"byte_end":136499,"line_start":133,"line_end":133,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":136501,"byte_end":136504,"line_start":134,"line_end":134,"column_start":2,"column_end":5}},{"value":"/ A value of `None` means that it was deleted.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":136506,"byte_end":136554,"line_start":135,"line_end":135,"column_start":2,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":832},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":136646,"byte_end":136667,"line_start":138,"line_end":138,"column_start":6,"column_end":27},"name":"child_storage_changes","qualname":"::overlayed_changes::StorageChanges::child_storage_changes","value":"std::vec::Vec<(std::vec::Vec<u8>, std::vec::Vec<(std::vec::Vec<u8>, std::option::Option<std::vec::Vec<u8>>)>)>","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" All changes to the child storages.\n","sig":null,"attributes":[{"value":"/ All changes to the child storages.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":136602,"byte_end":136640,"line_start":137,"line_end":137,"column_start":2,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":833},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":136761,"byte_end":136785,"line_start":140,"line_end":140,"column_start":6,"column_end":30},"name":"offchain_storage_changes","qualname":"::overlayed_changes::StorageChanges::offchain_storage_changes","value":"std::vec::Vec<((std::vec::Vec<u8>, std::vec::Vec<u8>), sp_core::offchain::OffchainOverlayedChange)>","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" Offchain state changes to write to the offchain database.\n","sig":null,"attributes":[{"value":"/ Offchain state changes to write to the offchain database.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":136694,"byte_end":136755,"line_start":139,"line_end":139,"column_start":2,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":834},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":137110,"byte_end":137121,"line_start":145,"line_end":145,"column_start":6,"column_end":17},"name":"transaction","qualname":"::overlayed_changes::StorageChanges::transaction","value":"Transaction","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" A transaction for the backend that contains all changes from\n [`main_storage_changes`](StorageChanges::main_storage_changes) and from\n [`child_storage_changes`](StorageChanges::child_storage_changes).\n [`offchain_storage_changes`](StorageChanges::offchain_storage_changes).\n","sig":null,"attributes":[{"value":"/ A transaction for the backend that contains all changes from","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":136815,"byte_end":136879,"line_start":141,"line_end":141,"column_start":2,"column_end":66}},{"value":"/ [`main_storage_changes`](StorageChanges::main_storage_changes) and from","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":136881,"byte_end":136956,"line_start":142,"line_end":142,"column_start":2,"column_end":77}},{"value":"/ [`child_storage_changes`](StorageChanges::child_storage_changes).","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":136958,"byte_end":137027,"line_start":143,"line_end":143,"column_start":2,"column_end":71}},{"value":"/ [`offchain_storage_changes`](StorageChanges::offchain_storage_changes).","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":137029,"byte_end":137104,"line_start":144,"line_end":144,"column_start":2,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":835},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":137195,"byte_end":137219,"line_start":147,"line_end":147,"column_start":6,"column_end":30},"name":"transaction_storage_root","qualname":"::overlayed_changes::StorageChanges::transaction_storage_root","value":"<H as hash_db::Hasher>::Out","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" The storage root after applying the transaction.\n","sig":null,"attributes":[{"value":"/ The storage root after applying the transaction.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":137137,"byte_end":137189,"line_start":146,"line_end":146,"column_start":2,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":836},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":137298,"byte_end":137323,"line_start":150,"line_end":150,"column_start":6,"column_end":31},"name":"transaction_index_changes","qualname":"::overlayed_changes::StorageChanges::transaction_index_changes","value":"std::vec::Vec<overlayed_changes::IndexOperation>","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":" Changes to the transaction index,\n","sig":null,"attributes":[{"value":"/ Changes to the transaction index,","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":137230,"byte_end":137267,"line_start":148,"line_end":148,"column_start":2,"column_end":39}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":137269,"byte_end":137292,"line_start":149,"line_end":149,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":137482,"byte_end":137492,"line_start":156,"line_end":156,"column_start":9,"column_end":19},"name":"into_inner","qualname":"<StorageChanges<Transaction, H>>::into_inner","value":"pub fn into_inner(Self)\n->\n    (StorageCollection, ChildStorageCollection, OffchainChangesCollection,\n    Transaction, H::Out, Vec<IndexOperation>)","parent":null,"children":[],"decl_id":null,"docs":" Deconstruct into the inner values\n","sig":null,"attributes":[{"value":"/ Deconstruct into the inner values","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":137436,"byte_end":137473,"line_start":155,"line_end":155,"column_start":2,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":841},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":138075,"byte_end":138098,"line_start":180,"line_end":180,"column_start":12,"column_end":35},"name":"StorageTransactionCache","qualname":"::overlayed_changes::StorageTransactionCache","value":"StorageTransactionCache {  }","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845}],"decl_id":null,"docs":" Storage transactions are calculated as part of the `storage_root`.\n These transactions can be reused for importing the block into the\n storage. So, we cache them to not require a recomputation of those transactions.\n","sig":null,"attributes":[{"value":"/ Storage transactions are calculated as part of the `storage_root`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":137838,"byte_end":137908,"line_start":177,"line_end":177,"column_start":1,"column_end":71}},{"value":"/ These transactions can be reused for importing the block into the","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":137909,"byte_end":137978,"line_start":178,"line_end":178,"column_start":1,"column_end":70}},{"value":"/ storage. So, we cache them to not require a recomputation of those transactions.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":137979,"byte_end":138063,"line_start":179,"line_end":179,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":138479,"byte_end":138484,"line_start":189,"line_end":189,"column_start":9,"column_end":14},"name":"reset","qualname":"<StorageTransactionCache<Transaction, H>>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the cached transactions.\n","sig":null,"attributes":[{"value":"/ Reset the cached transactions.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":138436,"byte_end":138470,"line_start":188,"line_end":188,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":139247,"byte_end":139255,"line_start":216,"line_end":216,"column_start":9,"column_end":17},"name":"is_empty","qualname":"<OverlayedChanges>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether no changes are contained in the top nor in any of the child changes.\n","sig":null,"attributes":[{"value":"/ Whether no changes are contained in the top nor in any of the child changes.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":139158,"byte_end":139238,"line_start":215,"line_end":215,"column_start":2,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":139420,"byte_end":139442,"line_start":221,"line_end":221,"column_start":9,"column_end":31},"name":"set_collect_extrinsics","qualname":"<OverlayedChanges>::set_collect_extrinsics","value":"pub fn set_collect_extrinsics(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Ask to collect/not to collect extrinsics indices where key(s) has been changed.\n","sig":null,"attributes":[{"value":"/ Ask to collect/not to collect extrinsics indices where key(s) has been changed.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":139328,"byte_end":139411,"line_start":220,"line_end":220,"column_start":2,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":139757,"byte_end":139764,"line_start":228,"line_end":228,"column_start":9,"column_end":16},"name":"storage","qualname":"<OverlayedChanges>::storage","value":"pub fn storage(&Self, &[u8]) -> Option<Option<&[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a double-Option: None if the key is unknown (i.e. and the query should be referred\n to the backend); Some(None) if the key has been deleted. Some(Some(...)) for a key whose\n value has been set.\n","sig":null,"attributes":[{"value":"/ Returns a double-Option: None if the key is unknown (i.e. and the query should be referred","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":139535,"byte_end":139629,"line_start":225,"line_end":225,"column_start":2,"column_end":96}},{"value":"/ to the backend); Some(None) if the key has been deleted. Some(Some(...)) for a key whose","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":139631,"byte_end":139723,"line_start":226,"line_end":226,"column_start":2,"column_end":94}},{"value":"/ value has been set.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":139725,"byte_end":139748,"line_start":227,"line_end":227,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":140402,"byte_end":140426,"line_start":243,"line_end":243,"column_start":9,"column_end":33},"name":"value_mut_or_insert_with","qualname":"<OverlayedChanges>::value_mut_or_insert_with","value":"pub fn value_mut_or_insert_with<impl Fn() -> StorageValue: Fn() ->\nStorageValue>(&mut Self, &[u8], impl Fn() -> StorageValue)\n-> &mut StorageValue","parent":null,"children":[],"decl_id":null,"docs":" Returns mutable reference to current value.\n If there is no value in the overlay, the given callback is used to initiate the value.\n Warning this function registers a change, so the mutable reference MUST be modified.","sig":null,"attributes":[{"value":"/ Returns mutable reference to current value.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":140014,"byte_end":140061,"line_start":237,"line_end":237,"column_start":2,"column_end":49}},{"value":"/ If there is no value in the overlay, the given callback is used to initiate the value.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":140063,"byte_end":140153,"line_start":238,"line_end":238,"column_start":2,"column_end":92}},{"value":"/ Warning this function registers a change, so the mutable reference MUST be modified.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":140155,"byte_end":140243,"line_start":239,"line_end":239,"column_start":2,"column_end":90}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":140245,"byte_end":140248,"line_start":240,"line_end":240,"column_start":2,"column_end":5}},{"value":"/ Can be rolled back or committed when called inside a transaction.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":140250,"byte_end":140319,"line_start":241,"line_end":241,"column_start":2,"column_end":71}},{"value":"must_use = \"A change was registered, so this value MUST be modified.\"","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":140321,"byte_end":140393,"line_start":242,"line_end":242,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":140936,"byte_end":140949,"line_start":257,"line_end":257,"column_start":9,"column_end":22},"name":"child_storage","qualname":"<OverlayedChanges>::child_storage","value":"pub fn child_storage(&Self, &ChildInfo, &[u8]) -> Option<Option<&[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a double-Option: None if the key is unknown (i.e. and the query should be referred\n to the backend); Some(None) if the key has been deleted. Some(Some(...)) for a key whose\n value has been set.\n","sig":null,"attributes":[{"value":"/ Returns a double-Option: None if the key is unknown (i.e. and the query should be referred","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":140714,"byte_end":140808,"line_start":254,"line_end":254,"column_start":2,"column_end":96}},{"value":"/ to the backend); Some(None) if the key has been deleted. Some(Some(...)) for a key whose","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":140810,"byte_end":140902,"line_start":255,"line_end":255,"column_start":2,"column_end":94}},{"value":"/ value has been set.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":140904,"byte_end":140927,"line_start":256,"line_end":256,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":141389,"byte_end":141400,"line_start":268,"line_end":268,"column_start":9,"column_end":20},"name":"set_storage","qualname":"<OverlayedChanges>::set_storage","value":"pub fn set_storage(&mut Self, StorageKey, Option<StorageValue>)","parent":null,"children":[],"decl_id":null,"docs":" Set a new value for the specified key.","sig":null,"attributes":[{"value":"/ Set a new value for the specified key.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":141262,"byte_end":141304,"line_start":265,"line_end":265,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":141306,"byte_end":141309,"line_start":266,"line_end":266,"column_start":2,"column_end":5}},{"value":"/ Can be rolled back or committed when called inside a transaction.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":141311,"byte_end":141380,"line_start":267,"line_end":267,"column_start":2,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":144137,"byte_end":144154,"line_start":341,"line_end":341,"column_start":9,"column_end":26},"name":"transaction_depth","qualname":"<OverlayedChanges>::transaction_depth","value":"pub fn transaction_depth(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current nesting depth of the transaction stack.","sig":null,"attributes":[{"value":"/ Returns the current nesting depth of the transaction stack.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":143969,"byte_end":144032,"line_start":338,"line_end":338,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":144034,"byte_end":144037,"line_start":339,"line_end":339,"column_start":2,"column_end":5}},{"value":"/ A value of zero means that no transaction is open and changes are committed on write.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":144039,"byte_end":144128,"line_start":340,"line_end":340,"column_start":2,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":144732,"byte_end":144749,"line_start":354,"line_end":354,"column_start":9,"column_end":26},"name":"start_transaction","qualname":"<OverlayedChanges>::start_transaction","value":"pub fn start_transaction(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Start a new nested transaction.","sig":null,"attributes":[{"value":"/ Start a new nested transaction.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":144339,"byte_end":144374,"line_start":347,"line_end":347,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":144376,"byte_end":144379,"line_start":348,"line_end":348,"column_start":2,"column_end":5}},{"value":"/ This allows to either commit or roll back all changes that where made while this","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":144381,"byte_end":144465,"line_start":349,"line_end":349,"column_start":2,"column_end":86}},{"value":"/ transaction was open. Any transaction must be closed by either `rollback_transaction` or","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":144467,"byte_end":144559,"line_start":350,"line_end":350,"column_start":2,"column_end":94}},{"value":"/ `commit_transaction` before this overlay can be converted into storage changes.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":144561,"byte_end":144644,"line_start":351,"line_end":351,"column_start":2,"column_end":85}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":144646,"byte_end":144649,"line_start":352,"line_end":352,"column_start":2,"column_end":5}},{"value":"/ Changes made without any open transaction are committed immediately.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":144651,"byte_end":144723,"line_start":353,"line_end":353,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":145164,"byte_end":145184,"line_start":366,"line_end":366,"column_start":9,"column_end":29},"name":"rollback_transaction","qualname":"<OverlayedChanges>::rollback_transaction","value":"pub fn rollback_transaction(&mut Self) -> Result<(), NoOpenTransaction>","parent":null,"children":[],"decl_id":null,"docs":" Rollback the last transaction started by `start_transaction`.","sig":null,"attributes":[{"value":"/ Rollback the last transaction started by `start_transaction`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":144945,"byte_end":145010,"line_start":362,"line_end":362,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":145012,"byte_end":145015,"line_start":363,"line_end":363,"column_start":2,"column_end":5}},{"value":"/ Any changes made during that transaction are discarded. Returns an error if","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":145017,"byte_end":145096,"line_start":364,"line_end":364,"column_start":2,"column_end":81}},{"value":"/ there is no open transaction that can be rolled back.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":145098,"byte_end":145155,"line_start":365,"line_end":365,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":145829,"byte_end":145847,"line_start":385,"line_end":385,"column_start":9,"column_end":27},"name":"commit_transaction","qualname":"<OverlayedChanges>::commit_transaction","value":"pub fn commit_transaction(&mut Self) -> Result<(), NoOpenTransaction>","parent":null,"children":[],"decl_id":null,"docs":" Commit the last transaction started by `start_transaction`.","sig":null,"attributes":[{"value":"/ Commit the last transaction started by `start_transaction`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":145614,"byte_end":145677,"line_start":381,"line_end":381,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":145679,"byte_end":145682,"line_start":382,"line_end":382,"column_start":2,"column_end":5}},{"value":"/ Any changes made during that transaction are committed. Returns an error if there","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":145684,"byte_end":145769,"line_start":383,"line_end":383,"column_start":2,"column_end":87}},{"value":"/ is no open transaction that can be committed.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":145771,"byte_end":145820,"line_start":384,"line_end":384,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":146468,"byte_end":146481,"line_start":403,"line_end":403,"column_start":9,"column_end":22},"name":"enter_runtime","qualname":"<OverlayedChanges>::enter_runtime","value":"pub fn enter_runtime(&mut Self) -> Result<(), AlreadyInRuntime>","parent":null,"children":[],"decl_id":null,"docs":" Call this before transfering control to the runtime.","sig":null,"attributes":[{"value":"/ Call this before transfering control to the runtime.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":146245,"byte_end":146301,"line_start":399,"line_end":399,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":146303,"byte_end":146306,"line_start":400,"line_end":400,"column_start":2,"column_end":5}},{"value":"/ This protects all existing transactions from being removed by the runtime.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":146308,"byte_end":146386,"line_start":401,"line_end":401,"column_start":2,"column_end":80}},{"value":"/ Calling this while already inside the runtime will return an error.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":146388,"byte_end":146459,"line_start":402,"line_end":402,"column_start":2,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":147072,"byte_end":147084,"line_start":421,"line_end":421,"column_start":9,"column_end":21},"name":"exit_runtime","qualname":"<OverlayedChanges>::exit_runtime","value":"pub fn exit_runtime(&mut Self) -> Result<(), NotInRuntime>","parent":null,"children":[],"decl_id":null,"docs":" Call this when control returns from the runtime.","sig":null,"attributes":[{"value":"/ Call this when control returns from the runtime.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":146871,"byte_end":146923,"line_start":417,"line_end":417,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":146925,"byte_end":146928,"line_start":418,"line_end":418,"column_start":2,"column_end":5}},{"value":"/ This commits all dangling transaction left open by the runtime.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":146930,"byte_end":146997,"line_start":419,"line_end":419,"column_start":2,"column_end":69}},{"value":"/ Calling this while outside the runtime will return an error.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":146999,"byte_end":147063,"line_start":420,"line_end":420,"column_start":2,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":148314,"byte_end":148338,"line_start":467,"line_end":467,"column_start":9,"column_end":33},"name":"offchain_drain_committed","qualname":"<OverlayedChanges>::offchain_drain_committed","value":"pub fn offchain_drain_committed(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Consume all changes (top + children) and return them.","sig":null,"attributes":[{"value":"/ Consume all changes (top + children) and return them.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":148102,"byte_end":148159,"line_start":461,"line_end":461,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":148161,"byte_end":148164,"line_start":462,"line_end":462,"column_start":2,"column_end":5}},{"value":"/ After calling this function no more changes are contained in this changeset.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":148166,"byte_end":148246,"line_start":463,"line_end":463,"column_start":2,"column_end":82}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":148248,"byte_end":148251,"line_start":464,"line_end":464,"column_start":2,"column_end":5}},{"value":"/ Panics:","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":148253,"byte_end":148264,"line_start":465,"line_end":465,"column_start":2,"column_end":13}},{"value":"/ Panics if `transaction_depth() > 0`","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":148266,"byte_end":148305,"line_start":466,"line_end":466,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":148551,"byte_end":148559,"line_start":474,"line_end":474,"column_start":9,"column_end":17},"name":"children","qualname":"<OverlayedChanges>::children","value":"pub fn children(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over all child changes as seen by the current transaction.\n","sig":null,"attributes":[{"value":"/ Get an iterator over all child changes as seen by the current transaction.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":148464,"byte_end":148542,"line_start":473,"line_end":473,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":148816,"byte_end":148823,"line_start":481,"line_end":481,"column_start":9,"column_end":16},"name":"changes","qualname":"<OverlayedChanges>::changes","value":"pub fn changes(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over all top changes as been by the current transaction.\n","sig":null,"attributes":[{"value":"/ Get an iterator over all top changes as been by the current transaction.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":148731,"byte_end":148807,"line_start":480,"line_end":480,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":149006,"byte_end":149019,"line_start":486,"line_end":486,"column_start":9,"column_end":22},"name":"child_changes","qualname":"<OverlayedChanges>::child_changes","value":"pub fn child_changes(&Self, &[u8]) -> Option<(/*impl Trait*/, &ChildInfo)>","parent":null,"children":[],"decl_id":null,"docs":" Get an optional iterator over all child changes stored under the supplied key.\n","sig":null,"attributes":[{"value":"/ Get an optional iterator over all child changes stored under the supplied key.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":148915,"byte_end":148997,"line_start":485,"line_end":485,"column_start":2,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":149255,"byte_end":149276,"line_start":494,"line_end":494,"column_start":9,"column_end":30},"name":"transaction_index_ops","qualname":"<OverlayedChanges>::transaction_index_ops","value":"pub fn transaction_index_ops(&Self) -> &[IndexOperation]","parent":null,"children":[],"decl_id":null,"docs":" Get an list of all index operations.\n","sig":null,"attributes":[{"value":"/ Get an list of all index operations.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":149206,"byte_end":149246,"line_start":493,"line_end":493,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":149454,"byte_end":149474,"line_start":500,"line_end":500,"column_start":9,"column_end":29},"name":"into_storage_changes","qualname":"<OverlayedChanges>::into_storage_changes","value":"pub fn into_storage_changes<B: Backend<H>,\nH: Hasher>(Self, &B, H::Out, StorageTransactionCache<B::Transaction, H>,\nStateVersion) -> Result<StorageChanges<B::Transaction, H>, DefaultError> where\nH::Out: Ord + Encode + 'static","parent":null,"children":[],"decl_id":null,"docs":" Convert this instance with all changes into a [`StorageChanges`] instance.\n","sig":null,"attributes":[{"value":"/ Convert this instance with all changes into a [`StorageChanges`] instance.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":149342,"byte_end":149420,"line_start":498,"line_end":498,"column_start":2,"column_end":80}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":149422,"byte_end":149445,"line_start":499,"line_end":499,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":149925,"byte_end":149946,"line_start":514,"line_end":514,"column_start":9,"column_end":30},"name":"drain_storage_changes","qualname":"<OverlayedChanges>::drain_storage_changes","value":"pub fn drain_storage_changes<B: Backend<H>,\nH: Hasher>(&mut Self, &B, H::Out,\n&mut StorageTransactionCache<B::Transaction, H>, StateVersion)\n-> Result<StorageChanges<B::Transaction, H>, DefaultError> where H::Out: Ord +\nEncode + 'static","parent":null,"children":[],"decl_id":null,"docs":" Drain all changes into a [`StorageChanges`] instance. Leave empty overlay in place.\n","sig":null,"attributes":[{"value":"/ Drain all changes into a [`StorageChanges`] instance. Leave empty overlay in place.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":149829,"byte_end":149916,"line_start":513,"line_end":513,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":152309,"byte_end":152321,"line_start":581,"line_end":581,"column_start":9,"column_end":21},"name":"storage_root","qualname":"<OverlayedChanges>::storage_root","value":"pub fn storage_root<H: Hasher,\nB: Backend<H>>(&Self, &B, &mut StorageTransactionCache<B::Transaction, H>,\nStateVersion) -> H::Out where H::Out: Ord + Encode","parent":null,"children":[],"decl_id":null,"docs":" Generate the storage root using `backend` and all changes\n as seen by the current transaction.","sig":null,"attributes":[{"value":"/ Generate the storage root using `backend` and all changes","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":152110,"byte_end":152171,"line_start":577,"line_end":577,"column_start":2,"column_end":63}},{"value":"/ as seen by the current transaction.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":152173,"byte_end":152212,"line_start":578,"line_end":578,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":152214,"byte_end":152217,"line_start":579,"line_end":579,"column_start":2,"column_end":5}},{"value":"/ Returns the storage root and caches storage transaction in the given `cache`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":152219,"byte_end":152300,"line_start":580,"line_end":580,"column_start":2,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":153048,"byte_end":153058,"line_start":605,"line_end":605,"column_start":9,"column_end":19},"name":"iter_after","qualname":"<OverlayedChanges>::iter_after","value":"pub fn iter_after(&Self, &[u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the keys (in lexicographic order) following `key` (excluding `key`)\n alongside its value.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the keys (in lexicographic order) following `key` (excluding `key`)","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":152917,"byte_end":153013,"line_start":603,"line_end":603,"column_start":2,"column_end":98}},{"value":"/ alongside its value.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":153015,"byte_end":153039,"line_start":604,"line_end":604,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":153330,"byte_end":153346,"line_start":611,"line_end":611,"column_start":9,"column_end":25},"name":"child_iter_after","qualname":"<OverlayedChanges>::child_iter_after","value":"pub fn child_iter_after(&Self, &[u8], &[u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the keys (in lexicographic order) following `key` (excluding `key`)\n alongside its value for the given `storage_key` child.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the keys (in lexicographic order) following `key` (excluding `key`)","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":153165,"byte_end":153261,"line_start":609,"line_end":609,"column_start":2,"column_end":98}},{"value":"/ alongside its value for the given `storage_key` child.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":153263,"byte_end":153321,"line_start":610,"line_end":610,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":153621,"byte_end":153629,"line_start":624,"line_end":624,"column_start":9,"column_end":17},"name":"offchain","qualname":"<OverlayedChanges>::offchain","value":"pub fn offchain(&Self) -> &OffchainOverlayedChanges","parent":null,"children":[],"decl_id":null,"docs":" Read only access ot offchain overlay.\n","sig":null,"attributes":[{"value":"/ Read only access ot offchain overlay.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":153571,"byte_end":153612,"line_start":623,"line_end":623,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":153758,"byte_end":153778,"line_start":629,"line_end":629,"column_start":9,"column_end":29},"name":"set_offchain_storage","qualname":"<OverlayedChanges>::set_offchain_storage","value":"pub fn set_offchain_storage(&mut Self, &[u8], Option<&[u8]>)","parent":null,"children":[],"decl_id":null,"docs":" Write a key value pair to the offchain storage overlay.\n","sig":null,"attributes":[{"value":"/ Write a key value pair to the offchain storage overlay.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":153690,"byte_end":153749,"line_start":628,"line_end":628,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":154056,"byte_end":154077,"line_start":638,"line_end":638,"column_start":9,"column_end":30},"name":"add_transaction_index","qualname":"<OverlayedChanges>::add_transaction_index","value":"pub fn add_transaction_index(&mut Self, IndexOperation)","parent":null,"children":[],"decl_id":null,"docs":" Add transaction index operation.\n","sig":null,"attributes":[{"value":"/ Add transaction index operation.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":154011,"byte_end":154047,"line_start":637,"line_end":637,"column_start":2,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1064},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":199490,"byte_end":199512,"line_start":41,"line_end":41,"column_start":12,"column_end":34},"name":"ProvingBackendRecorder","qualname":"::proving_backend::ProvingBackendRecorder","value":"ProvingBackendRecorder {  }","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069}],"decl_id":null,"docs":" Patricia trie-based backend specialized in get value proofs.\n","sig":null,"attributes":[{"value":"/ Patricia trie-based backend specialized in get value proofs.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":199414,"byte_end":199478,"line_start":40,"line_end":40,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":199829,"byte_end":199836,"line_start":53,"line_end":53,"column_start":9,"column_end":16},"name":"storage","qualname":"<ProvingBackendRecorder>::storage","value":"pub fn storage(&mut Self, &[u8]) -> Result<Option<Vec<u8>>, String>","parent":null,"children":[],"decl_id":null,"docs":" Produce proof for a key query.\n","sig":null,"attributes":[{"value":"/ Produce proof for a key query.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":199786,"byte_end":199820,"line_start":52,"line_end":52,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":200324,"byte_end":200337,"line_start":70,"line_end":70,"column_start":9,"column_end":22},"name":"child_storage","qualname":"<ProvingBackendRecorder>::child_storage","value":"pub fn child_storage(&mut Self, &ChildInfo, &[u8])\n-> Result<Option<Vec<u8>>, String>","parent":null,"children":[],"decl_id":null,"docs":" Produce proof for a child key query.\n","sig":null,"attributes":[{"value":"/ Produce proof for a child key query.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":200275,"byte_end":200315,"line_start":69,"line_end":69,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":201119,"byte_end":201134,"line_start":99,"line_end":99,"column_start":9,"column_end":24},"name":"record_all_keys","qualname":"<ProvingBackendRecorder>::record_all_keys","value":"pub fn record_all_keys(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Produce proof for the whole backend.\n","sig":null,"attributes":[{"value":"/ Produce proof for the whole backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":201070,"byte_end":201110,"line_start":98,"line_end":98,"column_start":2,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":2708},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":201969,"byte_end":201982,"line_start":125,"line_end":125,"column_start":12,"column_end":25},"name":"ProofRecorder","qualname":"::proving_backend::ProofRecorder","value":"ProofRecorder {  }","parent":null,"children":[{"krate":0,"index":2710}],"decl_id":null,"docs":" Global proof recorder, act as a layer over a hash db for recording queried data.\n","sig":null,"attributes":[{"value":"/ Global proof recorder, act as a layer over a hash db for recording queried data.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":201847,"byte_end":201931,"line_start":123,"line_end":123,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":202154,"byte_end":202160,"line_start":131,"line_end":131,"column_start":9,"column_end":15},"name":"record","qualname":"<ProofRecorder<Hash>>::record","value":"pub fn record(&Self, Hash, Option<DBValue>)","parent":null,"children":[],"decl_id":null,"docs":" Record the given `key` => `val` combination.\n","sig":null,"attributes":[{"value":"/ Record the given `key` => `val` combination.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":202097,"byte_end":202145,"line_start":130,"line_end":130,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":202548,"byte_end":202551,"line_start":146,"line_end":146,"column_start":9,"column_end":12},"name":"get","qualname":"<ProofRecorder<Hash>>::get","value":"pub fn get(&Self, &Hash) -> Option<Option<DBValue>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value at the given `key`.\n","sig":null,"attributes":[{"value":"/ Returns the value at the given `key`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":202498,"byte_end":202539,"line_start":145,"line_end":145,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":202832,"byte_end":202853,"line_start":154,"line_end":154,"column_start":9,"column_end":30},"name":"estimate_encoded_size","qualname":"<ProofRecorder<Hash>>::estimate_encoded_size","value":"pub fn estimate_encoded_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the estimated encoded size of the proof.","sig":null,"attributes":[{"value":"/ Returns the estimated encoded size of the proof.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":202651,"byte_end":202703,"line_start":150,"line_end":150,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":202705,"byte_end":202708,"line_start":151,"line_end":151,"column_start":2,"column_end":5}},{"value":"/ The estimation is maybe bigger (by in maximum 4 bytes), but never smaller than the actual","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":202710,"byte_end":202803,"line_start":152,"line_end":152,"column_start":2,"column_end":95}},{"value":"/ encoded proof.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":202805,"byte_end":202823,"line_start":153,"line_end":153,"column_start":2,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":203036,"byte_end":203052,"line_start":160,"line_end":160,"column_start":9,"column_end":25},"name":"to_storage_proof","qualname":"<ProofRecorder<Hash>>::to_storage_proof","value":"pub fn to_storage_proof(&Self) -> StorageProof","parent":null,"children":[],"decl_id":null,"docs":" Convert into a [`StorageProof`].\n","sig":null,"attributes":[{"value":"/ Convert into a [`StorageProof`].","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":202991,"byte_end":203027,"line_start":159,"line_end":159,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":203294,"byte_end":203299,"line_start":173,"line_end":173,"column_start":9,"column_end":14},"name":"reset","qualname":"<ProofRecorder<Hash>>::reset","value":"pub fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the internal state.\n","sig":null,"attributes":[{"value":"/ Reset the internal state.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":203256,"byte_end":203285,"line_start":172,"line_end":172,"column_start":2,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":203569,"byte_end":203583,"line_start":182,"line_end":182,"column_start":12,"column_end":26},"name":"ProvingBackend","qualname":"::proving_backend::ProvingBackend","value":"","parent":null,"children":[],"decl_id":null,"docs":" Patricia trie-based backend which also tracks all touched storage trie values.\n These can be sent to remote node and used as a proof of execution.\n","sig":null,"attributes":[{"value":"/ Patricia trie-based backend which also tracks all touched storage trie values.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":203404,"byte_end":203486,"line_start":180,"line_end":180,"column_start":1,"column_end":83}},{"value":"/ These can be sent to remote node and used as a proof of execution.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":203487,"byte_end":203557,"line_start":181,"line_end":181,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":204030,"byte_end":204033,"line_start":197,"line_end":197,"column_start":9,"column_end":12},"name":"new","qualname":"<ProvingBackend>::new","value":"pub fn new(&'a TrieBackend<S, H>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new proving backend.\n","sig":null,"attributes":[{"value":"/ Create new proving backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":203990,"byte_end":204021,"line_start":196,"line_end":196,"column_start":2,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":204239,"byte_end":204256,"line_start":203,"line_end":203,"column_start":9,"column_end":26},"name":"new_with_recorder","qualname":"<ProvingBackend>::new_with_recorder","value":"pub fn new_with_recorder(&'a TrieBackend<S, H>, ProofRecorder<H::Out>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new proving backend with the given recorder.\n","sig":null,"attributes":[{"value":"/ Create new proving backend with the given recorder.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":204175,"byte_end":204230,"line_start":202,"line_end":202,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":204621,"byte_end":204634,"line_start":214,"line_end":214,"column_start":9,"column_end":22},"name":"extract_proof","qualname":"<ProvingBackend>::extract_proof","value":"pub fn extract_proof(&Self) -> StorageProof","parent":null,"children":[],"decl_id":null,"docs":" Extracting the gathered unordered proof.\n","sig":null,"attributes":[{"value":"/ Extracting the gathered unordered proof.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":204568,"byte_end":204612,"line_start":213,"line_end":213,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":204917,"byte_end":204938,"line_start":222,"line_end":222,"column_start":9,"column_end":30},"name":"estimate_encoded_size","qualname":"<ProvingBackend>::estimate_encoded_size","value":"pub fn estimate_encoded_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the estimated encoded size of the proof.","sig":null,"attributes":[{"value":"/ Returns the estimated encoded size of the proof.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":204736,"byte_end":204788,"line_start":218,"line_end":218,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":204790,"byte_end":204793,"line_start":219,"line_end":219,"column_start":2,"column_end":5}},{"value":"/ The estimation is maybe bigger (by in maximum 4 bytes), but never smaller than the actual","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":204795,"byte_end":204888,"line_start":220,"line_end":220,"column_start":2,"column_end":95}},{"value":"/ encoded proof.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":204890,"byte_end":204908,"line_start":221,"line_end":221,"column_start":2,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":205081,"byte_end":205095,"line_start":227,"line_end":227,"column_start":9,"column_end":23},"name":"clear_recorder","qualname":"<ProvingBackend>::clear_recorder","value":"pub fn clear_recorder(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the proof recorded data.\n","sig":null,"attributes":[{"value":"/ Clear the proof recorded data.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":205038,"byte_end":205072,"line_start":226,"line_end":226,"column_start":2,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":1155},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":208636,"byte_end":208662,"line_start":372,"line_end":372,"column_start":8,"column_end":34},"name":"create_proof_check_backend","qualname":"::proving_backend::create_proof_check_backend","value":"pub fn create_proof_check_backend<H>(H::Out, StorageProof)\n-> Result<TrieBackend<MemoryDB<H>, H>, Box<dyn Error>> where H: Hasher,\nH::Out: Codec","parent":null,"children":[],"decl_id":null,"docs":" Create a backend used for checking the proof., using `H` as hasher.","sig":null,"attributes":[{"value":"/ Create a backend used for checking the proof., using `H` as hasher.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":208463,"byte_end":208534,"line_start":369,"line_end":369,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":208535,"byte_end":208538,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ `proof` and `root` must match, i.e. `root` must be the correct root of `proof` nodes.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":208539,"byte_end":208628,"line_start":371,"line_end":371,"column_start":1,"column_end":90}}]},{"kind":"Trait","id":{"krate":0,"index":1202},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":217567,"byte_end":217579,"line_start":36,"line_end":36,"column_start":11,"column_end":23},"name":"InspectState","qualname":"::read_only::InspectState","value":"InspectState<H: Hasher, B: Backend<H>>","parent":null,"children":[{"krate":0,"index":1205}],"decl_id":null,"docs":" Trait for inspecting state in any backend.","sig":null,"attributes":[{"value":"/ Trait for inspecting state in any backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":217473,"byte_end":217519,"line_start":33,"line_end":33,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":217520,"byte_end":217523,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Implemented for any backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":217524,"byte_end":217556,"line_start":35,"line_end":35,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":217798,"byte_end":217811,"line_start":43,"line_end":43,"column_start":5,"column_end":18},"name":"inspect_state","qualname":"::read_only::InspectState::inspect_state","value":"pub fn inspect_state<F: FnOnce() -> R, R>(&Self, F) -> R","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" Inspect state with a closure.","sig":null,"attributes":[{"value":"/ Inspect state with a closure.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":217609,"byte_end":217642,"line_start":37,"line_end":37,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":217644,"byte_end":217647,"line_start":38,"line_end":38,"column_start":2,"column_end":5}},{"value":"/ Self will be set as read-only externalities and inspection","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":217649,"byte_end":217711,"line_start":39,"line_end":39,"column_start":2,"column_end":64}},{"value":"/ closure will be run against it.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":217713,"byte_end":217748,"line_start":40,"line_end":40,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":217750,"byte_end":217753,"line_start":41,"line_end":41,"column_start":2,"column_end":5}},{"value":"/ Returns the result of the closure.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":217755,"byte_end":217793,"line_start":42,"line_end":42,"column_start":2,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2717},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":218210,"byte_end":218231,"line_start":57,"line_end":57,"column_start":12,"column_end":33},"name":"ReadOnlyExternalities","qualname":"::read_only::ReadOnlyExternalities","value":"ReadOnlyExternalities {  }","parent":null,"children":[{"krate":0,"index":2721},{"krate":0,"index":2722}],"decl_id":null,"docs":" Simple read-only externalities for any backend.","sig":null,"attributes":[{"value":"/ Simple read-only externalities for any backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":218030,"byte_end":218081,"line_start":52,"line_end":52,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":218082,"byte_end":218085,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ To be used in test for state inspection. Will panic if something writes","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":218086,"byte_end":218161,"line_start":54,"line_end":54,"column_start":1,"column_end":76}},{"value":"/ to the storage.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":218162,"byte_end":218181,"line_start":55,"line_end":55,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1223},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":218708,"byte_end":218720,"line_start":72,"line_end":72,"column_start":9,"column_end":21},"name":"execute_with","qualname":"<ReadOnlyExternalities>::execute_with","value":"pub fn execute_with<R, impl FnOnce() -> R: FnOnce() ->\nR>(&mut Self, impl FnOnce() -> R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Execute the given closure while `self` is set as externalities.","sig":null,"attributes":[{"value":"/ Execute the given closure while `self` is set as externalities.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":218581,"byte_end":218648,"line_start":69,"line_end":69,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":218650,"byte_end":218653,"line_start":70,"line_end":70,"column_start":2,"column_end":5}},{"value":"/ Returns the result of the given closure.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":218655,"byte_end":218699,"line_start":71,"line_end":71,"column_start":2,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2728},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224380,"byte_end":224389,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"UsageUnit","qualname":"::stats::UsageUnit","value":"UsageUnit { ops, bytes }","parent":null,"children":[{"krate":0,"index":2729},{"krate":0,"index":2730}],"decl_id":null,"docs":" Measured count of operations and total bytes.\n","sig":null,"attributes":[{"value":"/ Measured count of operations and total bytes.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224286,"byte_end":224335,"line_start":24,"line_end":24,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":2729},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224424,"byte_end":224427,"line_start":28,"line_end":28,"column_start":6,"column_end":9},"name":"ops","qualname":"::stats::UsageUnit::ops","value":"u64","parent":{"krate":0,"index":2728},"children":[],"decl_id":null,"docs":" Number of operations.\n","sig":null,"attributes":[{"value":"/ Number of operations.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224393,"byte_end":224418,"line_start":27,"line_end":27,"column_start":2,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2730},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224461,"byte_end":224466,"line_start":30,"line_end":30,"column_start":6,"column_end":11},"name":"bytes","qualname":"::stats::UsageUnit::bytes","value":"u64","parent":{"krate":0,"index":2728},"children":[],"decl_id":null,"docs":" Number of bytes.\n","sig":null,"attributes":[{"value":"/ Number of bytes.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224435,"byte_end":224455,"line_start":29,"line_end":29,"column_start":2,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2737},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224551,"byte_end":224560,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"UsageInfo","qualname":"::stats::UsageInfo","value":"UsageInfo { reads, writes, nodes_writes, overlay_writes, removed_nodes, cache_reads, modified_reads, memory, started, span }","parent":null,"children":[{"krate":0,"index":2738},{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2747}],"decl_id":null,"docs":" Usage statistics for state backend.\n","sig":null,"attributes":[{"value":"/ Usage statistics for state backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224476,"byte_end":224515,"line_start":33,"line_end":33,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2738},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224598,"byte_end":224603,"line_start":37,"line_end":37,"column_start":6,"column_end":11},"name":"reads","qualname":"::stats::UsageInfo::reads","value":"stats::UsageUnit","parent":{"krate":0,"index":2737},"children":[],"decl_id":null,"docs":" Read statistics (total).\n","sig":null,"attributes":[{"value":"/ Read statistics (total).","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224564,"byte_end":224592,"line_start":36,"line_end":36,"column_start":2,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2739},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224652,"byte_end":224658,"line_start":39,"line_end":39,"column_start":6,"column_end":12},"name":"writes","qualname":"::stats::UsageInfo::writes","value":"stats::UsageUnit","parent":{"krate":0,"index":2737},"children":[],"decl_id":null,"docs":" Write statistics (total).\n","sig":null,"attributes":[{"value":"/ Write statistics (total).","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224617,"byte_end":224646,"line_start":38,"line_end":38,"column_start":2,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2740},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224710,"byte_end":224722,"line_start":41,"line_end":41,"column_start":6,"column_end":18},"name":"nodes_writes","qualname":"::stats::UsageInfo::nodes_writes","value":"stats::UsageUnit","parent":{"krate":0,"index":2737},"children":[],"decl_id":null,"docs":" Write trie nodes statistics.\n","sig":null,"attributes":[{"value":"/ Write trie nodes statistics.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224672,"byte_end":224704,"line_start":40,"line_end":40,"column_start":2,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":2741},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224798,"byte_end":224812,"line_start":44,"line_end":44,"column_start":6,"column_end":20},"name":"overlay_writes","qualname":"::stats::UsageInfo::overlay_writes","value":"stats::UsageUnit","parent":{"krate":0,"index":2737},"children":[],"decl_id":null,"docs":" Write into cached state machine\n change overlay.\n","sig":null,"attributes":[{"value":"/ Write into cached state machine","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224736,"byte_end":224771,"line_start":42,"line_end":42,"column_start":2,"column_end":37}},{"value":"/ change overlay.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224773,"byte_end":224792,"line_start":43,"line_end":43,"column_start":2,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2742},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224866,"byte_end":224879,"line_start":46,"line_end":46,"column_start":6,"column_end":19},"name":"removed_nodes","qualname":"::stats::UsageInfo::removed_nodes","value":"stats::UsageUnit","parent":{"krate":0,"index":2737},"children":[],"decl_id":null,"docs":" Removed trie nodes statistics.\n","sig":null,"attributes":[{"value":"/ Removed trie nodes statistics.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224826,"byte_end":224860,"line_start":45,"line_end":45,"column_start":2,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2743},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224925,"byte_end":224936,"line_start":48,"line_end":48,"column_start":6,"column_end":17},"name":"cache_reads","qualname":"::stats::UsageInfo::cache_reads","value":"stats::UsageUnit","parent":{"krate":0,"index":2737},"children":[],"decl_id":null,"docs":" Cache read statistics.\n","sig":null,"attributes":[{"value":"/ Cache read statistics.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224893,"byte_end":224919,"line_start":47,"line_end":47,"column_start":2,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2744},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224991,"byte_end":225005,"line_start":50,"line_end":50,"column_start":6,"column_end":20},"name":"modified_reads","qualname":"::stats::UsageInfo::modified_reads","value":"stats::UsageUnit","parent":{"krate":0,"index":2737},"children":[],"decl_id":null,"docs":" Modified value read statistics.\n","sig":null,"attributes":[{"value":"/ Modified value read statistics.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":224950,"byte_end":224985,"line_start":49,"line_end":49,"column_start":2,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2745},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225041,"byte_end":225047,"line_start":52,"line_end":52,"column_start":6,"column_end":12},"name":"memory","qualname":"::stats::UsageInfo::memory","value":"usize","parent":{"krate":0,"index":2737},"children":[],"decl_id":null,"docs":" Memory used.\n","sig":null,"attributes":[{"value":"/ Memory used.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225019,"byte_end":225035,"line_start":51,"line_end":51,"column_start":2,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2746},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225161,"byte_end":225168,"line_start":56,"line_end":56,"column_start":6,"column_end":13},"name":"started","qualname":"::stats::UsageInfo::started","value":"std::time::Instant","parent":{"krate":0,"index":2737},"children":[],"decl_id":null,"docs":" Moment at which current statistics has been started being collected.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225058,"byte_end":225081,"line_start":54,"line_end":54,"column_start":2,"column_end":25}},{"value":"/ Moment at which current statistics has been started being collected.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225083,"byte_end":225155,"line_start":55,"line_end":55,"column_start":2,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":2747},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225242,"byte_end":225246,"line_start":59,"line_end":59,"column_start":6,"column_end":10},"name":"span","qualname":"::stats::UsageInfo::span","value":"std::time::Duration","parent":{"krate":0,"index":2737},"children":[],"decl_id":null,"docs":" Timespan of the statistics.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225180,"byte_end":225203,"line_start":57,"line_end":57,"column_start":2,"column_end":25}},{"value":"/ Timespan of the statistics.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225205,"byte_end":225236,"line_start":58,"line_end":58,"column_start":2,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2752},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225375,"byte_end":225392,"line_start":65,"line_end":65,"column_start":12,"column_end":29},"name":"StateMachineStats","qualname":"::stats::StateMachineStats","value":"StateMachineStats { reads_modified, bytes_read_modified, writes_overlay, bytes_writes_overlay }","parent":null,"children":[{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2755},{"krate":0,"index":2756}],"decl_id":null,"docs":" Accumulated usage statistics specific to state machine\n crate.\n","sig":null,"attributes":[{"value":"/ Accumulated usage statistics specific to state machine","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225261,"byte_end":225319,"line_start":62,"line_end":62,"column_start":1,"column_end":59}},{"value":"/ crate.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225320,"byte_end":225330,"line_start":63,"line_end":63,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2753},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225503,"byte_end":225517,"line_start":69,"line_end":69,"column_start":6,"column_end":20},"name":"reads_modified","qualname":"::stats::StateMachineStats::reads_modified","value":"std::cell::RefCell<u64>","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Number of read query from runtime\n that hit a modified value (in state\n machine overlay).\n","sig":null,"attributes":[{"value":"/ Number of read query from runtime","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225396,"byte_end":225433,"line_start":66,"line_end":66,"column_start":2,"column_end":39}},{"value":"/ that hit a modified value (in state","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225435,"byte_end":225474,"line_start":67,"line_end":67,"column_start":2,"column_end":41}},{"value":"/ machine overlay).","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225476,"byte_end":225497,"line_start":68,"line_end":68,"column_start":2,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2754},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225604,"byte_end":225623,"line_start":72,"line_end":72,"column_start":6,"column_end":25},"name":"bytes_read_modified","qualname":"::stats::StateMachineStats::bytes_read_modified","value":"std::cell::RefCell<u64>","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Size in byte of read queries that\n hit a modified value.\n","sig":null,"attributes":[{"value":"/ Size in byte of read queries that","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225534,"byte_end":225571,"line_start":70,"line_end":70,"column_start":2,"column_end":39}},{"value":"/ hit a modified value.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225573,"byte_end":225598,"line_start":71,"line_end":71,"column_start":2,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2755},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225726,"byte_end":225740,"line_start":75,"line_end":75,"column_start":6,"column_end":20},"name":"writes_overlay","qualname":"::stats::StateMachineStats::writes_overlay","value":"std::cell::RefCell<u64>","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Number of time a write operation\n occurs into the state machine overlay.\n","sig":null,"attributes":[{"value":"/ Number of time a write operation","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225640,"byte_end":225676,"line_start":73,"line_end":73,"column_start":2,"column_end":38}},{"value":"/ occurs into the state machine overlay.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225678,"byte_end":225720,"line_start":74,"line_end":74,"column_start":2,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2756},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225818,"byte_end":225838,"line_start":78,"line_end":78,"column_start":6,"column_end":26},"name":"bytes_writes_overlay","qualname":"::stats::StateMachineStats::bytes_writes_overlay","value":"std::cell::RefCell<u64>","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Size in bytes of the writes overlay\n operation.\n","sig":null,"attributes":[{"value":"/ Size in bytes of the writes overlay","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225757,"byte_end":225796,"line_start":76,"line_end":76,"column_start":2,"column_end":41}},{"value":"/ operation.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225798,"byte_end":225812,"line_start":77,"line_end":77,"column_start":2,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225930,"byte_end":225933,"line_start":83,"line_end":83,"column_start":9,"column_end":12},"name":"add","qualname":"<StateMachineStats>::add","value":"pub fn add(&Self, &StateMachineStats)","parent":null,"children":[],"decl_id":null,"docs":" Accumulates some registered stats.\n","sig":null,"attributes":[{"value":"/ Accumulates some registered stats.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225883,"byte_end":225921,"line_start":82,"line_end":82,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":226369,"byte_end":226374,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"empty","qualname":"<UsageInfo>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Empty statistics.","sig":null,"attributes":[{"value":"/ Empty statistics.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":226300,"byte_end":226321,"line_start":92,"line_end":92,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":226323,"byte_end":226326,"line_start":93,"line_end":93,"column_start":2,"column_end":5}},{"value":"/ Means no data was collected.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":226328,"byte_end":226360,"line_start":94,"line_end":94,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":226848,"byte_end":226876,"line_start":112,"line_end":112,"column_start":9,"column_end":37},"name":"include_state_machine_states","qualname":"<UsageInfo>::include_state_machine_states","value":"pub fn include_state_machine_states(&mut Self, &StateMachineStats)","parent":null,"children":[],"decl_id":null,"docs":" Add collected state machine to this state.\n","sig":null,"attributes":[{"value":"/ Add collected state machine to this state.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":226793,"byte_end":226839,"line_start":111,"line_end":111,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":227271,"byte_end":227290,"line_start":122,"line_end":122,"column_start":9,"column_end":28},"name":"tally_read_modified","qualname":"<StateMachineStats>::tally_read_modified","value":"pub fn tally_read_modified(&Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Tally one read modified operation, of some length.\n","sig":null,"attributes":[{"value":"/ Tally one read modified operation, of some length.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":227208,"byte_end":227262,"line_start":121,"line_end":121,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":227482,"byte_end":227501,"line_start":127,"line_end":127,"column_start":9,"column_end":28},"name":"tally_write_overlay","qualname":"<StateMachineStats>::tally_write_overlay","value":"pub fn tally_write_overlay(&Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Tally one write overlay operation, of some length.\n","sig":null,"attributes":[{"value":"/ Tally one write overlay operation, of some length.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":227419,"byte_end":227473,"line_start":126,"line_end":126,"column_start":2,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1364},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":228968,"byte_end":228985,"line_start":44,"line_end":44,"column_start":12,"column_end":29},"name":"TestExternalities","qualname":"::testing::TestExternalities","value":"TestExternalities { backend, extensions, state_version }","parent":null,"children":[{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371}],"decl_id":null,"docs":" Simple HashMap-based Externalities impl.\n","sig":null,"attributes":[{"value":"/ Simple HashMap-based Externalities impl.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":228912,"byte_end":228956,"line_start":43,"line_end":43,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1369},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":229270,"byte_end":229277,"line_start":54,"line_end":54,"column_start":6,"column_end":13},"name":"backend","qualname":"::testing::TestExternalities::backend","value":"trie_backend::TrieBackend<memory_db::MemoryDB<H, memory_db::HashKey<H>, std::vec::Vec<u8>, memory_db::malloc_size_of::NoopTracker<std::vec::Vec<u8>>>, H>","parent":{"krate":0,"index":1364},"children":[],"decl_id":null,"docs":" Storage backend.\n","sig":null,"attributes":[{"value":"/ Storage backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":229244,"byte_end":229264,"line_start":53,"line_end":53,"column_start":2,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1370},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":229321,"byte_end":229331,"line_start":56,"line_end":56,"column_start":6,"column_end":16},"name":"extensions","qualname":"::testing::TestExternalities::extensions","value":"sp_externalities::Extensions","parent":{"krate":0,"index":1364},"children":[],"decl_id":null,"docs":" Extensions.\n","sig":null,"attributes":[{"value":"/ Extensions.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":229300,"byte_end":229315,"line_start":55,"line_end":55,"column_start":2,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":1371},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":229390,"byte_end":229403,"line_start":58,"line_end":58,"column_start":6,"column_end":19},"name":"state_version","qualname":"::testing::TestExternalities::state_version","value":"sp_core::sp_storage::StateVersion","parent":{"krate":0,"index":1364},"children":[],"decl_id":null,"docs":" State version to use during tests.\n","sig":null,"attributes":[{"value":"/ State version to use during tests.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":229346,"byte_end":229384,"line_start":57,"line_end":57,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":229553,"byte_end":229556,"line_start":66,"line_end":66,"column_start":9,"column_end":12},"name":"ext","qualname":"<TestExternalities<H>>::ext","value":"pub fn ext(&mut Self) -> Ext<, H, InMemoryBackend<H>>","parent":null,"children":[],"decl_id":null,"docs":" Get externalities implementation.\n","sig":null,"attributes":[{"value":"/ Get externalities implementation.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":229507,"byte_end":229544,"line_start":65,"line_end":65,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":229803,"byte_end":229806,"line_start":76,"line_end":76,"column_start":9,"column_end":12},"name":"new","qualname":"<TestExternalities<H>>::new","value":"pub fn new(Storage) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `TestExternalities` with storage.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `TestExternalities` with storage.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":229732,"byte_end":229794,"line_start":75,"line_end":75,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":230003,"byte_end":230025,"line_start":81,"line_end":81,"column_start":9,"column_end":31},"name":"new_with_state_version","qualname":"<TestExternalities<H>>::new_with_state_version","value":"pub fn new_with_state_version(Storage, StateVersion) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `TestExternalities` with storage for a given state version.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `TestExternalities` with storage for a given state version.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":229906,"byte_end":229994,"line_start":80,"line_end":80,"column_start":2,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":230191,"byte_end":230200,"line_start":86,"line_end":86,"column_start":9,"column_end":18},"name":"new_empty","qualname":"<TestExternalities<H>>::new_empty","value":"pub fn new_empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" New empty test externalities.\n","sig":null,"attributes":[{"value":"/ New empty test externalities.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":230149,"byte_end":230182,"line_start":85,"line_end":85,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":230375,"byte_end":230388,"line_start":91,"line_end":91,"column_start":9,"column_end":22},"name":"new_with_code","qualname":"<TestExternalities<H>>::new_with_code","value":"pub fn new_with_code(&[u8], Storage) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `TestExternalities` with code and storage.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `TestExternalities` with code and storage.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":230295,"byte_end":230366,"line_start":90,"line_end":90,"column_start":2,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":230613,"byte_end":230636,"line_start":97,"line_end":97,"column_start":9,"column_end":32},"name":"new_with_code_and_state","qualname":"<TestExternalities<H>>::new_with_code_and_state","value":"pub fn new_with_code_and_state(&[u8], Storage, StateVersion) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `TestExternalities` with code and storage for a given state\n version.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `TestExternalities` with code and storage for a given state","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":230502,"byte_end":230590,"line_start":95,"line_end":95,"column_start":2,"column_end":90}},{"value":"/ version.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":230592,"byte_end":230604,"line_start":96,"line_end":96,"column_start":2,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":231368,"byte_end":231385,"line_start":125,"line_end":125,"column_start":9,"column_end":26},"name":"overlayed_changes","qualname":"<TestExternalities<H>>::overlayed_changes","value":"pub fn overlayed_changes(&Self) -> &OverlayedChanges","parent":null,"children":[],"decl_id":null,"docs":" Returns the overlayed changes.\n","sig":null,"attributes":[{"value":"/ Returns the overlayed changes.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":231325,"byte_end":231359,"line_start":124,"line_end":124,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":231509,"byte_end":231533,"line_start":130,"line_end":130,"column_start":9,"column_end":33},"name":"persist_offchain_overlay","qualname":"<TestExternalities<H>>::persist_offchain_overlay","value":"pub fn persist_offchain_overlay(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Move offchain changes from overlay to the persistent store.\n","sig":null,"attributes":[{"value":"/ Move offchain changes from overlay to the persistent store.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":231437,"byte_end":231500,"line_start":129,"line_end":129,"column_start":2,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":231708,"byte_end":231719,"line_start":135,"line_end":135,"column_start":9,"column_end":20},"name":"offchain_db","qualname":"<TestExternalities<H>>::offchain_db","value":"pub fn offchain_db(&Self) -> TestPersistentOffchainDB","parent":null,"children":[],"decl_id":null,"docs":" A shared reference type around the offchain worker storage.\n","sig":null,"attributes":[{"value":"/ A shared reference type around the offchain worker storage.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":231636,"byte_end":231699,"line_start":134,"line_end":134,"column_start":2,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":231831,"byte_end":231837,"line_start":140,"line_end":140,"column_start":9,"column_end":15},"name":"insert","qualname":"<TestExternalities<H>>::insert","value":"pub fn insert(&mut Self, StorageKey, StorageValue)","parent":null,"children":[],"decl_id":null,"docs":" Insert key/value into backend\n","sig":null,"attributes":[{"value":"/ Insert key/value into backend","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":231789,"byte_end":231822,"line_start":139,"line_end":139,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":232068,"byte_end":232080,"line_start":147,"line_end":147,"column_start":9,"column_end":21},"name":"insert_child","qualname":"<TestExternalities<H>>::insert_child","value":"pub fn insert_child(&mut Self, sp_core::storage::ChildInfo, StorageKey,\nStorageValue)","parent":null,"children":[],"decl_id":null,"docs":" Insert key/value into backend.","sig":null,"attributes":[{"value":"/ Insert key/value into backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":231965,"byte_end":231999,"line_start":144,"line_end":144,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":232001,"byte_end":232004,"line_start":145,"line_end":145,"column_start":2,"column_end":5}},{"value":"/ This only supports inserting keys in child tries.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":232006,"byte_end":232059,"line_start":146,"line_end":146,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":232304,"byte_end":232322,"line_start":152,"line_end":152,"column_start":9,"column_end":27},"name":"register_extension","qualname":"<TestExternalities<H>>::register_extension","value":"pub fn register_extension<E: Any + Extension>(&mut Self, E)","parent":null,"children":[],"decl_id":null,"docs":" Registers the given extension for this instance.\n","sig":null,"attributes":[{"value":"/ Registers the given extension for this instance.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":232243,"byte_end":232295,"line_start":151,"line_end":151,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":232576,"byte_end":232586,"line_start":160,"line_end":160,"column_start":9,"column_end":19},"name":"as_backend","qualname":"<TestExternalities<H>>::as_backend","value":"pub fn as_backend(&Self) -> InMemoryBackend<H>","parent":null,"children":[],"decl_id":null,"docs":" Return a new backend with all pending changes.","sig":null,"attributes":[{"value":"/ Return a new backend with all pending changes.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":232402,"byte_end":232452,"line_start":156,"line_end":156,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":232454,"byte_end":232457,"line_start":157,"line_end":157,"column_start":2,"column_end":5}},{"value":"/ In contrast to [`commit_all`](Self::commit_all) this will not panic if there are open","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":232459,"byte_end":232548,"line_start":158,"line_end":158,"column_start":2,"column_end":91}},{"value":"/ transactions.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":232550,"byte_end":232567,"line_start":159,"line_end":159,"column_start":2,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":233174,"byte_end":233184,"line_start":180,"line_end":180,"column_start":9,"column_end":19},"name":"commit_all","qualname":"<TestExternalities<H>>::commit_all","value":"pub fn commit_all(&mut Self) -> Result<(), String>","parent":null,"children":[],"decl_id":null,"docs":" Commit all pending changes to the underlying backend.","sig":null,"attributes":[{"value":"/ Commit all pending changes to the underlying backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":233026,"byte_end":233083,"line_start":175,"line_end":175,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":233085,"byte_end":233088,"line_start":176,"line_end":176,"column_start":2,"column_end":5}},{"value":"/ # Panic","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":233090,"byte_end":233101,"line_start":177,"line_end":177,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":233103,"byte_end":233106,"line_start":178,"line_end":178,"column_start":2,"column_end":5}},{"value":"/ This will panic if there are still open transactions.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":233108,"byte_end":233165,"line_start":179,"line_end":179,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":233613,"byte_end":233625,"line_start":196,"line_end":196,"column_start":9,"column_end":21},"name":"execute_with","qualname":"<TestExternalities<H>>::execute_with","value":"pub fn execute_with<R, impl FnOnce() -> R: FnOnce() ->\nR>(&mut Self, impl FnOnce() -> R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Execute the given closure while `self` is set as externalities.","sig":null,"attributes":[{"value":"/ Execute the given closure while `self` is set as externalities.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":233486,"byte_end":233553,"line_start":193,"line_end":193,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":233555,"byte_end":233558,"line_start":194,"line_end":194,"column_start":2,"column_end":5}},{"value":"/ Returns the result of the given closure.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":233560,"byte_end":233604,"line_start":195,"line_end":195,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":234035,"byte_end":234052,"line_start":206,"line_end":206,"column_start":9,"column_end":26},"name":"execute_and_prove","qualname":"<TestExternalities<H>>::execute_and_prove","value":"pub fn execute_and_prove<R, impl FnOnce() -> R: FnOnce() ->\nR>(&mut Self, impl FnOnce() -> R) -> (R, StorageProof)","parent":null,"children":[],"decl_id":null,"docs":" Execute the given closure while `self`, with `proving_backend` as backend, is set as\n externalities.","sig":null,"attributes":[{"value":"/ Execute the given closure while `self`, with `proving_backend` as backend, is set as","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":233779,"byte_end":233867,"line_start":201,"line_end":201,"column_start":2,"column_end":90}},{"value":"/ externalities.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":233869,"byte_end":233887,"line_start":202,"line_end":202,"column_start":2,"column_end":20}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":233889,"byte_end":233892,"line_start":203,"line_end":203,"column_start":2,"column_end":5}},{"value":"/ This implementation will wipe the proof recorded in between calls. Consecutive calls will","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":233894,"byte_end":233987,"line_start":204,"line_end":204,"column_start":2,"column_end":95}},{"value":"/ get their own proof from scratch.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":233989,"byte_end":234026,"line_start":205,"line_end":205,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":234687,"byte_end":234704,"line_start":225,"line_end":225,"column_start":9,"column_end":26},"name":"execute_with_safe","qualname":"<TestExternalities<H>>::execute_with_safe","value":"pub fn execute_with_safe<R, impl FnOnce() -> R + UnwindSafe: FnOnce() -> R +\nUnwindSafe>(&mut Self, impl FnOnce() -> R + UnwindSafe) -> Result<R, String>","parent":null,"children":[],"decl_id":null,"docs":" Execute the given closure while `self` is set as externalities.","sig":null,"attributes":[{"value":"/ Execute the given closure while `self` is set as externalities.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":234506,"byte_end":234573,"line_start":221,"line_end":221,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":234575,"byte_end":234578,"line_start":222,"line_end":222,"column_start":2,"column_end":5}},{"value":"/ Returns the result of the given closure, if no panics occurred.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":234580,"byte_end":234647,"line_start":223,"line_end":223,"column_start":2,"column_end":69}},{"value":"/ Otherwise, returns `Err`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":234649,"byte_end":234678,"line_start":224,"line_end":224,"column_start":2,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1510},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend.rs","byte_start":241229,"byte_end":241240,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"TrieBackend","qualname":"::trie_backend::TrieBackend","value":"TrieBackend {  }","parent":null,"children":[{"krate":0,"index":1513}],"decl_id":null,"docs":" Patricia trie-based backend. Transaction type is an overlay of changes to commit.\n","sig":null,"attributes":[{"value":"/ Patricia trie-based backend. Transaction type is an overlay of changes to commit.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend.rs","byte_start":241132,"byte_end":241217,"line_start":35,"line_end":35,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend.rs","byte_start":241458,"byte_end":241461,"line_start":45,"line_end":45,"column_start":9,"column_end":12},"name":"new","qualname":"<TrieBackend<S, H>>::new","value":"pub fn new(S, H::Out) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new trie-based backend.\n","sig":null,"attributes":[{"value":"/ Create new trie-based backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend.rs","byte_start":241415,"byte_end":241449,"line_start":44,"line_end":44,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend.rs","byte_start":241612,"byte_end":241619,"line_start":50,"line_end":50,"column_start":9,"column_end":16},"name":"essence","qualname":"<TrieBackend<S, H>>::essence","value":"pub fn essence(&Self) -> &TrieBackendEssence<S, H>","parent":null,"children":[],"decl_id":null,"docs":" Get backend essence reference.\n","sig":null,"attributes":[{"value":"/ Get backend essence reference.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend.rs","byte_start":241569,"byte_end":241603,"line_start":49,"line_end":49,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend.rs","byte_start":241722,"byte_end":241737,"line_start":55,"line_end":55,"column_start":9,"column_end":24},"name":"backend_storage","qualname":"<TrieBackend<S, H>>::backend_storage","value":"pub fn backend_storage(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get backend storage reference.\n","sig":null,"attributes":[{"value":"/ Get backend storage reference.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend.rs","byte_start":241679,"byte_end":241713,"line_start":54,"line_end":54,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend.rs","byte_start":241818,"byte_end":241822,"line_start":60,"line_end":60,"column_start":9,"column_end":13},"name":"root","qualname":"<TrieBackend<S, H>>::root","value":"pub fn root(&Self) -> &H::Out","parent":null,"children":[],"decl_id":null,"docs":" Get trie root.\n","sig":null,"attributes":[{"value":"/ Get trie root.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend.rs","byte_start":241791,"byte_end":241809,"line_start":59,"line_end":59,"column_start":2,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend.rs","byte_start":241928,"byte_end":241940,"line_start":65,"line_end":65,"column_start":9,"column_end":21},"name":"into_storage","qualname":"<TrieBackend<S, H>>::into_storage","value":"pub fn into_storage(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns underlying storage.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns underlying storage.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend.rs","byte_start":241870,"byte_end":241919,"line_start":64,"line_end":64,"column_start":2,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":1661},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":254831,"byte_end":254838,"line_start":54,"line_end":54,"column_start":11,"column_end":18},"name":"Storage","qualname":"::trie_backend_essence::Storage","value":"Storage<H: Hasher>: Send + Sync","parent":null,"children":[{"krate":0,"index":1663}],"decl_id":null,"docs":" Patricia trie-based storage trait.\n","sig":null,"attributes":[{"value":"/ Patricia trie-based storage trait.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":254782,"byte_end":254820,"line_start":53,"line_end":53,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1663},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":254891,"byte_end":254894,"line_start":56,"line_end":56,"column_start":5,"column_end":8},"name":"get","qualname":"::trie_backend_essence::Storage::get","value":"pub fn get(&Self, &H::Out, Prefix) -> Result<Option<DBValue>>","parent":{"krate":0,"index":1661},"children":[],"decl_id":null,"docs":" Get a trie node.\n","sig":null,"attributes":[{"value":"/ Get a trie node.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":254866,"byte_end":254886,"line_start":55,"line_end":55,"column_start":2,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1668},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":255260,"byte_end":255278,"line_start":73,"line_end":73,"column_start":12,"column_end":30},"name":"TrieBackendEssence","qualname":"::trie_backend_essence::TrieBackendEssence","value":"TrieBackendEssence {  }","parent":null,"children":[{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674}],"decl_id":null,"docs":" Patricia trie-based pairs storage essence.\n","sig":null,"attributes":[{"value":"/ Patricia trie-based pairs storage essence.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":255202,"byte_end":255248,"line_start":72,"line_end":72,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":255565,"byte_end":255568,"line_start":86,"line_end":86,"column_start":9,"column_end":12},"name":"new","qualname":"<TrieBackendEssence<S, H>>::new","value":"pub fn new(S, H::Out) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new trie-based backend.\n","sig":null,"attributes":[{"value":"/ Create new trie-based backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":255522,"byte_end":255556,"line_start":85,"line_end":85,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":255802,"byte_end":255817,"line_start":97,"line_end":97,"column_start":9,"column_end":24},"name":"backend_storage","qualname":"<TrieBackendEssence<S, H>>::backend_storage","value":"pub fn backend_storage(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Get backend storage reference.\n","sig":null,"attributes":[{"value":"/ Get backend storage reference.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":255759,"byte_end":255793,"line_start":96,"line_end":96,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":255881,"byte_end":255885,"line_start":102,"line_end":102,"column_start":9,"column_end":13},"name":"root","qualname":"<TrieBackendEssence<S, H>>::root","value":"pub fn root(&Self) -> &H::Out","parent":null,"children":[],"decl_id":null,"docs":" Get trie root.\n","sig":null,"attributes":[{"value":"/ Get trie root.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":255854,"byte_end":255872,"line_start":101,"line_end":101,"column_start":2,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1681},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":255979,"byte_end":255987,"line_start":107,"line_end":107,"column_start":9,"column_end":17},"name":"set_root","qualname":"<TrieBackendEssence<S, H>>::set_root","value":"pub fn set_root(&mut Self, H::Out)","parent":null,"children":[],"decl_id":null,"docs":" Set trie root. This is useful for testing.\n","sig":null,"attributes":[{"value":"/ Set trie root. This is useful for testing.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":255924,"byte_end":255970,"line_start":106,"line_end":106,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1683},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":256343,"byte_end":256355,"line_start":122,"line_end":122,"column_start":9,"column_end":21},"name":"into_storage","qualname":"<TrieBackendEssence<S, H>>::into_storage","value":"pub fn into_storage(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns underlying storage.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns underlying storage.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":256285,"byte_end":256334,"line_start":121,"line_end":121,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1684},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":256518,"byte_end":256534,"line_start":128,"line_end":128,"column_start":9,"column_end":25},"name":"next_storage_key","qualname":"<TrieBackendEssence<S, H>>::next_storage_key","value":"pub fn next_storage_key(&Self, &[u8]) -> Result<Option<StorageKey>>","parent":null,"children":[],"decl_id":null,"docs":" Return the next key in the trie i.e. the minimum key that is strictly superior to `key` in\n lexicographic order.\n","sig":null,"attributes":[{"value":"/ Return the next key in the trie i.e. the minimum key that is strictly superior to `key` in","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":256389,"byte_end":256483,"line_start":126,"line_end":126,"column_start":2,"column_end":96}},{"value":"/ lexicographic order.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":256485,"byte_end":256509,"line_start":127,"line_end":127,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":257316,"byte_end":257338,"line_start":156,"line_end":156,"column_start":9,"column_end":31},"name":"next_child_storage_key","qualname":"<TrieBackendEssence<S, H>>::next_child_storage_key","value":"pub fn next_child_storage_key(&Self, &ChildInfo, &[u8])\n-> Result<Option<StorageKey>>","parent":null,"children":[],"decl_id":null,"docs":" Return the next key in the child trie i.e. the minimum key that is strictly superior to\n `key` in lexicographic order.\n","sig":null,"attributes":[{"value":"/ Return the next key in the child trie i.e. the minimum key that is strictly superior to","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":257181,"byte_end":257272,"line_start":154,"line_end":154,"column_start":2,"column_end":93}},{"value":"/ `key` in lexicographic order.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":257274,"byte_end":257307,"line_start":155,"line_end":155,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":259385,"byte_end":259392,"line_start":222,"line_end":222,"column_start":9,"column_end":16},"name":"storage","qualname":"<TrieBackendEssence<S, H>>::storage","value":"pub fn storage(&Self, &[u8]) -> Result<Option<StorageValue>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of storage at given key.\n","sig":null,"attributes":[{"value":"/ Get the value of storage at given key.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":259334,"byte_end":259376,"line_start":221,"line_end":221,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":259636,"byte_end":259649,"line_start":229,"line_end":229,"column_start":9,"column_end":22},"name":"child_storage","qualname":"<TrieBackendEssence<S, H>>::child_storage","value":"pub fn child_storage(&Self, &ChildInfo, &[u8]) -> Result<Option<StorageValue>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of child storage at given key.\n","sig":null,"attributes":[{"value":"/ Get the value of child storage at given key.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":259579,"byte_end":259627,"line_start":228,"line_end":228,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":260197,"byte_end":260222,"line_start":248,"line_end":248,"column_start":9,"column_end":34},"name":"apply_to_key_values_while","qualname":"<TrieBackendEssence<S, H>>::apply_to_key_values_while","value":"pub fn apply_to_key_values_while<impl FnMut(Vec<u8>, Vec<u8>) -> bool: FnMut(Vec<u8>,\nVec<u8>) ->\nbool>(&Self, Option<&ChildInfo>, Option<&[u8]>, Option<&[u8]>,\nimpl FnMut(Vec<u8>, Vec<u8>) -> bool, bool) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve all entries keys of storage and call `f` for each of those keys.\n Aborts as soon as `f` returns false.","sig":null,"attributes":[{"value":"/ Retrieve all entries keys of storage and call `f` for each of those keys.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":260015,"byte_end":260092,"line_start":244,"line_end":244,"column_start":2,"column_end":79}},{"value":"/ Aborts as soon as `f` returns false.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":260094,"byte_end":260134,"line_start":245,"line_end":245,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":260136,"byte_end":260139,"line_start":246,"line_end":246,"column_start":2,"column_end":5}},{"value":"/ Returns `true` when all keys were iterated.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":260141,"byte_end":260188,"line_start":247,"line_end":247,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":261054,"byte_end":261073,"line_start":276,"line_end":276,"column_start":9,"column_end":28},"name":"apply_to_keys_while","qualname":"<TrieBackendEssence<S, H>>::apply_to_keys_while","value":"pub fn apply_to_keys_while<F: FnMut(&[u8]) ->\nbool>(&Self, Option<&ChildInfo>, Option<&[u8]>, F)","parent":null,"children":[],"decl_id":null,"docs":" Retrieve all entries keys of a storage and call `f` for each of those keys.\n Aborts as soon as `f` returns false.\n","sig":null,"attributes":[{"value":"/ Retrieve all entries keys of a storage and call `f` for each of those keys.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":260924,"byte_end":261003,"line_start":274,"line_end":274,"column_start":2,"column_end":81}},{"value":"/ Aborts as soon as `f` returns false.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":261005,"byte_end":261045,"line_start":275,"line_end":275,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1703},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":261773,"byte_end":261799,"line_start":301,"line_end":301,"column_start":9,"column_end":35},"name":"for_child_keys_with_prefix","qualname":"<TrieBackendEssence<S, H>>::for_child_keys_with_prefix","value":"pub fn for_child_keys_with_prefix<impl FnMut(&[u8]): FnMut(&[u8]) ->\n()>(&Self, &ChildInfo, &[u8], impl FnMut(&[u8]))","parent":null,"children":[],"decl_id":null,"docs":" Execute given closure for all keys starting with prefix.\n","sig":null,"attributes":[{"value":"/ Execute given closure for all keys starting with prefix.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":261704,"byte_end":261764,"line_start":300,"line_end":300,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":262398,"byte_end":262418,"line_start":328,"line_end":328,"column_start":9,"column_end":29},"name":"for_keys_with_prefix","qualname":"<TrieBackendEssence<S, H>>::for_keys_with_prefix","value":"pub fn for_keys_with_prefix<F: FnMut(&[u8]) -> ()>(&Self, &[u8], F)","parent":null,"children":[],"decl_id":null,"docs":" Execute given closure for all keys starting with prefix.\n","sig":null,"attributes":[{"value":"/ Execute given closure for all keys starting with prefix.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":262329,"byte_end":262389,"line_start":327,"line_end":327,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":264700,"byte_end":264726,"line_start":428,"line_end":428,"column_start":9,"column_end":35},"name":"for_key_values_with_prefix","qualname":"<TrieBackendEssence<S, H>>::for_key_values_with_prefix","value":"pub fn for_key_values_with_prefix<F: FnMut(&[u8], &[u8]) ->\n()>(&Self, &[u8], F)","parent":null,"children":[],"decl_id":null,"docs":" Execute given closure for all key and values starting with prefix.\n","sig":null,"attributes":[{"value":"/ Execute given closure for all key and values starting with prefix.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":264621,"byte_end":264691,"line_start":427,"line_end":427,"column_start":2,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":1753},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":266766,"byte_end":266784,"line_start":510,"line_end":510,"column_start":11,"column_end":29},"name":"TrieBackendStorage","qualname":"::trie_backend_essence::TrieBackendStorage","value":"TrieBackendStorage<H: Hasher>: Send + Sync","parent":null,"children":[{"krate":0,"index":1755},{"krate":0,"index":1756}],"decl_id":null,"docs":" Key-value pairs storage that is used by trie backend essence.\n","sig":null,"attributes":[{"value":"/ Key-value pairs storage that is used by trie backend essence.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":266690,"byte_end":266755,"line_start":509,"line_end":509,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":1755},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":266849,"byte_end":266856,"line_start":512,"line_end":512,"column_start":7,"column_end":14},"name":"Overlay","qualname":"::trie_backend_essence::TrieBackendStorage::Overlay","value":"type Overlay: HashDB<H, DBValue> + Default + Consolidate;","parent":{"krate":0,"index":1753},"children":[],"decl_id":null,"docs":" Type of in-memory overlay.\n","sig":null,"attributes":[{"value":"/ Type of in-memory overlay.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":266812,"byte_end":266842,"line_start":511,"line_end":511,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":266941,"byte_end":266944,"line_start":515,"line_end":515,"column_start":5,"column_end":8},"name":"get","qualname":"::trie_backend_essence::TrieBackendStorage::get","value":"pub fn get(&Self, &H::Out, Prefix) -> Result<Option<DBValue>>","parent":{"krate":0,"index":1753},"children":[],"decl_id":null,"docs":" Get the value stored at key.\n","sig":null,"attributes":[{"value":"/ Get the value stored at key.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":266904,"byte_end":266936,"line_start":514,"line_end":514,"column_start":2,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":1801},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":2483,"byte_end":2495,"line_start":114,"line_end":114,"column_start":10,"column_end":22},"name":"DefaultError","qualname":"::DefaultError","value":"String","parent":null,"children":[],"decl_id":null,"docs":" Default error type to use with state machine trie backend.\n","sig":null,"attributes":[{"value":"/ Default error type to use with state machine trie backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":2387,"byte_end":2449,"line_start":112,"line_end":112,"column_start":1,"column_end":63}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":2450,"byte_end":2473,"line_start":113,"line_end":113,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":2009},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":4587,"byte_end":4601,"line_start":186,"line_end":186,"column_start":11,"column_end":25},"name":"DefaultHandler","qualname":"::execution::DefaultHandler","value":"fn(: CallResult<R, E>, : CallResult<R, E>) -> CallResult<R, E>","parent":null,"children":[],"decl_id":null,"docs":" Default handler of the execution manager.\n","sig":null,"attributes":[{"value":"/ Default handler of the execution manager.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":4531,"byte_end":4576,"line_start":185,"line_end":185,"column_start":2,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":2012},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":4723,"byte_end":4738,"line_start":189,"line_end":189,"column_start":11,"column_end":26},"name":"InMemoryBackend","qualname":"::execution::InMemoryBackend","value":"TrieBackend<MemoryDB<H>, H>","parent":null,"children":[],"decl_id":null,"docs":" Trie backend with in-memory storage.\n","sig":null,"attributes":[{"value":"/ Trie backend with in-memory storage.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":4672,"byte_end":4712,"line_start":188,"line_end":188,"column_start":2,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":2014},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":4834,"byte_end":4856,"line_start":192,"line_end":192,"column_start":11,"column_end":33},"name":"InMemoryProvingBackend","qualname":"::execution::InMemoryProvingBackend","value":"ProvingBackend","parent":null,"children":[],"decl_id":null,"docs":" Proving Trie backend with in-memory storage.\n","sig":null,"attributes":[{"value":"/ Proving Trie backend with in-memory storage.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":4775,"byte_end":4823,"line_start":191,"line_end":191,"column_start":2,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2767},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":5162,"byte_end":5180,"line_start":199,"line_end":199,"column_start":3,"column_end":21},"name":"NativeWhenPossible","qualname":"::execution::ExecutionStrategy::NativeWhenPossible","value":"ExecutionStrategy::NativeWhenPossible","parent":{"krate":0,"index":2766},"children":[],"decl_id":null,"docs":" Execute with the native equivalent if it is compatible with the given wasm module;\n otherwise fall back to the wasm.\n","sig":null,"attributes":[{"value":"/ Execute with the native equivalent if it is compatible with the given wasm module;","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":5034,"byte_end":5120,"line_start":197,"line_end":197,"column_start":3,"column_end":89}},{"value":"/ otherwise fall back to the wasm.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":5123,"byte_end":5159,"line_start":198,"line_end":198,"column_start":3,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2769},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":5217,"byte_end":5227,"line_start":201,"line_end":201,"column_start":3,"column_end":13},"name":"AlwaysWasm","qualname":"::execution::ExecutionStrategy::AlwaysWasm","value":"ExecutionStrategy::AlwaysWasm","parent":{"krate":0,"index":2766},"children":[],"decl_id":null,"docs":" Use the given wasm module.\n","sig":null,"attributes":[{"value":"/ Use the given wasm module.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":5184,"byte_end":5214,"line_start":200,"line_end":200,"column_start":3,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2771},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":5342,"byte_end":5346,"line_start":204,"line_end":204,"column_start":3,"column_end":7},"name":"Both","qualname":"::execution::ExecutionStrategy::Both","value":"ExecutionStrategy::Both","parent":{"krate":0,"index":2766},"children":[],"decl_id":null,"docs":" Run with both the wasm and the native variant (if compatible). Report any discrepancy\n as an error.\n","sig":null,"attributes":[{"value":"/ Run with both the wasm and the native variant (if compatible). Report any discrepancy","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":5231,"byte_end":5320,"line_start":202,"line_end":202,"column_start":3,"column_end":92}},{"value":"/ as an error.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":5323,"byte_end":5339,"line_start":203,"line_end":203,"column_start":3,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2773},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":5415,"byte_end":5429,"line_start":206,"line_end":206,"column_start":3,"column_end":17},"name":"NativeElseWasm","qualname":"::execution::ExecutionStrategy::NativeElseWasm","value":"ExecutionStrategy::NativeElseWasm","parent":{"krate":0,"index":2766},"children":[],"decl_id":null,"docs":" First native, then if that fails or is not possible, wasm.\n","sig":null,"attributes":[{"value":"/ First native, then if that fails or is not possible, wasm.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":5350,"byte_end":5412,"line_start":205,"line_end":205,"column_start":3,"column_end":65}}]},{"kind":"Enum","id":{"krate":0,"index":2766},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":5012,"byte_end":5029,"line_start":196,"line_end":196,"column_start":11,"column_end":28},"name":"ExecutionStrategy","qualname":"::execution::ExecutionStrategy","value":"pub enum ExecutionStrategy {\n    NativeWhenPossible,\n    AlwaysWasm,\n    Both,\n    NativeElseWasm,\n}","parent":null,"children":[{"krate":0,"index":2767},{"krate":0,"index":2769},{"krate":0,"index":2771},{"krate":0,"index":2773}],"decl_id":null,"docs":" Strategy for executing a call into the runtime.\n","sig":null,"attributes":[{"value":"/ Strategy for executing a call into the runtime.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":4904,"byte_end":4955,"line_start":194,"line_end":194,"column_start":2,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2787},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":5605,"byte_end":5612,"line_start":213,"line_end":213,"column_start":3,"column_end":10},"name":"Trusted","qualname":"::execution::BackendTrustLevel::Trusted","value":"BackendTrustLevel::Trusted","parent":{"krate":0,"index":2786},"children":[],"decl_id":null,"docs":" Panics from trusted backends are considered justified, and never caught.\n","sig":null,"attributes":[{"value":"/ Panics from trusted backends are considered justified, and never caught.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":5526,"byte_end":5602,"line_start":212,"line_end":212,"column_start":3,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2789},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":5802,"byte_end":5811,"line_start":217,"line_end":217,"column_start":3,"column_end":12},"name":"Untrusted","qualname":"::execution::BackendTrustLevel::Untrusted","value":"BackendTrustLevel::Untrusted","parent":{"krate":0,"index":2786},"children":[],"decl_id":null,"docs":" Panics from untrusted backend are caught and interpreted as runtime error.\n Untrusted backend may be missing some parts of the trie, so panics are not considered\n fatal.\n","sig":null,"attributes":[{"value":"/ Panics from untrusted backend are caught and interpreted as runtime error.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":5616,"byte_end":5694,"line_start":214,"line_end":214,"column_start":3,"column_end":81}},{"value":"/ Untrusted backend may be missing some parts of the trie, so panics are not considered","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":5697,"byte_end":5786,"line_start":215,"line_end":215,"column_start":3,"column_end":92}},{"value":"/ fatal.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":5789,"byte_end":5799,"line_start":216,"line_end":216,"column_start":3,"column_end":13}}]},{"kind":"Enum","id":{"krate":0,"index":2786},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":5504,"byte_end":5521,"line_start":211,"line_end":211,"column_start":11,"column_end":28},"name":"BackendTrustLevel","qualname":"::execution::BackendTrustLevel","value":"pub enum BackendTrustLevel { Trusted, Untrusted, }","parent":null,"children":[{"krate":0,"index":2787},{"krate":0,"index":2789}],"decl_id":null,"docs":" Storage backend trust level.\n","sig":null,"attributes":[{"value":"/ Storage backend trust level.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":5436,"byte_end":5468,"line_start":209,"line_end":209,"column_start":2,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2797},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":6087,"byte_end":6105,"line_start":225,"line_end":225,"column_start":3,"column_end":21},"name":"NativeWhenPossible","qualname":"::execution::ExecutionManager::NativeWhenPossible","value":"ExecutionManager::NativeWhenPossible","parent":{"krate":0,"index":2795},"children":[],"decl_id":null,"docs":" Execute with the native equivalent if it is compatible with the given wasm module;\n otherwise fall back to the wasm.\n","sig":null,"attributes":[{"value":"/ Execute with the native equivalent if it is compatible with the given wasm module;","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":5959,"byte_end":6045,"line_start":223,"line_end":223,"column_start":3,"column_end":89}},{"value":"/ otherwise fall back to the wasm.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":6048,"byte_end":6084,"line_start":224,"line_end":224,"column_start":3,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2799},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":6388,"byte_end":6398,"line_start":230,"line_end":230,"column_start":3,"column_end":13},"name":"AlwaysWasm","qualname":"::execution::ExecutionManager::AlwaysWasm","value":"ExecutionManager::AlwaysWasm(BackendTrustLevel)","parent":{"krate":0,"index":2795},"children":[],"decl_id":null,"docs":" Use the given wasm module. The backend on which code is executed code could be\n trusted to provide all storage or not (i.e. the light client cannot be trusted to\n provide for all storage queries since the storage entries it has come from an external\n node).\n","sig":null,"attributes":[{"value":"/ Use the given wasm module. The backend on which code is executed code could be","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":6109,"byte_end":6191,"line_start":226,"line_end":226,"column_start":3,"column_end":85}},{"value":"/ trusted to provide all storage or not (i.e. the light client cannot be trusted to","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":6194,"byte_end":6279,"line_start":227,"line_end":227,"column_start":3,"column_end":88}},{"value":"/ provide for all storage queries since the storage entries it has come from an external","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":6282,"byte_end":6372,"line_start":228,"line_end":228,"column_start":3,"column_end":93}},{"value":"/ node).","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":6375,"byte_end":6385,"line_start":229,"line_end":229,"column_start":3,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2802},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":6537,"byte_end":6541,"line_start":233,"line_end":233,"column_start":3,"column_end":7},"name":"Both","qualname":"::execution::ExecutionManager::Both","value":"ExecutionManager::Both(F)","parent":{"krate":0,"index":2795},"children":[],"decl_id":null,"docs":" Run with both the wasm and the native variant (if compatible). Call `F` in the case of\n any discrepancy.\n","sig":null,"attributes":[{"value":"/ Run with both the wasm and the native variant (if compatible). Call `F` in the case of","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":6421,"byte_end":6511,"line_start":231,"line_end":231,"column_start":3,"column_end":93}},{"value":"/ any discrepancy.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":6514,"byte_end":6534,"line_start":232,"line_end":232,"column_start":3,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2805},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":6613,"byte_end":6627,"line_start":235,"line_end":235,"column_start":3,"column_end":17},"name":"NativeElseWasm","qualname":"::execution::ExecutionManager::NativeElseWasm","value":"ExecutionManager::NativeElseWasm","parent":{"krate":0,"index":2795},"children":[],"decl_id":null,"docs":" First native, then if that fails or is not possible, wasm.\n","sig":null,"attributes":[{"value":"/ First native, then if that fails or is not possible, wasm.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":6548,"byte_end":6610,"line_start":234,"line_end":234,"column_start":3,"column_end":65}}]},{"kind":"Enum","id":{"krate":0,"index":2795},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":5935,"byte_end":5951,"line_start":222,"line_end":222,"column_start":11,"column_end":27},"name":"ExecutionManager","qualname":"::execution::ExecutionManager","value":"pub enum ExecutionManager<F> {\n    NativeWhenPossible,\n    AlwaysWasm(BackendTrustLevel),\n    Both(F),\n    NativeElseWasm,\n}","parent":null,"children":[{"krate":0,"index":2797},{"krate":0,"index":2799},{"krate":0,"index":2802},{"krate":0,"index":2805}],"decl_id":null,"docs":" Like `ExecutionStrategy` only it also stores a handler in case of consensus failure.\n","sig":null,"attributes":[{"value":"/ Like `ExecutionStrategy` only it also stores a handler in case of consensus failure.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":5818,"byte_end":5906,"line_start":220,"line_end":220,"column_start":2,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2022},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":7161,"byte_end":7172,"line_start":251,"line_end":251,"column_start":10,"column_end":21},"name":"get_manager","qualname":"<ExecutionStrategy>::get_manager","value":"pub fn get_manager<E: fmt::Debug, R: Decode + Encode>(Self)\n-> ExecutionManager<DefaultHandler<R, E>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the corresponding manager for the execution strategy.\n","sig":null,"attributes":[{"value":"/ Gets the corresponding manager for the execution strategy.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":7089,"byte_end":7151,"line_start":250,"line_end":250,"column_start":3,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":2026},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":7987,"byte_end":8003,"line_start":273,"line_end":273,"column_start":9,"column_end":25},"name":"native_else_wasm","qualname":"::execution::native_else_wasm","value":"pub fn native_else_wasm<E, R: Decode>()\n-> ExecutionManager<DefaultHandler<R, E>>","parent":null,"children":[],"decl_id":null,"docs":" Evaluate to ExecutionManager::NativeElseWasm, without having to figure out the type.\n","sig":null,"attributes":[{"value":"/ Evaluate to ExecutionManager::NativeElseWasm, without having to figure out the type.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":7890,"byte_end":7978,"line_start":272,"line_end":272,"column_start":2,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":2035},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":8662,"byte_end":8674,"line_start":290,"line_end":290,"column_start":13,"column_end":25},"name":"StateMachine","qualname":"::execution::StateMachine","value":"StateMachine {  }","parent":null,"children":[{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":2049}],"decl_id":null,"docs":" The substrate state machine.\n","sig":null,"attributes":[{"value":"/ The substrate state machine.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":8617,"byte_end":8649,"line_start":289,"line_end":289,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":9565,"byte_end":9568,"line_start":328,"line_end":328,"column_start":10,"column_end":13},"name":"new","qualname":"<StateMachine>::new","value":"pub fn new<impl SpawnNamed + Send + 'static: SpawnNamed + Send +\n'static>(&'a B, &'a mut OverlayedChanges, &'a Exec, &'a str, &'a [u8],\nExtensions, &'a RuntimeCode, impl SpawnNamed + Send + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates new substrate state machine.\n","sig":null,"attributes":[{"value":"/ Creates new substrate state machine.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":9515,"byte_end":9555,"line_start":327,"line_end":327,"column_start":3,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":10474,"byte_end":10504,"line_start":360,"line_end":360,"column_start":10,"column_end":40},"name":"with_storage_transaction_cache","qualname":"<StateMachine>::with_storage_transaction_cache","value":"pub fn with_storage_transaction_cache(Self,\nOption<&'a mut StorageTransactionCache<B::Transaction, H>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Use given `cache` as storage transaction cache.","sig":null,"attributes":[{"value":"/ Use given `cache` as storage transaction cache.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":10184,"byte_end":10235,"line_start":355,"line_end":355,"column_start":3,"column_end":54}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":10238,"byte_end":10241,"line_start":356,"line_end":356,"column_start":3,"column_end":6}},{"value":"/ The cache will be used to cache storage transactions that can be build while executing a","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":10244,"byte_end":10336,"line_start":357,"line_end":357,"column_start":3,"column_end":95}},{"value":"/ function in the runtime. For example, when calculating the storage root a transaction is","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":10339,"byte_end":10431,"line_start":358,"line_end":358,"column_start":3,"column_end":95}},{"value":"/ build that will be cached.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":10434,"byte_end":10464,"line_start":359,"line_end":359,"column_start":3,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2064},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":10787,"byte_end":10802,"line_start":371,"line_end":371,"column_start":10,"column_end":25},"name":"set_parent_hash","qualname":"<StateMachine>::set_parent_hash","value":"pub fn set_parent_hash(Self, H::Out) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the given `parent_hash` as the hash of the parent block.","sig":null,"attributes":[{"value":"/ Set the given `parent_hash` as the hash of the parent block.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":10661,"byte_end":10725,"line_start":368,"line_end":368,"column_start":3,"column_end":67}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":10728,"byte_end":10731,"line_start":369,"line_end":369,"column_start":3,"column_end":6}},{"value":"/ This will be used for improved logging.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":10734,"byte_end":10777,"line_start":370,"line_end":370,"column_start":3,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":11323,"byte_end":11330,"line_start":384,"line_end":384,"column_start":10,"column_end":17},"name":"execute","qualname":"<StateMachine>::execute","value":"pub fn execute(&mut Self, ExecutionStrategy)\n-> Result<Vec<u8>, Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":" Execute a call using the given state backend, overlayed changes, and call executor.","sig":null,"attributes":[{"value":"/ Execute a call using the given state backend, overlayed changes, and call executor.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":10900,"byte_end":10987,"line_start":376,"line_end":376,"column_start":3,"column_end":90}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":10990,"byte_end":10993,"line_start":377,"line_end":377,"column_start":3,"column_end":6}},{"value":"/ On an error, no prospective changes are written to the overlay.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":10996,"byte_end":11063,"line_start":378,"line_end":378,"column_start":3,"column_end":70}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":11066,"byte_end":11069,"line_start":379,"line_end":379,"column_start":3,"column_end":6}},{"value":"/ Note: changes to code will be in place if this call is made again. For running partial","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":11072,"byte_end":11162,"line_start":380,"line_end":380,"column_start":3,"column_end":93}},{"value":"/ blocks (e.g. a transaction at a time), ensure a different method is used.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":11165,"byte_end":11242,"line_start":381,"line_end":381,"column_start":3,"column_end":80}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":11245,"byte_end":11248,"line_start":382,"line_end":382,"column_start":3,"column_end":6}},{"value":"/ Returns the SCALE encoded result of the executed function.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":11251,"byte_end":11313,"line_start":383,"line_end":383,"column_start":3,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":15307,"byte_end":15346,"line_start":518,"line_end":518,"column_start":10,"column_end":49},"name":"execute_using_consensus_failure_handler","qualname":"<StateMachine>::execute_using_consensus_failure_handler","value":"pub fn execute_using_consensus_failure_handler<Handler, R,\nNC>(&mut Self, ExecutionManager<Handler>, Option<NC>)\n-> Result<NativeOrEncoded<R>, Box<dyn Error>> where R: Decode + Encode +\nPartialEq, NC: FnOnce() ->\nresult::Result<R, Box<dyn std::error::Error + Send + Sync>> + UnwindSafe,\nHandler: FnOnce(CallResult<R, Exec::Error>, CallResult<R, Exec::Error>) ->\nCallResult<R, Exec::Error>","parent":null,"children":[],"decl_id":null,"docs":" Execute a call using the given state backend, overlayed changes, and call executor.","sig":null,"attributes":[{"value":"/ Execute a call using the given state backend, overlayed changes, and call executor.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":14821,"byte_end":14908,"line_start":509,"line_end":509,"column_start":3,"column_end":90}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":14911,"byte_end":14914,"line_start":510,"line_end":510,"column_start":3,"column_end":6}},{"value":"/ On an error, no prospective changes are written to the overlay.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":14917,"byte_end":14984,"line_start":511,"line_end":511,"column_start":3,"column_end":70}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":14987,"byte_end":14990,"line_start":512,"line_end":512,"column_start":3,"column_end":6}},{"value":"/ Note: changes to code will be in place if this call is made again. For running partial","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":14993,"byte_end":15083,"line_start":513,"line_end":513,"column_start":3,"column_end":93}},{"value":"/ blocks (e.g. a transaction at a time), ensure a different method is used.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":15086,"byte_end":15163,"line_start":514,"line_end":514,"column_start":3,"column_end":80}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":15166,"byte_end":15169,"line_start":515,"line_end":515,"column_start":3,"column_end":6}},{"value":"/ Returns the result of the executed function either in native representation `R` or","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":15172,"byte_end":15258,"line_start":516,"line_end":516,"column_start":3,"column_end":89}},{"value":"/ in SCALE encoded representation.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":15261,"byte_end":15297,"line_start":517,"line_end":517,"column_start":3,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":2081},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":16601,"byte_end":16616,"line_start":555,"line_end":555,"column_start":9,"column_end":24},"name":"prove_execution","qualname":"::execution::prove_execution","value":"pub fn prove_execution<B, H, Exec,\nSpawn>(&mut B, &mut OverlayedChanges, &Exec, Spawn, &str, &[u8], &RuntimeCode)\n-> Result<(Vec<u8>, StorageProof), Box<dyn Error>> where B: Backend<H>,\nH: Hasher, H::Out: Ord + 'static + codec::Codec, Exec: CodeExecutor + Clone +\n'static, Spawn: SpawnNamed + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Prove execution using the given state backend, overlayed changes, and call executor.\n","sig":null,"attributes":[{"value":"/ Prove execution using the given state backend, overlayed changes, and call executor.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":16504,"byte_end":16592,"line_start":554,"line_end":554,"column_start":2,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":2087},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":17866,"byte_end":17897,"line_start":594,"line_end":594,"column_start":9,"column_end":40},"name":"prove_execution_on_trie_backend","qualname":"::execution::prove_execution_on_trie_backend","value":"pub fn prove_execution_on_trie_backend<S, H, Exec,\nSpawn>(&TrieBackend<S, H>, &mut OverlayedChanges, &Exec, Spawn, &str, &[u8],\n&RuntimeCode) -> Result<(Vec<u8>, StorageProof), Box<dyn Error>> where\nS: trie_backend_essence::TrieBackendStorage<H>, H: Hasher, H::Out: Ord +\n'static + codec::Codec, Exec: CodeExecutor + 'static + Clone,\nSpawn: SpawnNamed + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Prove execution using the given trie backend, overlayed changes, and call executor.\n Produces a state-backend-specific \"transaction\" which can be used to apply the changes\n to the backing store, such as the disk.\n Execution proof is the set of all 'touched' storage DBValues from the backend.","sig":null,"attributes":[{"value":"/ Prove execution using the given trie backend, overlayed changes, and call executor.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":17299,"byte_end":17386,"line_start":585,"line_end":585,"column_start":2,"column_end":89}},{"value":"/ Produces a state-backend-specific \"transaction\" which can be used to apply the changes","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":17388,"byte_end":17478,"line_start":586,"line_end":586,"column_start":2,"column_end":92}},{"value":"/ to the backing store, such as the disk.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":17480,"byte_end":17523,"line_start":587,"line_end":587,"column_start":2,"column_end":45}},{"value":"/ Execution proof is the set of all 'touched' storage DBValues from the backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":17525,"byte_end":17607,"line_start":588,"line_end":588,"column_start":2,"column_end":84}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":17609,"byte_end":17612,"line_start":589,"line_end":589,"column_start":2,"column_end":5}},{"value":"/ On an error, no prospective changes are written to the overlay.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":17614,"byte_end":17681,"line_start":590,"line_end":590,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":17683,"byte_end":17686,"line_start":591,"line_end":591,"column_start":2,"column_end":5}},{"value":"/ Note: changes to code will be in place if this call is made again. For running partial","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":17688,"byte_end":17778,"line_start":592,"line_end":592,"column_start":2,"column_end":92}},{"value":"/ blocks (e.g. a transaction at a time), ensure a different method is used.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":17780,"byte_end":17857,"line_start":593,"line_end":593,"column_start":2,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":2092},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":18876,"byte_end":18897,"line_start":631,"line_end":631,"column_start":9,"column_end":30},"name":"execution_proof_check","qualname":"::execution::execution_proof_check","value":"pub fn execution_proof_check<H, Exec,\nSpawn>(H::Out, StorageProof, &mut OverlayedChanges, &Exec, Spawn, &str, &[u8],\n&RuntimeCode) -> Result<Vec<u8>, Box<dyn Error>> where H: Hasher,\nExec: CodeExecutor + Clone + 'static, H::Out: Ord + 'static + codec::Codec,\nSpawn: SpawnNamed + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Check execution proof, generated by `prove_execution` call.\n","sig":null,"attributes":[{"value":"/ Check execution proof, generated by `prove_execution` call.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":18804,"byte_end":18867,"line_start":630,"line_end":630,"column_start":2,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":2096},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":19596,"byte_end":19633,"line_start":660,"line_end":660,"column_start":9,"column_end":46},"name":"execution_proof_check_on_trie_backend","qualname":"::execution::execution_proof_check_on_trie_backend","value":"pub fn execution_proof_check_on_trie_backend<H, Exec,\nSpawn>(&TrieBackend<MemoryDB<H>, H>, &mut OverlayedChanges, &Exec, Spawn,\n&str, &[u8], &RuntimeCode) -> Result<Vec<u8>, Box<dyn Error>> where H: Hasher,\nH::Out: Ord + 'static + codec::Codec, Exec: CodeExecutor + Clone + 'static,\nSpawn: SpawnNamed + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Check execution proof on proving backend, generated by `prove_execution` call.\n","sig":null,"attributes":[{"value":"/ Check execution proof on proving backend, generated by `prove_execution` call.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":19505,"byte_end":19587,"line_start":659,"line_end":659,"column_start":2,"column_end":84}}]},{"kind":"Function","id":{"krate":0,"index":2100},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":20396,"byte_end":20406,"line_start":694,"line_end":694,"column_start":9,"column_end":19},"name":"prove_read","qualname":"::execution::prove_read","value":"pub fn prove_read<B, H, I>(B, I) -> Result<StorageProof, Box<dyn Error>> where\nB: Backend<H>, H: Hasher, H::Out: Ord + Codec, I: IntoIterator,\nI::Item: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Generate storage read proof.\n","sig":null,"attributes":[{"value":"/ Generate storage read proof.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":20355,"byte_end":20387,"line_start":693,"line_end":693,"column_start":2,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":2105},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":20851,"byte_end":20872,"line_start":710,"line_end":710,"column_start":12,"column_end":33},"name":"MAX_NESTED_TRIE_DEPTH","qualname":"::execution::MAX_NESTED_TRIE_DEPTH","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" State machine only allows a single level\n of child trie.\n","sig":null,"attributes":[{"value":"/ State machine only allows a single level","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":20775,"byte_end":20819,"line_start":708,"line_end":708,"column_start":2,"column_end":46}},{"value":"/ of child trie.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":20821,"byte_end":20839,"line_start":709,"line_end":709,"column_start":2,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2850},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":21007,"byte_end":21021,"line_start":715,"line_end":715,"column_start":13,"column_end":27},"name":"KeyValueStates","qualname":"::execution::KeyValueStates","value":"","parent":null,"children":[],"decl_id":null,"docs":" Multiple key value state.\n States are ordered by root storage key.\n","sig":null,"attributes":[{"value":"/ Multiple key value state.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":20887,"byte_end":20916,"line_start":712,"line_end":712,"column_start":2,"column_end":31}},{"value":"/ States are ordered by root storage key.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":20918,"byte_end":20961,"line_start":713,"line_end":713,"column_start":2,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2852},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":21022,"byte_end":21051,"line_start":715,"line_end":715,"column_start":28,"column_end":57},"name":"0","qualname":"::execution::KeyValueStates::0","value":"std::vec::Vec<execution::KeyValueStorageLevel>","parent":{"krate":0,"index":2850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2862},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":21145,"byte_end":21165,"line_start":719,"line_end":719,"column_start":13,"column_end":33},"name":"KeyValueStorageLevel","qualname":"::execution::KeyValueStorageLevel","value":"KeyValueStorageLevel { state_root, parent_storage_keys, key_values }","parent":null,"children":[{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2865}],"decl_id":null,"docs":" A key value state at any storage level.\n","sig":null,"attributes":[{"value":"/ A key value state at any storage level.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":21056,"byte_end":21099,"line_start":717,"line_end":717,"column_start":2,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2863},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":21254,"byte_end":21264,"line_start":722,"line_end":722,"column_start":7,"column_end":17},"name":"state_root","qualname":"::execution::KeyValueStorageLevel::state_root","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":" State root of the level, for\n top trie it is as an empty byte array.\n","sig":null,"attributes":[{"value":"/ State root of the level, for","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":21170,"byte_end":21202,"line_start":720,"line_end":720,"column_start":3,"column_end":35}},{"value":"/ top trie it is as an empty byte array.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":21205,"byte_end":21247,"line_start":721,"line_end":721,"column_start":3,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2864},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":21368,"byte_end":21387,"line_start":725,"line_end":725,"column_start":7,"column_end":26},"name":"parent_storage_keys","qualname":"::execution::KeyValueStorageLevel::parent_storage_keys","value":"std::vec::Vec<std::vec::Vec<u8>>","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":" Storage of parents, empty for top root or\n when exporting (building proof).\n","sig":null,"attributes":[{"value":"/ Storage of parents, empty for top root or","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":21277,"byte_end":21322,"line_start":723,"line_end":723,"column_start":3,"column_end":48}},{"value":"/ when exporting (building proof).","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":21325,"byte_end":21361,"line_start":724,"line_end":724,"column_start":3,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2865},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":21455,"byte_end":21465,"line_start":727,"line_end":727,"column_start":7,"column_end":17},"name":"key_values","qualname":"::execution::KeyValueStorageLevel::key_values","value":"std::vec::Vec<(std::vec::Vec<u8>, std::vec::Vec<u8>)>","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":" Pair of key and values from this state.\n","sig":null,"attributes":[{"value":"/ Pair of key and values from this state.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":21405,"byte_end":21448,"line_start":726,"line_end":726,"column_start":3,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":21989,"byte_end":21992,"line_start":749,"line_end":749,"column_start":10,"column_end":13},"name":"len","qualname":"<KeyValueStates>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return total number of key values in states.\n","sig":null,"attributes":[{"value":"/ Return total number of key values in states.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":21931,"byte_end":21979,"line_start":748,"line_end":748,"column_start":3,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":22140,"byte_end":22155,"line_start":754,"line_end":754,"column_start":10,"column_end":25},"name":"update_last_key","qualname":"<KeyValueStates>::update_last_key","value":"pub fn update_last_key(&Self, usize, &mut SmallVec<[Vec<u8>; ]>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Update last keys accessed from this state.\n","sig":null,"attributes":[{"value":"/ Update last keys accessed from this state.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":22084,"byte_end":22130,"line_start":753,"line_end":753,"column_start":3,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2120},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":23960,"byte_end":23997,"line_start":826,"line_end":826,"column_start":9,"column_end":46},"name":"prove_range_read_with_child_with_size","qualname":"::execution::prove_range_read_with_child_with_size","value":"pub fn prove_range_read_with_child_with_size<B, H>(B, usize, &[Vec<u8>])\n-> Result<(StorageProof, u32), Box<dyn Error>> where B: Backend<H>, H: Hasher,\nH::Out: Ord + Codec","parent":null,"children":[],"decl_id":null,"docs":" Generate range storage read proof, with child tries\n content.\n A size limit is applied to the proof with the\n exception that `start_at` and its following element\n are always part of the proof.\n If a key different than `start_at` is a child trie root,\n the child trie content will be included in the proof.\n","sig":null,"attributes":[{"value":"/ Generate range storage read proof, with child tries","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":23618,"byte_end":23673,"line_start":819,"line_end":819,"column_start":2,"column_end":57}},{"value":"/ content.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":23675,"byte_end":23687,"line_start":820,"line_end":820,"column_start":2,"column_end":14}},{"value":"/ A size limit is applied to the proof with the","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":23689,"byte_end":23738,"line_start":821,"line_end":821,"column_start":2,"column_end":51}},{"value":"/ exception that `start_at` and its following element","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":23740,"byte_end":23795,"line_start":822,"line_end":822,"column_start":2,"column_end":57}},{"value":"/ are always part of the proof.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":23797,"byte_end":23830,"line_start":823,"line_end":823,"column_start":2,"column_end":35}},{"value":"/ If a key different than `start_at` is a child trie root,","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":23832,"byte_end":23892,"line_start":824,"line_end":824,"column_start":2,"column_end":62}},{"value":"/ the child trie content will be included in the proof.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":23894,"byte_end":23951,"line_start":825,"line_end":825,"column_start":2,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":2124},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":24540,"byte_end":24593,"line_start":845,"line_end":845,"column_start":9,"column_end":62},"name":"prove_range_read_with_child_with_size_on_trie_backend","qualname":"::execution::prove_range_read_with_child_with_size_on_trie_backend","value":"pub fn prove_range_read_with_child_with_size_on_trie_backend<S,\nH>(&TrieBackend<S, H>, usize, &[Vec<u8>])\n-> Result<(StorageProof, u32), Box<dyn Error>> where\nS: trie_backend_essence::TrieBackendStorage<H>, H: Hasher, H::Out: Ord + Codec","parent":null,"children":[],"decl_id":null,"docs":" Generate range storage read proof, with child tries\n content.\n See `prove_range_read_with_child_with_size`.\n","sig":null,"attributes":[{"value":"/ Generate range storage read proof, with child tries","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":24412,"byte_end":24467,"line_start":842,"line_end":842,"column_start":2,"column_end":57}},{"value":"/ content.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":24469,"byte_end":24481,"line_start":843,"line_end":843,"column_start":2,"column_end":14}},{"value":"/ See `prove_range_read_with_child_with_size`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":24483,"byte_end":24531,"line_start":844,"line_end":844,"column_start":2,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":2131},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":27455,"byte_end":27481,"line_start":957,"line_end":957,"column_start":9,"column_end":35},"name":"prove_range_read_with_size","qualname":"::execution::prove_range_read_with_size","value":"pub fn prove_range_read_with_size<B,\nH>(B, Option<&ChildInfo>, Option<&[u8]>, usize, Option<&[u8]>)\n-> Result<(StorageProof, u32), Box<dyn Error>> where B: Backend<H>, H: Hasher,\nH::Out: Ord + Codec","parent":null,"children":[],"decl_id":null,"docs":" Generate range storage read proof.\n","sig":null,"attributes":[{"value":"/ Generate range storage read proof.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":27408,"byte_end":27446,"line_start":956,"line_end":956,"column_start":2,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2135},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":28062,"byte_end":28104,"line_start":982,"line_end":982,"column_start":9,"column_end":51},"name":"prove_range_read_with_size_on_trie_backend","qualname":"::execution::prove_range_read_with_size_on_trie_backend","value":"pub fn prove_range_read_with_size_on_trie_backend<S,\nH>(&TrieBackend<S, H>, Option<&ChildInfo>, Option<&[u8]>, usize,\nOption<&[u8]>) -> Result<(StorageProof, u32), Box<dyn Error>> where\nS: trie_backend_essence::TrieBackendStorage<H>, H: Hasher, H::Out: Ord + Codec","parent":null,"children":[],"decl_id":null,"docs":" Generate range storage read proof on an existing trie backend.\n","sig":null,"attributes":[{"value":"/ Generate range storage read proof on an existing trie backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":27987,"byte_end":28053,"line_start":981,"line_end":981,"column_start":2,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":2140},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":28929,"byte_end":28945,"line_start":1016,"line_end":1016,"column_start":9,"column_end":25},"name":"prove_child_read","qualname":"::execution::prove_child_read","value":"pub fn prove_child_read<B, H, I>(B, &ChildInfo, I)\n-> Result<StorageProof, Box<dyn Error>> where B: Backend<H>, H: Hasher,\nH::Out: Ord + Codec, I: IntoIterator, I::Item: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Generate child storage read proof.\n","sig":null,"attributes":[{"value":"/ Generate child storage read proof.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":28882,"byte_end":28920,"line_start":1015,"line_end":1015,"column_start":2,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2145},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":29435,"byte_end":29461,"line_start":1035,"line_end":1035,"column_start":9,"column_end":35},"name":"prove_read_on_trie_backend","qualname":"::execution::prove_read_on_trie_backend","value":"pub fn prove_read_on_trie_backend<S, H, I>(&TrieBackend<S, H>, I)\n-> Result<StorageProof, Box<dyn Error>> where\nS: trie_backend_essence::TrieBackendStorage<H>, H: Hasher, H::Out: Ord +\nCodec, I: IntoIterator, I::Item: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Generate storage read proof on pre-created trie backend.\n","sig":null,"attributes":[{"value":"/ Generate storage read proof on pre-created trie backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":29366,"byte_end":29426,"line_start":1034,"line_end":1034,"column_start":2,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":2150},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":30029,"byte_end":30061,"line_start":1056,"line_end":1056,"column_start":9,"column_end":41},"name":"prove_child_read_on_trie_backend","qualname":"::execution::prove_child_read_on_trie_backend","value":"pub fn prove_child_read_on_trie_backend<S, H,\nI>(&TrieBackend<S, H>, &ChildInfo, I) -> Result<StorageProof, Box<dyn Error>>\nwhere S: trie_backend_essence::TrieBackendStorage<H>, H: Hasher, H::Out: Ord +\nCodec, I: IntoIterator, I::Item: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Generate storage read proof on pre-created trie backend.\n","sig":null,"attributes":[{"value":"/ Generate storage read proof on pre-created trie backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":29960,"byte_end":30020,"line_start":1055,"line_end":1055,"column_start":2,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":2155},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":30674,"byte_end":30690,"line_start":1078,"line_end":1078,"column_start":9,"column_end":25},"name":"read_proof_check","qualname":"::execution::read_proof_check","value":"pub fn read_proof_check<H, I>(H::Out, StorageProof, I)\n-> Result<HashMap<Vec<u8>, Option<Vec<u8>>>, Box<dyn Error>> where H: Hasher,\nH::Out: Ord + Codec, I: IntoIterator, I::Item: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Check storage read proof, generated by `prove_read` call.\n","sig":null,"attributes":[{"value":"/ Check storage read proof, generated by `prove_read` call.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":30604,"byte_end":30665,"line_start":1077,"line_end":1077,"column_start":2,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":2158},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":31428,"byte_end":31461,"line_start":1103,"line_end":1103,"column_start":9,"column_end":42},"name":"read_range_proof_check_with_child","qualname":"::execution::read_range_proof_check_with_child","value":"pub fn read_range_proof_check_with_child<H>(H::Out, StorageProof, &[Vec<u8>])\n-> Result<(KeyValueStates, usize), Box<dyn Error>> where H: Hasher,\nH::Out: Ord + Codec","parent":null,"children":[],"decl_id":null,"docs":" Check storage range proof with child trie included, generated by\n `prove_range_read_with_child_with_size` call.","sig":null,"attributes":[{"value":"/ Check storage range proof with child trie included, generated by","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":31194,"byte_end":31262,"line_start":1098,"line_end":1098,"column_start":2,"column_end":70}},{"value":"/ `prove_range_read_with_child_with_size` call.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":31264,"byte_end":31313,"line_start":1099,"line_end":1099,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":31315,"byte_end":31318,"line_start":1100,"line_end":1100,"column_start":2,"column_end":5}},{"value":"/ Returns key values contents and the depth of the pending state iteration","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":31320,"byte_end":31396,"line_start":1101,"line_end":1101,"column_start":2,"column_end":78}},{"value":"/ (0 if completed).","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":31398,"byte_end":31419,"line_start":1102,"line_end":1102,"column_start":2,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":2160},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":31881,"byte_end":31903,"line_start":1117,"line_end":1117,"column_start":9,"column_end":31},"name":"read_range_proof_check","qualname":"::execution::read_range_proof_check","value":"pub fn read_range_proof_check<H>(H::Out, StorageProof, Option<&ChildInfo>,\nOption<&[u8]>, Option<u32>, Option<&[u8]>)\n-> Result<(Vec<(Vec<u8>, Vec<u8>)>, bool), Box<dyn Error>> where H: Hasher,\nH::Out: Ord + Codec","parent":null,"children":[],"decl_id":null,"docs":" Check child storage range proof, generated by `prove_range_read_with_size` call.\n","sig":null,"attributes":[{"value":"/ Check child storage range proof, generated by `prove_range_read_with_size` call.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":31788,"byte_end":31872,"line_start":1116,"line_end":1116,"column_start":2,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":2162},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":32440,"byte_end":32462,"line_start":1140,"line_end":1140,"column_start":9,"column_end":31},"name":"read_child_proof_check","qualname":"::execution::read_child_proof_check","value":"pub fn read_child_proof_check<H, I>(H::Out, StorageProof, &ChildInfo, I)\n-> Result<HashMap<Vec<u8>, Option<Vec<u8>>>, Box<dyn Error>> where H: Hasher,\nH::Out: Ord + Codec, I: IntoIterator, I::Item: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Check child storage read proof, generated by `prove_child_read` call.\n","sig":null,"attributes":[{"value":"/ Check child storage read proof, generated by `prove_child_read` call.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":32358,"byte_end":32431,"line_start":1139,"line_end":1139,"column_start":2,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":2165},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":33097,"byte_end":33132,"line_start":1166,"line_end":1166,"column_start":9,"column_end":44},"name":"read_proof_check_on_proving_backend","qualname":"::execution::read_proof_check_on_proving_backend","value":"pub fn read_proof_check_on_proving_backend<H>(&TrieBackend<MemoryDB<H>, H>,\n&[u8]) -> Result<Option<Vec<u8>>, Box<dyn Error>> where H: Hasher,\nH::Out: Ord + Codec","parent":null,"children":[],"decl_id":null,"docs":" Check storage read proof on pre-created proving backend.\n","sig":null,"attributes":[{"value":"/ Check storage read proof on pre-created proving backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":33028,"byte_end":33088,"line_start":1165,"line_end":1165,"column_start":2,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":2168},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":33446,"byte_end":33487,"line_start":1178,"line_end":1178,"column_start":9,"column_end":50},"name":"read_child_proof_check_on_proving_backend","qualname":"::execution::read_child_proof_check_on_proving_backend","value":"pub fn read_child_proof_check_on_proving_backend<H>(&TrieBackend<MemoryDB<H>,\n    H>, &ChildInfo, &[u8]) -> Result<Option<Vec<u8>>, Box<dyn Error>> where\nH: Hasher, H::Out: Ord + Codec","parent":null,"children":[],"decl_id":null,"docs":" Check child storage read proof on pre-created proving backend.\n","sig":null,"attributes":[{"value":"/ Check child storage read proof on pre-created proving backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":33371,"byte_end":33437,"line_start":1177,"line_end":1177,"column_start":2,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":2171},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":34016,"byte_end":34057,"line_start":1196,"line_end":1196,"column_start":9,"column_end":50},"name":"read_range_proof_check_on_proving_backend","qualname":"::execution::read_range_proof_check_on_proving_backend","value":"pub fn read_range_proof_check_on_proving_backend<H>(&TrieBackend<MemoryDB<H>,\n    H>, Option<&ChildInfo>, Option<&[u8]>, Option<u32>, Option<&[u8]>)\n-> Result<(Vec<(Vec<u8>, Vec<u8>)>, bool), Box<dyn Error>> where H: Hasher,\nH::Out: Ord + Codec","parent":null,"children":[],"decl_id":null,"docs":" Check storage range proof on pre-created proving backend.","sig":null,"attributes":[{"value":"/ Check storage range proof on pre-created proving backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":33778,"byte_end":33839,"line_start":1192,"line_end":1192,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":33841,"byte_end":33844,"line_start":1193,"line_end":1193,"column_start":2,"column_end":5}},{"value":"/ Returns a vector with the read `key => value` pairs and a `bool` that is set to `true` when","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":33846,"byte_end":33941,"line_start":1194,"line_end":1194,"column_start":2,"column_end":97}},{"value":"/ all `key => value` pairs could be read and no more are left.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":33943,"byte_end":34007,"line_start":1195,"line_end":1195,"column_start":2,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":2175},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":34847,"byte_end":34899,"line_start":1227,"line_end":1227,"column_start":9,"column_end":61},"name":"read_range_proof_check_with_child_on_proving_backend","qualname":"::execution::read_range_proof_check_with_child_on_proving_backend","value":"pub fn read_range_proof_check_with_child_on_proving_backend<H>(&TrieBackend<MemoryDB<H>,\n    H>, &[Vec<u8>]) -> Result<(KeyValueStates, usize), Box<dyn Error>> where\nH: Hasher, H::Out: Ord + Codec","parent":null,"children":[],"decl_id":null,"docs":" Check storage range proof on pre-created proving backend.","sig":null,"attributes":[{"value":"/ Check storage range proof on pre-created proving backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":34726,"byte_end":34787,"line_start":1224,"line_end":1224,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":34789,"byte_end":34792,"line_start":1225,"line_end":1225,"column_start":2,"column_end":5}},{"value":"/ See `read_range_proof_check_with_child`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":34794,"byte_end":34838,"line_start":1226,"line_end":1226,"column_start":2,"column_end":46}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":77106,"byte_end":77109,"line_start":287,"line_end":287,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":77268,"byte_end":77283,"line_start":293,"line_end":293,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":77746,"byte_end":77764,"line_start":312,"line_end":312,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":78030,"byte_end":78048,"line_start":324,"line_end":324,"column_start":36,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":80121,"byte_end":80139,"line_start":48,"line_end":48,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":81728,"byte_end":81746,"line_start":109,"line_end":109,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":81963,"byte_end":81981,"line_start":116,"line_end":116,"column_start":51,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":82155,"byte_end":82173,"line_start":124,"line_end":124,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":82288,"byte_end":82306,"line_start":130,"line_end":130,"column_start":51,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":82538,"byte_end":82556,"line_start":139,"line_end":139,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":88862,"byte_end":88880,"line_start":359,"line_end":359,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":93007,"byte_end":93008,"line_start":26,"line_end":26,"column_start":70,"column_end":71},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":96198,"byte_end":96203,"line_start":73,"line_end":73,"column_start":72,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":96530,"byte_end":96535,"line_start":83,"line_end":83,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":97279,"byte_end":97282,"line_start":111,"line_end":111,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":98861,"byte_end":98864,"line_start":173,"line_end":173,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":430},{"krate":0,"index":435},{"krate":0,"index":439},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":450},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":114848,"byte_end":114851,"line_start":729,"line_end":729,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":116152,"byte_end":116169,"line_start":782,"line_end":782,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":116385,"byte_end":116398,"line_start":791,"line_end":791,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":117742,"byte_end":117745,"line_start":846,"line_end":846,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":127095,"byte_end":127106,"line_start":39,"line_end":39,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":128696,"byte_end":128707,"line_start":92,"line_end":92,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":128887,"byte_end":128898,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":129096,"byte_end":129107,"line_start":111,"line_end":111,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":129537,"byte_end":129548,"line_start":132,"line_end":132,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":130003,"byte_end":130014,"line_start":148,"line_end":148,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":130353,"byte_end":130364,"line_start":160,"line_end":160,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":168177,"byte_end":168191,"line_start":84,"line_end":84,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":169470,"byte_end":169482,"line_start":113,"line_end":113,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":169699,"byte_end":169712,"line_start":124,"line_end":124,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":169768,"byte_end":169782,"line_start":130,"line_end":130,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":171443,"byte_end":171457,"line_start":182,"line_end":182,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":171972,"byte_end":171984,"line_start":197,"line_end":197,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":679},{"krate":0,"index":681},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":178492,"byte_end":178510,"line_start":377,"line_end":377,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":195247,"byte_end":195271,"line_start":38,"line_end":38,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":731},{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":134672,"byte_end":134682,"line_start":69,"line_end":69,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":137402,"byte_end":137416,"line_start":154,"line_end":154,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":138393,"byte_end":138416,"line_start":187,"line_end":187,"column_start":30,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":138572,"byte_end":138595,"line_start":194,"line_end":194,"column_start":42,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":138755,"byte_end":138769,"line_start":200,"line_end":200,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":139138,"byte_end":139154,"line_start":214,"line_end":214,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":868},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":896},{"krate":0,"index":898},{"krate":0,"index":902},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":155307,"byte_end":155326,"line_start":687,"line_end":687,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":199689,"byte_end":199711,"line_start":46,"line_end":46,"column_start":16,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1076},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":202074,"byte_end":202087,"line_start":129,"line_end":129,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":203940,"byte_end":203954,"line_start":192,"line_end":192,"column_start":57,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":205254,"byte_end":205274,"line_start":233,"line_end":233,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1116},{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":205692,"byte_end":205706,"line_start":249,"line_end":249,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":205855,"byte_end":205869,"line_start":256,"line_end":256,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1134},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1140},{"krate":0,"index":1142},{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1150},{"krate":0,"index":1153},{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":217909,"byte_end":217910,"line_start":46,"line_end":46,"column_start":55,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":218372,"byte_end":218393,"line_start":62,"line_end":62,"column_start":57,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":218546,"byte_end":218567,"line_start":68,"line_end":68,"column_start":41,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1223}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":218889,"byte_end":218910,"line_start":77,"line_end":77,"column_start":59,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":222798,"byte_end":222819,"line_start":198,"line_end":198,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225862,"byte_end":225879,"line_start":81,"line_end":81,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":226287,"byte_end":226296,"line_start":91,"line_end":91,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1279}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":227187,"byte_end":227204,"line_start":120,"line_end":120,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1281},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":229438,"byte_end":229455,"line_start":61,"line_end":61,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1387},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1394},{"krate":0,"index":1397}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":235035,"byte_end":235052,"line_start":237,"line_end":237,"column_start":37,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1404}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":235275,"byte_end":235292,"line_start":246,"line_end":246,"column_start":31,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1407}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":235584,"byte_end":235601,"line_start":257,"line_end":257,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":235820,"byte_end":235837,"line_start":267,"line_end":267,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":236041,"byte_end":236058,"line_start":276,"line_end":276,"column_start":51,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":236285,"byte_end":236302,"line_start":285,"line_end":285,"column_start":46,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":236984,"byte_end":237001,"line_start":314,"line_end":314,"column_start":48,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1424},{"krate":0,"index":1426},{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend.rs","byte_start":241372,"byte_end":241383,"line_start":40,"line_end":40,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend.rs","byte_start":242055,"byte_end":242066,"line_start":70,"line_end":70,"column_start":66,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend.rs","byte_start":242241,"byte_end":242252,"line_start":76,"line_end":76,"column_start":58,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":1540},{"krate":0,"index":1542},{"krate":0,"index":1544},{"krate":0,"index":1546},{"krate":0,"index":1548},{"krate":0,"index":1551},{"krate":0,"index":1554},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":255129,"byte_end":255134,"line_start":66,"line_end":66,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1667}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":255471,"byte_end":255489,"line_start":81,"line_end":81,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1682},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1697},{"krate":0,"index":1699},{"krate":0,"index":1703},{"krate":0,"index":1707},{"krate":0,"index":1710},{"krate":0,"index":1713},{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":265143,"byte_end":265152,"line_start":449,"line_end":449,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1729},{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":265382,"byte_end":265391,"line_start":459,"line_end":459,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1737}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":265594,"byte_end":265603,"line_start":466,"line_end":466,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":266461,"byte_end":266470,"line_start":499,"line_end":499,"column_start":78,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":1751},{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":267142,"byte_end":267145,"line_start":520,"line_end":520,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1759},{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":267392,"byte_end":267407,"line_start":528,"line_end":528,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1764},{"krate":0,"index":1765}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":267695,"byte_end":267713,"line_start":540,"line_end":540,"column_start":68,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":1769},{"krate":0,"index":1771}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":267958,"byte_end":267976,"line_start":549,"line_end":549,"column_start":66,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1780}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":268710,"byte_end":268728,"line_start":580,"line_end":580,"column_start":69,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":1784},{"krate":0,"index":1785}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":6680,"byte_end":6697,"line_start":238,"line_end":238,"column_start":48,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2020}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":7067,"byte_end":7084,"line_start":249,"line_end":249,"column_start":7,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2022}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":9189,"byte_end":9201,"line_start":310,"line_end":310,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2055}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":9364,"byte_end":9376,"line_start":320,"line_end":320,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2061},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2069},{"krate":0,"index":2073},{"krate":0,"index":2076}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":21517,"byte_end":21531,"line_start":730,"line_end":730,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2108}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":21912,"byte_end":21926,"line_start":747,"line_end":747,"column_start":7,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2110},{"krate":0,"index":2112}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":806,"byte_end":813,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":69221,"byte_end":69226,"line_start":35,"line_end":35,"column_start":44,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":9604},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":77106,"byte_end":77109,"line_start":287,"line_end":287,"column_start":22,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":107}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":77268,"byte_end":77283,"line_start":293,"line_end":293,"column_start":38,"column_end":53},"kind":{"Impl":{"id":1}},"from":{"krate":180,"index":539},"to":{"krate":0,"index":107}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":77746,"byte_end":77764,"line_start":312,"line_end":312,"column_start":6,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":117},"to":{"krate":26,"index":2056}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/backend.rs","byte_start":78030,"byte_end":78048,"line_start":324,"line_end":324,"column_start":36,"column_end":54},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":80121,"byte_end":80139,"line_start":48,"line_end":48,"column_start":6,"column_end":24},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":81728,"byte_end":81746,"line_start":109,"line_end":109,"column_start":20,"column_end":38},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2182},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":81963,"byte_end":81981,"line_start":116,"line_end":116,"column_start":51,"column_end":69},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2182},"to":{"krate":2,"index":7718}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":82155,"byte_end":82173,"line_start":124,"line_end":124,"column_start":18,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2182},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":82288,"byte_end":82306,"line_start":130,"line_end":130,"column_start":51,"column_end":69},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2182},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":82538,"byte_end":82556,"line_start":139,"line_end":139,"column_start":24,"column_end":42},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2182},"to":{"krate":70,"index":98}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/basic.rs","byte_start":88862,"byte_end":88880,"line_start":359,"line_end":359,"column_start":43,"column_end":61},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2182},"to":{"krate":70,"index":72}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":92899,"byte_end":92904,"line_start":24,"line_end":24,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":9604},"to":{"krate":0,"index":290}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":92912,"byte_end":92919,"line_start":24,"line_end":24,"column_start":46,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":9611},"to":{"krate":0,"index":290}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":92922,"byte_end":92926,"line_start":24,"line_end":24,"column_start":56,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":290}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":92929,"byte_end":92933,"line_start":24,"line_end":24,"column_start":63,"column_end":67},"kind":"SuperTrait","from":{"krate":2,"index":3036},"to":{"krate":0,"index":290}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/error.rs","byte_start":93007,"byte_end":93008,"line_start":26,"line_end":26,"column_start":70,"column_end":71},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":292},"to":{"krate":0,"index":290}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":96198,"byte_end":96203,"line_start":73,"line_end":73,"column_start":72,"column_end":77},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2209},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":96530,"byte_end":96535,"line_start":83,"line_end":83,"column_start":57,"column_end":62},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2209},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":97279,"byte_end":97282,"line_start":111,"line_end":111,"column_start":16,"column_end":19},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":98861,"byte_end":98864,"line_start":173,"line_end":173,"column_start":34,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":406},"to":{"krate":70,"index":98}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":114848,"byte_end":114851,"line_start":729,"line_end":729,"column_start":16,"column_end":19},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":116152,"byte_end":116169,"line_start":782,"line_end":782,"column_start":17,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":490},"to":{"krate":18,"index":202}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":116385,"byte_end":116398,"line_start":791,"line_end":791,"column_start":10,"column_end":23},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/ext.rs","byte_start":117742,"byte_end":117745,"line_start":846,"line_end":846,"column_start":35,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":406},"to":{"krate":70,"index":72}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":127095,"byte_end":127106,"line_start":39,"line_end":39,"column_start":17,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":128696,"byte_end":128707,"line_start":92,"line_end":92,"column_start":27,"column_end":38},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1510},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":128887,"byte_end":128898,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1510},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":129096,"byte_end":129107,"line_start":111,"line_end":111,"column_start":6,"column_end":17},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1510},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":129537,"byte_end":129548,"line_start":132,"line_end":132,"column_start":51,"column_end":62},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1510},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":130003,"byte_end":130014,"line_start":148,"line_end":148,"column_start":6,"column_end":17},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1510},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/in_memory_backend.rs","byte_start":130353,"byte_end":130364,"line_start":160,"line_end":160,"column_start":6,"column_end":17},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1510},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":168177,"byte_end":168191,"line_start":84,"line_end":84,"column_start":21,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2627},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":169470,"byte_end":169482,"line_start":113,"line_end":113,"column_start":36,"column_end":48},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2636},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":169699,"byte_end":169712,"line_start":124,"line_end":124,"column_start":18,"column_end":31},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":169768,"byte_end":169782,"line_start":130,"line_end":130,"column_start":9,"column_end":23},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":171443,"byte_end":171457,"line_start":182,"line_end":182,"column_start":6,"column_end":20},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":171972,"byte_end":171984,"line_start":197,"line_end":197,"column_start":32,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/changeset.rs","byte_start":178492,"byte_end":178510,"line_start":377,"line_end":377,"column_start":6,"column_end":24},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/offchain.rs","byte_start":195247,"byte_end":195271,"line_start":38,"line_end":38,"column_start":6,"column_end":30},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":134672,"byte_end":134682,"line_start":69,"line_end":69,"column_start":6,"column_end":16},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":137402,"byte_end":137416,"line_start":154,"line_end":154,"column_start":30,"column_end":44},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":138393,"byte_end":138416,"line_start":187,"line_end":187,"column_start":30,"column_end":53},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":138572,"byte_end":138595,"line_start":194,"line_end":194,"column_start":42,"column_end":65},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":841},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":138755,"byte_end":138769,"line_start":200,"line_end":200,"column_start":51,"column_end":65},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":828},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":139138,"byte_end":139154,"line_start":214,"line_end":214,"column_start":6,"column_end":22},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/overlayed_changes/mod.rs","byte_start":155307,"byte_end":155326,"line_start":687,"line_end":687,"column_start":10,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":199689,"byte_end":199711,"line_start":46,"line_end":46,"column_start":16,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":202074,"byte_end":202087,"line_start":129,"line_end":129,"column_start":34,"column_end":47},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":203940,"byte_end":203954,"line_start":192,"line_end":192,"column_start":57,"column_end":71},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":205254,"byte_end":205274,"line_start":233,"line_end":233,"column_start":6,"column_end":26},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1097},"to":{"krate":0,"index":1753}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":205692,"byte_end":205706,"line_start":249,"line_end":249,"column_start":6,"column_end":20},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1091},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/proving_backend.rs","byte_start":205855,"byte_end":205869,"line_start":256,"line_end":256,"column_start":31,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1091},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":217909,"byte_end":217910,"line_start":46,"line_end":46,"column_start":55,"column_end":56},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1210},"to":{"krate":0,"index":1202}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":218372,"byte_end":218393,"line_start":62,"line_end":62,"column_start":57,"column_end":78},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2717},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":218546,"byte_end":218567,"line_start":68,"line_end":68,"column_start":41,"column_end":62},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":218889,"byte_end":218910,"line_start":77,"line_end":77,"column_start":59,"column_end":80},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2717},"to":{"krate":70,"index":98}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/read_only.rs","byte_start":222798,"byte_end":222819,"line_start":198,"line_end":198,"column_start":6,"column_end":27},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2717},"to":{"krate":70,"index":72}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":225862,"byte_end":225879,"line_start":81,"line_end":81,"column_start":6,"column_end":23},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":226287,"byte_end":226296,"line_start":91,"line_end":91,"column_start":6,"column_end":15},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/stats.rs","byte_start":227187,"byte_end":227204,"line_start":120,"line_end":120,"column_start":6,"column_end":23},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":229438,"byte_end":229455,"line_start":61,"line_end":61,"column_start":17,"column_end":34},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":235035,"byte_end":235052,"line_start":237,"line_end":237,"column_start":37,"column_end":54},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1364},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":235275,"byte_end":235292,"line_start":246,"line_end":246,"column_start":31,"column_end":48},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1364},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":235584,"byte_end":235601,"line_start":257,"line_end":257,"column_start":29,"column_end":46},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1364},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":235820,"byte_end":235837,"line_start":267,"line_end":267,"column_start":35,"column_end":52},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1364},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":236041,"byte_end":236058,"line_start":276,"line_end":276,"column_start":51,"column_end":68},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1364},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":236285,"byte_end":236302,"line_start":285,"line_end":285,"column_start":46,"column_end":63},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1364},"to":{"krate":70,"index":72}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/testing.rs","byte_start":236984,"byte_end":237001,"line_start":314,"line_end":314,"column_start":48,"column_end":65},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1364},"to":{"krate":70,"index":133}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend.rs","byte_start":241372,"byte_end":241383,"line_start":40,"line_end":40,"column_start":43,"column_end":54},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend.rs","byte_start":242055,"byte_end":242066,"line_start":70,"line_end":70,"column_start":66,"column_end":77},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1510},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend.rs","byte_start":242241,"byte_end":242252,"line_start":76,"line_end":76,"column_start":58,"column_end":69},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1510},"to":{"krate":0,"index":48}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":254851,"byte_end":254855,"line_start":54,"line_end":54,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":1661}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":254858,"byte_end":254862,"line_start":54,"line_end":54,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":3036},"to":{"krate":0,"index":1661}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":255129,"byte_end":255134,"line_start":66,"line_end":66,"column_start":6,"column_end":11},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":255471,"byte_end":255489,"line_start":81,"line_end":81,"column_start":43,"column_end":61},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":265143,"byte_end":265152,"line_start":449,"line_end":449,"column_start":6,"column_end":15},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1719},"to":{"krate":25,"index":69}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":265382,"byte_end":265391,"line_start":459,"line_end":459,"column_start":47,"column_end":56},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":265594,"byte_end":265603,"line_start":466,"line_end":466,"column_start":6,"column_end":15},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1719},"to":{"krate":25,"index":44}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":266461,"byte_end":266470,"line_start":499,"line_end":499,"column_start":78,"column_end":87},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1719},"to":{"krate":25,"index":52}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":266797,"byte_end":266801,"line_start":510,"line_end":510,"column_start":42,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":1753}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":266804,"byte_end":266808,"line_start":510,"line_end":510,"column_start":49,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":3036},"to":{"krate":0,"index":1753}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":267142,"byte_end":267145,"line_start":520,"line_end":520,"column_start":43,"column_end":46},"kind":{"Impl":{"id":75}},"from":{"krate":5,"index":5986},"to":{"krate":0,"index":1753}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":267392,"byte_end":267407,"line_start":528,"line_end":528,"column_start":48,"column_end":63},"kind":{"Impl":{"id":76}},"from":{"krate":180,"index":539},"to":{"krate":0,"index":1753}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":267695,"byte_end":267713,"line_start":540,"line_end":540,"column_start":68,"column_end":86},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1668},"to":{"krate":25,"index":69}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":267958,"byte_end":267976,"line_start":549,"line_end":549,"column_start":66,"column_end":84},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1668},"to":{"krate":25,"index":44}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/trie_backend_essence.rs","byte_start":268710,"byte_end":268728,"line_start":580,"line_end":580,"column_start":69,"column_end":87},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1668},"to":{"krate":25,"index":52}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":6680,"byte_end":6697,"line_start":238,"line_end":238,"column_start":48,"column_end":65},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2766},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":7067,"byte_end":7084,"line_start":249,"line_end":249,"column_start":7,"column_end":24},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":9189,"byte_end":9201,"line_start":310,"line_end":310,"column_start":32,"column_end":44},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2035},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":9364,"byte_end":9376,"line_start":320,"line_end":320,"column_start":23,"column_end":35},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":21517,"byte_end":21531,"line_start":730,"line_end":730,"column_start":22,"column_end":36},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2850},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/state-machine/src/lib.rs","byte_start":21912,"byte_end":21926,"line_start":747,"line_end":747,"column_start":7,"column_end":21},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2850},"to":{"krate":4294967295,"index":4294967295}}]}