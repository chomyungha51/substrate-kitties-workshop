{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie","program":"/Users/myunghacho/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","sp_trie","--edition=2021","/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=e2529e052889b89b","-C","extra-filename=-e2529e052889b89b","--out-dir","/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps","-L","dependency=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps","--extern","hash_db=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libhash_db-8503ebc18b1889d6.rmeta","--extern","memory_db=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libmemory_db-00530ce1261e0aa7.rmeta","--extern","codec=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libparity_scale_codec-48d05d2fb449a544.rmeta","--extern","scale_info=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libscale_info-66e73dd6b9eeddb1.rmeta","--extern","sp_core=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libsp_core-fd4b756d9c9e978e.rmeta","--extern","sp_std=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libsp_std-caa0d9a9cb9fa1d4.rmeta","--extern","trie_db=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libtrie_db-917e0e4be134138e.rmeta","--extern","trie_root=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libtrie_root-2922165bb58cecda.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/myunghacho/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libsp_trie-e2529e052889b89b.rmeta"},"prelude":{"crate_id":{"name":"sp_trie","disambiguator":[992870631350192482,0]},"crate_root":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src","external_crates":[{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9602236740471282608,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","num":2,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[740641686899810413,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1452182208797737205,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4474361821197688885,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11146593528668201643,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7026141623111916022,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11096207044195207047,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[16946906222655600942,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9670608472714711915,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3075685271658393714,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[7553277853646633394,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5387634511767759158,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10401181353817371068,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14296571408058143832,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","num":18,"id":{"name":"parity_scale_codec","disambiguator":[11025389664727138833,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","num":19,"id":{"name":"parity_scale_codec_derive","disambiguator":[13567950630339581430,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","num":20,"id":{"name":"arrayvec","disambiguator":[4765445384651765470,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","num":21,"id":{"name":"byte_slice_cast","disambiguator":[1450742829568187162,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","num":22,"id":{"name":"impl_trait_for_tuples","disambiguator":[1199501065919261664,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","num":23,"id":{"name":"serde","disambiguator":[9544137782352177236,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","num":24,"id":{"name":"serde_derive","disambiguator":[17621009518653333156,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","num":25,"id":{"name":"hash_db","disambiguator":[3035980359055305477,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","num":26,"id":{"name":"sp_std","disambiguator":[3836989623224051638,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","num":27,"id":{"name":"trie_db","disambiguator":[3335082550653388918,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","num":28,"id":{"name":"hashbrown","disambiguator":[10474930597283054639,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","num":29,"id":{"name":"ahash","disambiguator":[14048706732936511347,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","num":30,"id":{"name":"once_cell","disambiguator":[906241516110484464,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","num":31,"id":{"name":"getrandom","disambiguator":[3195479937133090562,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","num":32,"id":{"name":"cfg_if","disambiguator":[13037983282529128945,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","num":33,"id":{"name":"libc","disambiguator":[9005103142181622755,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","num":34,"id":{"name":"log","disambiguator":[6370244751661190342,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","num":35,"id":{"name":"rustc_hex","disambiguator":[4904094113549843862,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","num":36,"id":{"name":"smallvec","disambiguator":[13996271574193408785,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","num":37,"id":{"name":"scale_info","disambiguator":[15088973142150946651,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","num":38,"id":{"name":"derive_more","disambiguator":[8707368253099479613,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","num":39,"id":{"name":"scale_info_derive","disambiguator":[7230802250740732360,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_stream.rs","num":40,"id":{"name":"trie_root","disambiguator":[16305582103997779709,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":41,"id":{"name":"memory_db","disambiguator":[8819853156270193057,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":42,"id":{"name":"parity_util_mem","disambiguator":[16113266381202813629,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":43,"id":{"name":"primitive_types","disambiguator":[1132617819206243597,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":44,"id":{"name":"fixed_hash","disambiguator":[17090297082099601704,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":45,"id":{"name":"static_assertions","disambiguator":[10004466869080491857,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":46,"id":{"name":"byteorder","disambiguator":[17265137979086274999,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":47,"id":{"name":"rand","disambiguator":[12901984643046046855,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":48,"id":{"name":"rand_core","disambiguator":[16679925004612314669,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":49,"id":{"name":"rand_chacha","disambiguator":[14569171819719609776,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":50,"id":{"name":"ppv_lite86","disambiguator":[12042266499095552183,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":51,"id":{"name":"uint","disambiguator":[9332051173416102165,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":52,"id":{"name":"hex","disambiguator":[14313328291304734710,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":53,"id":{"name":"crunchy","disambiguator":[13790995560371089749,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":54,"id":{"name":"impl_serde","disambiguator":[8512808259922711046,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":55,"id":{"name":"impl_codec","disambiguator":[7953877303562084663,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":56,"id":{"name":"parity_util_mem_derive","disambiguator":[9831126247431414965,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":57,"id":{"name":"parking_lot","disambiguator":[16537474632112846226,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":58,"id":{"name":"instant","disambiguator":[10818540477857358525,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":59,"id":{"name":"lock_api","disambiguator":[5572021129215100917,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":60,"id":{"name":"scopeguard","disambiguator":[794896012219393328,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":61,"id":{"name":"parking_lot_core","disambiguator":[13801629192239844415,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","num":62,"id":{"name":"hashbrown","disambiguator":[4274156849305481277,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":63,"id":{"name":"sp_core","disambiguator":[10539036770076454810,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":64,"id":{"name":"sp_runtime_interface","disambiguator":[5978476347992355165,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":65,"id":{"name":"sp_wasm_interface","disambiguator":[14621349120364007850,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":66,"id":{"name":"wasmi","disambiguator":[16123217206983833204,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":67,"id":{"name":"num_rational","disambiguator":[7244470453211819544,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":68,"id":{"name":"num_bigint","disambiguator":[635263567890515209,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":69,"id":{"name":"num_integer","disambiguator":[12790497028950123625,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":70,"id":{"name":"num_traits","disambiguator":[4458903683416238728,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":71,"id":{"name":"parity_wasm","disambiguator":[16011417072864726173,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":72,"id":{"name":"downcast_rs","disambiguator":[4795813113247543536,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":73,"id":{"name":"wasmi_validation","disambiguator":[3849529294403821989,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":74,"id":{"name":"memory_units","disambiguator":[17120499401839962369,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":75,"id":{"name":"sp_tracing","disambiguator":[17115281573187824974,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":76,"id":{"name":"tracing","disambiguator":[11336498365191347296,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":77,"id":{"name":"tracing_core","disambiguator":[13166941371739321160,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":78,"id":{"name":"lazy_static","disambiguator":[15130840265310738312,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":79,"id":{"name":"tracing_attributes","disambiguator":[6081508269012503457,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":80,"id":{"name":"pin_project_lite","disambiguator":[11425072106896568983,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":81,"id":{"name":"tracing_subscriber","disambiguator":[3482678861429152333,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":82,"id":{"name":"regex","disambiguator":[7788844225520356469,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":83,"id":{"name":"regex_syntax","disambiguator":[17206049943230988918,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":84,"id":{"name":"aho_corasick","disambiguator":[39857364077992619,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":85,"id":{"name":"memchr","disambiguator":[16906949692006644998,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":86,"id":{"name":"matchers","disambiguator":[8128970701659719436,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":87,"id":{"name":"regex_automata","disambiguator":[1456044335499460014,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":88,"id":{"name":"ansi_term","disambiguator":[5210659223695397450,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":89,"id":{"name":"tracing_log","disambiguator":[16287341719558271376,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":90,"id":{"name":"serde_json","disambiguator":[16112264681940306659,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":91,"id":{"name":"itoa","disambiguator":[11535409108964451412,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":92,"id":{"name":"ryu","disambiguator":[16732346970662687665,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":93,"id":{"name":"tracing_serde","disambiguator":[13310577343698839343,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":94,"id":{"name":"sharded_slab","disambiguator":[3163472644790877400,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":95,"id":{"name":"thread_local","disambiguator":[15743197468808622674,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":96,"id":{"name":"chrono","disambiguator":[16306847718078067803,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":97,"id":{"name":"sp_runtime_interface_proc_macro","disambiguator":[18412092644992162333,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":98,"id":{"name":"sp_externalities","disambiguator":[399927920652893655,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":99,"id":{"name":"sp_storage","disambiguator":[8855496573306405091,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":100,"id":{"name":"sp_debug_derive","disambiguator":[501895185402007615,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":101,"id":{"name":"ref_cast","disambiguator":[10355980937645703199,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":102,"id":{"name":"ref_cast_impl","disambiguator":[7833991851463348593,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":103,"id":{"name":"environmental","disambiguator":[7591175807006172968,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":104,"id":{"name":"sp_core_hashing","disambiguator":[1548912130435483016,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":105,"id":{"name":"sha2","disambiguator":[7984982361359771615,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":106,"id":{"name":"digest","disambiguator":[7960030921902106253,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":107,"id":{"name":"crypto_common","disambiguator":[8029973214147517645,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":108,"id":{"name":"generic_array","disambiguator":[7841133790266995098,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":109,"id":{"name":"typenum","disambiguator":[14585012641457782044,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":110,"id":{"name":"block_buffer","disambiguator":[15121256659554030653,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":111,"id":{"name":"tiny_keccak","disambiguator":[4831626262459225760,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":112,"id":{"name":"blake2_rfc","disambiguator":[16494060001680096856,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":113,"id":{"name":"arrayvec","disambiguator":[4491850697814948687,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":114,"id":{"name":"nodrop","disambiguator":[2178045376185257472,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":115,"id":{"name":"constant_time_eq","disambiguator":[918597060255610487,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":116,"id":{"name":"twox_hash","disambiguator":[3781583381976325544,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":117,"id":{"name":"base58","disambiguator":[1492415652631636402,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":118,"id":{"name":"rand","disambiguator":[6570305274632995237,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":119,"id":{"name":"rand_core","disambiguator":[17080480140097750689,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":120,"id":{"name":"getrandom","disambiguator":[8292786742397754090,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":121,"id":{"name":"rand_chacha","disambiguator":[10140618975598609131,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":122,"id":{"name":"rand_pcg","disambiguator":[16754927045678396121,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":123,"id":{"name":"secrecy","disambiguator":[12328287557864309941,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":124,"id":{"name":"zeroize","disambiguator":[14270330548133686224,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":125,"id":{"name":"zeroize_derive","disambiguator":[14645886018623984611,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":126,"id":{"name":"ss58_registry","disambiguator":[10244720218670862445,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":127,"id":{"name":"num_format","disambiguator":[17006054312781283822,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":128,"id":{"name":"itoa","disambiguator":[6582269778583154766,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":129,"id":{"name":"bip39","disambiguator":[11314893889286737187,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":130,"id":{"name":"thiserror","disambiguator":[7468023769639996234,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":131,"id":{"name":"thiserror_impl","disambiguator":[5731738171410429882,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":132,"id":{"name":"rustc_hash","disambiguator":[17030272073622719790,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":133,"id":{"name":"anyhow","disambiguator":[830393935267582809,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":134,"id":{"name":"unicode_normalization","disambiguator":[8187239885301538671,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":135,"id":{"name":"tinyvec","disambiguator":[12924922863080295405,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":136,"id":{"name":"tinyvec_macros","disambiguator":[13381352415925325925,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":137,"id":{"name":"hmac","disambiguator":[5597361097560193622,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":138,"id":{"name":"crypto_mac","disambiguator":[13652587454274268186,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":139,"id":{"name":"subtle","disambiguator":[11822527493932057962,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":140,"id":{"name":"digest","disambiguator":[14851263093279560039,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":141,"id":{"name":"sha2","disambiguator":[6259963827041717268,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":142,"id":{"name":"block_buffer","disambiguator":[15898354361683503687,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":143,"id":{"name":"opaque_debug","disambiguator":[10149071386350004449,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":144,"id":{"name":"pbkdf2","disambiguator":[15860643655094233267,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":145,"id":{"name":"libsecp256k1","disambiguator":[2699982375993309303,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":146,"id":{"name":"libsecp256k1_core","disambiguator":[9632512077303058192,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":147,"id":{"name":"arrayref","disambiguator":[1650279616086479414,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":148,"id":{"name":"hmac_drbg","disambiguator":[8562318492319979916,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":149,"id":{"name":"base64","disambiguator":[9171027083854165706,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":150,"id":{"name":"ed25519_dalek","disambiguator":[16700074225571961497,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":151,"id":{"name":"ed25519","disambiguator":[1015267793177718019,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":152,"id":{"name":"signature","disambiguator":[18058162181553298212,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":153,"id":{"name":"curve25519_dalek","disambiguator":[2964809850618072849,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":154,"id":{"name":"substrate_bip39","disambiguator":[1697577346339759795,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":155,"id":{"name":"hmac","disambiguator":[13341285572281611115,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":156,"id":{"name":"crypto_mac","disambiguator":[17226725527678380297,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":157,"id":{"name":"pbkdf2","disambiguator":[13046195669477736950,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":158,"id":{"name":"schnorrkel","disambiguator":[10486160385154417059,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":159,"id":{"name":"curve25519_dalek","disambiguator":[5450037059228546913,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":160,"id":{"name":"digest","disambiguator":[1612722049855349197,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":161,"id":{"name":"generic_array","disambiguator":[8495020690264827285,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":162,"id":{"name":"sha2","disambiguator":[7577821273395372931,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":163,"id":{"name":"block_buffer","disambiguator":[7920993218300368383,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":164,"id":{"name":"block_padding","disambiguator":[9681734599640059894,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":165,"id":{"name":"byte_tools","disambiguator":[4448446428834929902,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":166,"id":{"name":"fake_simd","disambiguator":[14330172453705584098,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":167,"id":{"name":"opaque_debug","disambiguator":[4689282538842033187,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":168,"id":{"name":"merlin","disambiguator":[7615320066614362181,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":169,"id":{"name":"keccak","disambiguator":[14288935386259045601,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":170,"id":{"name":"arrayvec","disambiguator":[10813777983401750230,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":171,"id":{"name":"hash256_std_hasher","disambiguator":[10644123848667397706,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":172,"id":{"name":"bitflags","disambiguator":[5221822649502070792,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":173,"id":{"name":"dyn_clonable","disambiguator":[1243236851226104374,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":174,"id":{"name":"dyn_clone","disambiguator":[14300175821732726930,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":175,"id":{"name":"dyn_clonable_impl","disambiguator":[18184807534735114799,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":176,"id":{"name":"futures","disambiguator":[8253965773970055907,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":177,"id":{"name":"futures_core","disambiguator":[841166366787286430,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":178,"id":{"name":"futures_util","disambiguator":[14096700963666586211,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":179,"id":{"name":"pin_utils","disambiguator":[12644058774972893031,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":180,"id":{"name":"futures_macro","disambiguator":[3113027969270784767,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":181,"id":{"name":"futures_task","disambiguator":[918535662743158888,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":182,"id":{"name":"futures_sink","disambiguator":[2935170657078551846,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":183,"id":{"name":"futures_channel","disambiguator":[14207323074309291647,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":184,"id":{"name":"slab","disambiguator":[13312282856459513588,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":185,"id":{"name":"futures_io","disambiguator":[9326164172813176432,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":186,"id":{"name":"futures_executor","disambiguator":[4441633710481061927,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","num":187,"id":{"name":"num_cpus","disambiguator":[4831201215496412112,0]}}],"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":686,"byte_end":29126,"line_start":18,"line_end":973,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":701},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":978,"byte_end":983,"line_start":30,"line_end":30,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":44},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1052,"byte_end":1058,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"alias_span":null,"name":"HashDBT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":14},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1071,"byte_end":1083,"line_start":32,"line_end":32,"column_start":38,"column_end":50},"alias_span":null,"name":"EMPTY_PREFIX","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":171},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1136,"byte_end":1148,"line_start":34,"line_end":34,"column_start":20,"column_end":32},"alias_span":null,"name":"prefixed_key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":41,"index":137},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1220,"byte_end":1231,"line_start":36,"line_end":36,"column_start":20,"column_end":31},"alias_span":null,"name":"KeyFunction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":718},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1309,"byte_end":1318,"line_start":38,"line_end":38,"column_start":21,"column_end":30},"alias_span":null,"name":"NodeCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":787},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1417,"byte_end":1429,"line_start":40,"line_end":40,"column_start":25,"column_end":37},"alias_span":null,"name":"CompactProof","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":756},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1431,"byte_end":1443,"line_start":40,"line_end":40,"column_start":39,"column_end":51},"alias_span":null,"name":"StorageProof","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":314},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1546,"byte_end":1560,"line_start":43,"line_end":43,"column_start":22,"column_end":36},"alias_span":null,"name":"decode_compact","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":319},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1562,"byte_end":1576,"line_start":43,"line_end":43,"column_start":38,"column_end":52},"alias_span":null,"name":"encode_compact","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1578,"byte_end":1583,"line_start":43,"line_end":43,"column_start":54,"column_end":59},"alias_span":null,"name":"CompactProofError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":2388},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1631,"byte_end":1642,"line_start":44,"line_end":44,"column_start":25,"column_end":36},"alias_span":null,"name":"VerifyError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":1709},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1765,"byte_end":1775,"line_start":48,"line_end":48,"column_start":2,"column_end":12},"alias_span":null,"name":"nibble_ops","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":2334},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1785,"byte_end":1793,"line_start":49,"line_end":49,"column_start":9,"column_end":17},"alias_span":null,"name":"NodePlan","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":2314},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1795,"byte_end":1804,"line_start":49,"line_end":49,"column_start":19,"column_end":28},"alias_span":null,"name":"ValuePlan","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":2176},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1808,"byte_end":1814,"line_start":50,"line_end":50,"column_start":2,"column_end":8},"alias_span":null,"name":"CError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":2034},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1816,"byte_end":1823,"line_start":50,"line_end":50,"column_start":10,"column_end":17},"alias_span":null,"name":"DBValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":2054},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1825,"byte_end":1830,"line_start":50,"line_end":50,"column_start":19,"column_end":24},"alias_span":null,"name":"Query","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":2442},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1832,"byte_end":1840,"line_start":50,"line_end":50,"column_start":26,"column_end":34},"alias_span":null,"name":"Recorder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":2080},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1842,"byte_end":1846,"line_start":50,"line_end":50,"column_start":36,"column_end":40},"alias_span":null,"name":"Trie","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":2155},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1848,"byte_end":1865,"line_start":50,"line_end":50,"column_start":42,"column_end":59},"alias_span":null,"name":"TrieConfiguration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":680},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1867,"byte_end":1881,"line_start":50,"line_end":50,"column_start":61,"column_end":75},"alias_span":null,"name":"TrieDBIterator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":684},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1883,"byte_end":1900,"line_start":50,"line_end":50,"column_start":77,"column_end":94},"alias_span":null,"name":"TrieDBKeyIterator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":2149},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1903,"byte_end":1913,"line_start":51,"line_end":51,"column_start":2,"column_end":12},"alias_span":null,"name":"TrieLayout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":2098},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":1915,"byte_end":1922,"line_start":51,"line_end":51,"column_start":14,"column_end":21},"alias_span":null,"name":"TrieMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":818},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":2005,"byte_end":2015,"line_start":54,"line_end":54,"column_start":22,"column_end":32},"alias_span":null,"name":"TrieStream","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":686,"byte_end":29126,"line_start":18,"line_end":973,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":16},{"krate":0,"index":140},{"krate":0,"index":187},{"krate":0,"index":243},{"krate":0,"index":321},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":474},{"krate":0,"index":477},{"krate":0,"index":480},{"krate":0,"index":484},{"krate":0,"index":488},{"krate":0,"index":495},{"krate":0,"index":506},{"krate":0,"index":513},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":537},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":575},{"krate":0,"index":581},{"krate":0,"index":587},{"krate":0,"index":595},{"krate":0,"index":600},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":615},{"krate":0,"index":623},{"krate":0,"index":626},{"krate":0,"index":631},{"krate":0,"index":637},{"krate":0,"index":645},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":659},{"krate":0,"index":664},{"krate":0,"index":671},{"krate":0,"index":682},{"krate":0,"index":691}],"decl_id":null,"docs":" Utility functions to interact with Substrate's Base-16 Modified Merkle Patricia tree (\"trie\").\n","sig":null,"attributes":[{"value":"/ Utility functions to interact with Substrate's Base-16 Modified Merkle Patricia tree (\"trie\").","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":686,"byte_end":784,"line_start":18,"line_end":18,"column_start":1,"column_end":99}}]},{"kind":"TupleVariant","id":{"krate":0,"index":702},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/error.rs","byte_start":30020,"byte_end":30029,"line_start":27,"line_end":27,"column_start":2,"column_end":11},"name":"BadFormat","qualname":"::error::Error::BadFormat","value":"Error::BadFormat","parent":{"krate":0,"index":701},"children":[],"decl_id":null,"docs":" Bad format.\n","sig":null,"attributes":[{"value":"/ Bad format.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/error.rs","byte_start":30003,"byte_end":30018,"line_start":26,"line_end":26,"column_start":2,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":704},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/error.rs","byte_start":30053,"byte_end":30059,"line_start":29,"line_end":29,"column_start":2,"column_end":8},"name":"Decode","qualname":"::error::Error::Decode","value":"Error::Decode(codec::Error)","parent":{"krate":0,"index":701},"children":[],"decl_id":null,"docs":" Decoding error.\n","sig":null,"attributes":[{"value":"/ Decoding error.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/error.rs","byte_start":30032,"byte_end":30051,"line_start":28,"line_end":28,"column_start":2,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":701},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/error.rs","byte_start":29994,"byte_end":29999,"line_start":25,"line_end":25,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error { BadFormat, Decode(codec::Error), }","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":704}],"decl_id":null,"docs":" Error for trie node decoding.\n","sig":null,"attributes":[{"value":"/ Error for trie node decoding.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/error.rs","byte_start":29951,"byte_end":29984,"line_start":24,"line_end":24,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":718},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","byte_start":33143,"byte_end":33152,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"NodeCodec","qualname":"::node_codec::NodeCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" Concrete implementation of a `NodeCodec` with Parity Codec encoding, generic over the `Hasher`\n","sig":null,"attributes":[{"value":"/ Concrete implementation of a `NodeCodec` with Parity Codec encoding, generic over the `Hasher`","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","byte_start":33007,"byte_end":33105,"line_start":79,"line_end":79,"column_start":1,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":756},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":48302,"byte_end":48314,"line_start":34,"line_end":34,"column_start":12,"column_end":24},"name":"StorageProof","qualname":"::storage_proof::StorageProof","value":"StorageProof {  }","parent":null,"children":[{"krate":0,"index":757}],"decl_id":null,"docs":" A proof that some set of key-value pairs are included in the storage trie. The proof contains\n the storage values so that the partial storage backend can be reconstructed by a verifier that\n does not already have access to the key-value pairs.","sig":null,"attributes":[{"value":"/ A proof that some set of key-value pairs are included in the storage trie. The proof contains","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":47713,"byte_end":47810,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ the storage values so that the partial storage backend can be reconstructed by a verifier that","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":47811,"byte_end":47909,"line_start":27,"line_end":27,"column_start":1,"column_end":99}},{"value":"/ does not already have access to the key-value pairs.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":47910,"byte_end":47966,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":47967,"byte_end":47970,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ The proof consists of the set of serialized nodes in the storage trie accessed when looking up","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":47971,"byte_end":48069,"line_start":30,"line_end":30,"column_start":1,"column_end":99}},{"value":"/ the keys covered by the proof. Verifying the proof requires constructing the partial trie from","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":48070,"byte_end":48168,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ the serialized nodes and performing the key lookups.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":48169,"byte_end":48225,"line_start":32,"line_end":32,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":787},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":48458,"byte_end":48470,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"CompactProof","qualname":"::storage_proof::CompactProof","value":"CompactProof { encoded_nodes }","parent":null,"children":[{"krate":0,"index":788}],"decl_id":null,"docs":" Storage proof in compact form.\n","sig":null,"attributes":[{"value":"/ Storage proof in compact form.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":48347,"byte_end":48381,"line_start":38,"line_end":38,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":788},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":48478,"byte_end":48491,"line_start":41,"line_end":41,"column_start":6,"column_end":19},"name":"encoded_nodes","qualname":"::storage_proof::CompactProof::encoded_nodes","value":"std::vec::Vec<std::vec::Vec<u8>>","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":48628,"byte_end":48631,"line_start":46,"line_end":46,"column_start":9,"column_end":12},"name":"new","qualname":"<StorageProof>::new","value":"pub fn new(Vec<Vec<u8>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a storage proof from a subset of encoded trie nodes in a storage backend.\n","sig":null,"attributes":[{"value":"/ Constructs a storage proof from a subset of encoded trie nodes in a storage backend.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":48531,"byte_end":48619,"line_start":45,"line_end":45,"column_start":2,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":48879,"byte_end":48884,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"name":"empty","qualname":"<StorageProof>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new empty proof.","sig":null,"attributes":[{"value":"/ Returns a new empty proof.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":48703,"byte_end":48733,"line_start":50,"line_end":50,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":48735,"byte_end":48738,"line_start":51,"line_end":51,"column_start":2,"column_end":5}},{"value":"/ An empty proof is capable of only proving trivial statements (ie. that an empty set of","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":48740,"byte_end":48830,"line_start":52,"line_end":52,"column_start":2,"column_end":92}},{"value":"/ key-value pairs exist in storage).","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":48832,"byte_end":48870,"line_start":53,"line_end":53,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":48996,"byte_end":49004,"line_start":59,"line_end":59,"column_start":9,"column_end":17},"name":"is_empty","qualname":"<StorageProof>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this is an empty proof.\n","sig":null,"attributes":[{"value":"/ Returns whether this is an empty proof.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":48944,"byte_end":48987,"line_start":58,"line_end":58,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":49206,"byte_end":49216,"line_start":65,"line_end":65,"column_start":9,"column_end":19},"name":"iter_nodes","qualname":"<StorageProof>::iter_nodes","value":"pub fn iter_nodes(Self) -> StorageProofNodeIterator","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator over trie nodes constructed from the proof. The nodes are not guaranteed\n to be traversed in any particular order.\n","sig":null,"attributes":[{"value":"/ Create an iterator over trie nodes constructed from the proof. The nodes are not guaranteed","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":49056,"byte_end":49151,"line_start":63,"line_end":63,"column_start":2,"column_end":97}},{"value":"/ to be traversed in any particular order.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":49153,"byte_end":49197,"line_start":64,"line_end":64,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":49340,"byte_end":49350,"line_start":70,"line_end":70,"column_start":9,"column_end":19},"name":"into_nodes","qualname":"<StorageProof>::into_nodes","value":"pub fn into_nodes(Self) -> Vec<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Convert into plain node vector.\n","sig":null,"attributes":[{"value":"/ Convert into plain node vector.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":49296,"byte_end":49331,"line_start":69,"line_end":69,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":49444,"byte_end":49458,"line_start":75,"line_end":75,"column_start":9,"column_end":23},"name":"into_memory_db","qualname":"<StorageProof>::into_memory_db","value":"pub fn into_memory_db<H: Hasher>(Self) -> crate::MemoryDB<H>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `MemoryDB` from `Self`.\n","sig":null,"attributes":[{"value":"/ Creates a `MemoryDB` from `Self`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":49398,"byte_end":49435,"line_start":74,"line_end":74,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":49769,"byte_end":49774,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"name":"merge","qualname":"<StorageProof>::merge","value":"pub fn merge<I>(I) -> Self where I: IntoIterator<Item = Self>","parent":null,"children":[],"decl_id":null,"docs":" Merges multiple storage proofs covering potentially different sets of keys into one proof\n covering all keys. The merged proof output may be smaller than the aggregate size of the\n input proofs due to deduplication of trie nodes.\n","sig":null,"attributes":[{"value":"/ Merges multiple storage proofs covering potentially different sets of keys into one proof","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":49519,"byte_end":49612,"line_start":79,"line_end":79,"column_start":2,"column_end":95}},{"value":"/ covering all keys. The merged proof output may be smaller than the aggregate size of the","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":49614,"byte_end":49706,"line_start":80,"line_end":80,"column_start":2,"column_end":94}},{"value":"/ input proofs due to deduplication of trie nodes.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":49708,"byte_end":49760,"line_start":81,"line_end":81,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":50111,"byte_end":50129,"line_start":98,"line_end":98,"column_start":9,"column_end":27},"name":"into_compact_proof","qualname":"<StorageProof>::into_compact_proof","value":"pub fn into_compact_proof<H: Hasher>(Self, H::Out)\n-> Result<CompactProof, crate::CompactProofError<Layout<H>>>","parent":null,"children":[],"decl_id":null,"docs":" Encode as a compact proof with default\n trie layout.\n","sig":null,"attributes":[{"value":"/ Encode as a compact proof with default","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":50042,"byte_end":50084,"line_start":96,"line_end":96,"column_start":2,"column_end":44}},{"value":"/ trie layout.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":50086,"byte_end":50102,"line_start":97,"line_end":97,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":50521,"byte_end":50541,"line_start":111,"line_end":111,"column_start":9,"column_end":29},"name":"encoded_compact_size","qualname":"<StorageProof>::encoded_compact_size","value":"pub fn encoded_compact_size<H: Hasher>(Self, H::Out) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the estimated encoded size of the compact proof.","sig":null,"attributes":[{"value":"/ Returns the estimated encoded size of the compact proof.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":50286,"byte_end":50346,"line_start":105,"line_end":105,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":50348,"byte_end":50351,"line_start":106,"line_end":106,"column_start":2,"column_end":5}},{"value":"/ Running this operation is a slow operation (build the whole compact proof) and should only","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":50353,"byte_end":50447,"line_start":107,"line_end":107,"column_start":2,"column_end":96}},{"value":"/ be in non sensitive path.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":50449,"byte_end":50478,"line_start":108,"line_end":108,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":50480,"byte_end":50483,"line_start":109,"line_end":109,"column_start":2,"column_end":5}},{"value":"/ Return `None` on error.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":50485,"byte_end":50512,"line_start":110,"line_end":110,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":50785,"byte_end":50811,"line_start":119,"line_end":119,"column_start":9,"column_end":35},"name":"iter_compact_encoded_nodes","qualname":"<CompactProof>::iter_compact_encoded_nodes","value":"pub fn iter_compact_encoded_nodes(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator on the compact encoded nodes.\n","sig":null,"attributes":[{"value":"/ Return an iterator on the compact encoded nodes.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":50724,"byte_end":50776,"line_start":118,"line_end":118,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":51043,"byte_end":51059,"line_start":127,"line_end":127,"column_start":9,"column_end":25},"name":"to_storage_proof","qualname":"<CompactProof>::to_storage_proof","value":"pub fn to_storage_proof<H: Hasher>(&Self, Option<&H::Out>)\n-> Result<(StorageProof, H::Out), crate::CompactProofError<Layout<H>>>","parent":null,"children":[],"decl_id":null,"docs":" Decode to a full storage_proof.","sig":null,"attributes":[{"value":"/ Decode to a full storage_proof.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":50904,"byte_end":50939,"line_start":123,"line_end":123,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":50941,"byte_end":50944,"line_start":124,"line_end":124,"column_start":2,"column_end":5}},{"value":"/ Method use a temporary `HashDB`, and `sp_trie::decode_compact`","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":50946,"byte_end":51012,"line_start":125,"line_end":125,"column_start":2,"column_end":68}},{"value":"/ is often better.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":51014,"byte_end":51034,"line_start":126,"line_end":126,"column_start":2,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":233},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":51695,"byte_end":51719,"line_start":151,"line_end":151,"column_start":12,"column_end":36},"name":"StorageProofNodeIterator","qualname":"::storage_proof::StorageProofNodeIterator","value":"StorageProofNodeIterator {  }","parent":null,"children":[{"krate":0,"index":234}],"decl_id":null,"docs":" An iterator over trie nodes constructed from a storage proof. The nodes are not guaranteed to\n be traversed in any particular order.\n","sig":null,"attributes":[{"value":"/ An iterator over trie nodes constructed from a storage proof. The nodes are not guaranteed to","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":51544,"byte_end":51641,"line_start":149,"line_end":149,"column_start":1,"column_end":98}},{"value":"/ be traversed in any particular order.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":51642,"byte_end":51683,"line_start":150,"line_end":150,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":284},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":53507,"byte_end":53519,"line_start":36,"line_end":36,"column_start":2,"column_end":14},"name":"RootMismatch","qualname":"::trie_codec::Error::RootMismatch","value":"Error::RootMismatch(TrieHash<L>, TrieHash<L>)","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Verification failed due to root mismatch.\n","sig":null,"attributes":[{"value":"/ Verification failed due to root mismatch.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":53460,"byte_end":53505,"line_start":35,"line_end":35,"column_start":2,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":288},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":53577,"byte_end":53592,"line_start":38,"line_end":38,"column_start":2,"column_end":17},"name":"IncompleteProof","qualname":"::trie_codec::Error::IncompleteProof","value":"Error::IncompleteProof","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Missing nodes in proof.\n","sig":null,"attributes":[{"value":"/ Missing nodes in proof.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":53548,"byte_end":53575,"line_start":37,"line_end":37,"column_start":2,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":290},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":53628,"byte_end":53647,"line_start":40,"line_end":40,"column_start":2,"column_end":21},"name":"ExtraneousChildNode","qualname":"::trie_codec::Error::ExtraneousChildNode","value":"Error::ExtraneousChildNode","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Compact node is not needed.\n","sig":null,"attributes":[{"value":"/ Compact node is not needed.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":53595,"byte_end":53626,"line_start":39,"line_end":39,"column_start":2,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":292},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":53693,"byte_end":53713,"line_start":42,"line_end":42,"column_start":2,"column_end":22},"name":"ExtraneousChildProof","qualname":"::trie_codec::Error::ExtraneousChildProof","value":"Error::ExtraneousChildProof(TrieHash<L>)","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Child content with root not in proof.\n","sig":null,"attributes":[{"value":"/ Child content with root not in proof.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":53650,"byte_end":53691,"line_start":41,"line_end":41,"column_start":2,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":295},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":53755,"byte_end":53771,"line_start":44,"line_end":44,"column_start":2,"column_end":18},"name":"InvalidChildRoot","qualname":"::trie_codec::Error::InvalidChildRoot","value":"Error::InvalidChildRoot(Vec<u8>, Vec<u8>)","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Bad child trie root.\n","sig":null,"attributes":[{"value":"/ Bad child trie root.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":53729,"byte_end":53753,"line_start":43,"line_end":43,"column_start":2,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":299},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":53821,"byte_end":53830,"line_start":46,"line_end":46,"column_start":2,"column_end":11},"name":"TrieError","qualname":"::trie_codec::Error::TrieError","value":"Error::TrieError(Box<TrieError<L>>)","parent":{"krate":0,"index":282},"children":[],"decl_id":null,"docs":" Errors from trie crate.\n","sig":null,"attributes":[{"value":"/ Errors from trie crate.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":53792,"byte_end":53819,"line_start":45,"line_end":45,"column_start":2,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":282},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":53429,"byte_end":53434,"line_start":34,"line_end":34,"column_start":10,"column_end":15},"name":"Error","qualname":"::trie_codec::Error","value":"pub enum Error<L: TrieConfiguration> {\n    RootMismatch(TrieHash<L>, TrieHash<L>),\n    IncompleteProof,\n    ExtraneousChildNode,\n    ExtraneousChildProof(TrieHash<L>),\n    InvalidChildRoot(Vec<u8>, Vec<u8>),\n    TrieError(Box<TrieError<L>>),\n}","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":299}],"decl_id":null,"docs":" Error for trie node decoding.\n","sig":null,"attributes":[{"value":"/ Error for trie node decoding.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":53386,"byte_end":53419,"line_start":33,"line_end":33,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":314},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":55615,"byte_end":55629,"line_start":104,"line_end":104,"column_start":8,"column_end":22},"name":"decode_compact","qualname":"::trie_codec::decode_compact","value":"pub fn decode_compact<'a, L, DB, I>(&mut DB, I, Option<&TrieHash<L>>)\n-> Result<TrieHash<L>, Error<L>> where L: TrieConfiguration,\nDB: HashDBT<L::Hash, trie_db::DBValue> +\nhash_db::HashDBRef<L::Hash, trie_db::DBValue>, I: IntoIterator<Item =\n&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Decode a compact proof.","sig":null,"attributes":[{"value":"/ Decode a compact proof.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":55377,"byte_end":55404,"line_start":97,"line_end":97,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":55405,"byte_end":55408,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Takes as input a destination `db` for decoded node and `encoded`","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":55409,"byte_end":55477,"line_start":99,"line_end":99,"column_start":1,"column_end":69}},{"value":"/ an iterator of compact encoded nodes.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":55478,"byte_end":55519,"line_start":100,"line_end":100,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":55520,"byte_end":55523,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ Child trie are decoded in order of child trie root present","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":55524,"byte_end":55586,"line_start":102,"line_end":102,"column_start":1,"column_end":63}},{"value":"/ in the top trie.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":55587,"byte_end":55607,"line_start":103,"line_end":103,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":319},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":58654,"byte_end":58668,"line_start":198,"line_end":198,"column_start":8,"column_end":22},"name":"encode_compact","qualname":"::trie_codec::encode_compact","value":"pub fn encode_compact<L>(StorageProof, TrieHash<L>)\n-> Result<CompactProof, Error<L>> where L: TrieConfiguration","parent":null,"children":[],"decl_id":null,"docs":" Encode a compact proof.","sig":null,"attributes":[{"value":"/ Encode a compact proof.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":58362,"byte_end":58389,"line_start":191,"line_end":191,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":58390,"byte_end":58393,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ Takes as input all full encoded node from the proof, and","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":58394,"byte_end":58454,"line_start":193,"line_end":193,"column_start":1,"column_end":61}},{"value":"/ the root.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":58455,"byte_end":58468,"line_start":194,"line_end":194,"column_start":1,"column_end":14}},{"value":"/ Then parse all child trie root and compress main trie content first","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":58469,"byte_end":58540,"line_start":195,"line_end":195,"column_start":1,"column_end":72}},{"value":"/ then all child trie contents.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":58541,"byte_end":58574,"line_start":196,"line_end":196,"column_start":1,"column_end":34}},{"value":"/ Child trie are ordered by the order of their roots in the top trie.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":58575,"byte_end":58646,"line_start":197,"line_end":197,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":818},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_stream.rs","byte_start":61328,"byte_end":61338,"line_start":31,"line_end":31,"column_start":12,"column_end":22},"name":"TrieStream","qualname":"::trie_stream::TrieStream","value":"TrieStream {  }","parent":null,"children":[{"krate":0,"index":819}],"decl_id":null,"docs":" Codec-flavored TrieStream.\n","sig":null,"attributes":[{"value":"/ Codec-flavored TrieStream.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_stream.rs","byte_start":61286,"byte_end":61316,"line_start":30,"line_end":30,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_stream.rs","byte_start":61462,"byte_end":61468,"line_start":38,"line_end":38,"column_start":9,"column_end":15},"name":"as_raw","qualname":"<TrieStream>::as_raw","value":"pub fn as_raw(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":480},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":2055,"byte_end":2063,"line_start":57,"line_end":57,"column_start":12,"column_end":20},"name":"LayoutV0","qualname":"::LayoutV0","value":"","parent":null,"children":[],"decl_id":null,"docs":" substrate trie layout\n","sig":null,"attributes":[{"value":"/ substrate trie layout","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":2018,"byte_end":2043,"line_start":56,"line_end":56,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":484},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":2166,"byte_end":2174,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"LayoutV1","qualname":"::LayoutV1","value":"","parent":null,"children":[],"decl_id":null,"docs":" substrate trie layout, with external value nodes.\n","sig":null,"attributes":[{"value":"/ substrate trie layout, with external value nodes.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":2101,"byte_end":2154,"line_start":59,"line_end":59,"column_start":1,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":525},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":4274,"byte_end":4283,"line_start":152,"line_end":152,"column_start":10,"column_end":19},"name":"TrieError","qualname":"::TrieError","value":"trie_db::TrieError<TrieHash<L>, CError<L>>","parent":null,"children":[],"decl_id":null,"docs":" TrieDB error over `TrieConfiguration` trait.\n","sig":null,"attributes":[{"value":"/ TrieDB error over `TrieConfiguration` trait.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":4216,"byte_end":4264,"line_start":151,"line_end":151,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":527},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":4412,"byte_end":4420,"line_start":154,"line_end":154,"column_start":11,"column_end":19},"name":"AsHashDB","qualname":"::AsHashDB","value":"AsHashDB<H: Hasher>: hash_db::AsHashDB<H, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Reexport from `hash_db`, with genericity set for `Hasher` trait.\n","sig":null,"attributes":[{"value":"/ Reexport from `hash_db`, with genericity set for `Hasher` trait.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":4333,"byte_end":4401,"line_start":153,"line_end":153,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":532},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":4633,"byte_end":4639,"line_start":157,"line_end":157,"column_start":10,"column_end":16},"name":"HashDB","qualname":"::HashDB","value":"dyn hash_db::HashDB<H, trie_db::DBValue> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Reexport from `hash_db`, with genericity set for `Hasher` trait.\n","sig":null,"attributes":[{"value":"/ Reexport from `hash_db`, with genericity set for `Hasher` trait.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":4555,"byte_end":4623,"line_start":156,"line_end":156,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":535},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":4883,"byte_end":4899,"line_start":161,"line_end":161,"column_start":10,"column_end":26},"name":"PrefixedMemoryDB","qualname":"::PrefixedMemoryDB","value":"memory_db::MemoryDB<H, memory_db::PrefixedKey<H>, trie_db::DBValue,\nMemTracker>","parent":null,"children":[],"decl_id":null,"docs":" Reexport from `hash_db`, with genericity set for `Hasher` trait.\n This uses a `KeyFunction` for prefixing keys internally (avoiding\n key conflict for non random keys).\n","sig":null,"attributes":[{"value":"/ Reexport from `hash_db`, with genericity set for `Hasher` trait.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":4696,"byte_end":4764,"line_start":158,"line_end":158,"column_start":1,"column_end":69}},{"value":"/ This uses a `KeyFunction` for prefixing keys internally (avoiding","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":4765,"byte_end":4834,"line_start":159,"line_end":159,"column_start":1,"column_end":70}},{"value":"/ key conflict for non random keys).","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":4835,"byte_end":4873,"line_start":160,"line_end":160,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":537},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":5190,"byte_end":5198,"line_start":166,"line_end":166,"column_start":10,"column_end":18},"name":"MemoryDB","qualname":"::MemoryDB","value":"memory_db::MemoryDB<H, memory_db::HashKey<H>, trie_db::DBValue, MemTracker>","parent":null,"children":[],"decl_id":null,"docs":" Reexport from `hash_db`, with genericity set for `Hasher` trait.\n This uses a noops `KeyFunction` (key addressing must be hashed or using\n an encoding scheme that avoid key conflict).\n","sig":null,"attributes":[{"value":"/ Reexport from `hash_db`, with genericity set for `Hasher` trait.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":4987,"byte_end":5055,"line_start":163,"line_end":163,"column_start":1,"column_end":69}},{"value":"/ This uses a noops `KeyFunction` (key addressing must be hashed or using","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":5056,"byte_end":5131,"line_start":164,"line_end":164,"column_start":1,"column_end":76}},{"value":"/ an encoding scheme that avoid key conflict).","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":5132,"byte_end":5180,"line_start":165,"line_end":165,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":539},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":5359,"byte_end":5374,"line_start":168,"line_end":168,"column_start":10,"column_end":25},"name":"GenericMemoryDB","qualname":"::GenericMemoryDB","value":"memory_db::MemoryDB<H, KF, trie_db::DBValue, MemTracker>","parent":null,"children":[],"decl_id":null,"docs":" Reexport from `hash_db`, with genericity set for `Hasher` trait.\n","sig":null,"attributes":[{"value":"/ Reexport from `hash_db`, with genericity set for `Hasher` trait.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":5281,"byte_end":5349,"line_start":167,"line_end":167,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":542},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":5527,"byte_end":5533,"line_start":171,"line_end":171,"column_start":10,"column_end":16},"name":"TrieDB","qualname":"::TrieDB","value":"trie_db::TrieDB","parent":null,"children":[],"decl_id":null,"docs":" Persistent trie database read-access interface for the a given hasher.\n","sig":null,"attributes":[{"value":"/ Persistent trie database read-access interface for the a given hasher.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":5443,"byte_end":5517,"line_start":170,"line_end":170,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":545},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":5652,"byte_end":5661,"line_start":173,"line_end":173,"column_start":10,"column_end":19},"name":"TrieDBMut","qualname":"::TrieDBMut","value":"trie_db::TrieDBMut","parent":null,"children":[],"decl_id":null,"docs":" Persistent trie database write-access interface for the a given hasher.\n","sig":null,"attributes":[{"value":"/ Persistent trie database write-access interface for the a given hasher.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":5567,"byte_end":5642,"line_start":172,"line_end":172,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":548},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":5765,"byte_end":5771,"line_start":175,"line_end":175,"column_start":10,"column_end":16},"name":"Lookup","qualname":"::Lookup","value":"trie_db::Lookup","parent":null,"children":[],"decl_id":null,"docs":" Querying interface, as in `trie_db` but less generic.\n","sig":null,"attributes":[{"value":"/ Querying interface, as in `trie_db` but less generic.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":5698,"byte_end":5755,"line_start":174,"line_end":174,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":552},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":5853,"byte_end":5861,"line_start":177,"line_end":177,"column_start":10,"column_end":18},"name":"TrieHash","qualname":"::TrieHash","value":"<<L as TrieLayout>::Hash as Hasher>::Out","parent":null,"children":[],"decl_id":null,"docs":" Hash type for a trie layout.\n","sig":null,"attributes":[{"value":"/ Hash type for a trie layout.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":5811,"byte_end":5843,"line_start":176,"line_end":176,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":554},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":6030,"byte_end":6040,"line_start":180,"line_end":180,"column_start":9,"column_end":19},"name":"trie_types","qualname":"::trie_types","value":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":569},{"krate":0,"index":573}],"decl_id":null,"docs":" This module is for non generic definition of trie type.\n Only the `Hasher` trait is generic in this case.\n","sig":null,"attributes":[{"value":"/ This module is for non generic definition of trie type.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":5909,"byte_end":5968,"line_start":178,"line_end":178,"column_start":1,"column_end":60}},{"value":"/ Only the `Hasher` trait is generic in this case.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":5969,"byte_end":6021,"line_start":179,"line_end":179,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":556},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":6209,"byte_end":6215,"line_start":185,"line_end":185,"column_start":11,"column_end":17},"name":"TrieDB","qualname":"::trie_types::TrieDB","value":"super::TrieDB","parent":null,"children":[],"decl_id":null,"docs":" Persistent trie database read-access interface for the a given hasher.\n Read only V1 and V0 are compatible, thus we always use V1.\n","sig":null,"attributes":[{"value":"/ Persistent trie database read-access interface for the a given hasher.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":6060,"byte_end":6134,"line_start":183,"line_end":183,"column_start":2,"column_end":76}},{"value":"/ Read only V1 and V0 are compatible, thus we always use V1.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":6136,"byte_end":6198,"line_start":184,"line_end":184,"column_start":2,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":559},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":6344,"byte_end":6355,"line_start":187,"line_end":187,"column_start":11,"column_end":22},"name":"TrieDBMutV0","qualname":"::trie_types::TrieDBMutV0","value":"super::TrieDBMut","parent":null,"children":[],"decl_id":null,"docs":" Persistent trie database write-access interface for the a given hasher.\n","sig":null,"attributes":[{"value":"/ Persistent trie database write-access interface for the a given hasher.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":6258,"byte_end":6333,"line_start":186,"line_end":186,"column_start":2,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":562},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":6487,"byte_end":6498,"line_start":189,"line_end":189,"column_start":11,"column_end":22},"name":"TrieDBMutV1","qualname":"::trie_types::TrieDBMutV1","value":"super::TrieDBMut","parent":null,"children":[],"decl_id":null,"docs":" Persistent trie database write-access interface for the a given hasher.\n","sig":null,"attributes":[{"value":"/ Persistent trie database write-access interface for the a given hasher.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":6401,"byte_end":6476,"line_start":188,"line_end":188,"column_start":2,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":565},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":6612,"byte_end":6620,"line_start":191,"line_end":191,"column_start":11,"column_end":19},"name":"LookupV0","qualname":"::trie_types::LookupV0","value":"trie_db::Lookup","parent":null,"children":[],"decl_id":null,"docs":" Querying interface, as in `trie_db` but less generic.\n","sig":null,"attributes":[{"value":"/ Querying interface, as in `trie_db` but less generic.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":6544,"byte_end":6601,"line_start":190,"line_end":190,"column_start":2,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":569},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":6739,"byte_end":6747,"line_start":193,"line_end":193,"column_start":11,"column_end":19},"name":"LookupV1","qualname":"::trie_types::LookupV1","value":"trie_db::Lookup","parent":null,"children":[],"decl_id":null,"docs":" Querying interface, as in `trie_db` but less generic.\n","sig":null,"attributes":[{"value":"/ Querying interface, as in `trie_db` but less generic.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":6671,"byte_end":6728,"line_start":192,"line_end":192,"column_start":2,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":573},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":6873,"byte_end":6882,"line_start":195,"line_end":195,"column_start":11,"column_end":20},"name":"TrieError","qualname":"::trie_types::TrieError","value":"trie_db::TrieError<H, super::Error>","parent":null,"children":[],"decl_id":null,"docs":" As in `trie_db`, but less generic, error type for the crate.\n","sig":null,"attributes":[{"value":"/ As in `trie_db`, but less generic, error type for the crate.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":6798,"byte_end":6862,"line_start":194,"line_end":194,"column_start":2,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":575},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":7324,"byte_end":7343,"line_start":206,"line_end":206,"column_start":8,"column_end":27},"name":"generate_trie_proof","qualname":"::generate_trie_proof","value":"pub fn generate_trie_proof<'a, L, I, K, DB>(&DB, TrieHash<L>, I)\n-> Result<Vec<Vec<u8>>, Box<TrieError<L>>> where L: TrieConfiguration,\nI: IntoIterator<Item = &'a K>, K: 'a + AsRef<[u8]>,\nDB: hash_db::HashDBRef<L::Hash, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Create a proof for a subset of keys in a trie.","sig":null,"attributes":[{"value":"/ Create a proof for a subset of keys in a trie.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":6928,"byte_end":6978,"line_start":198,"line_end":198,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":6979,"byte_end":6982,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ The `keys` may contain any set of keys regardless of each one of them is included","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":6983,"byte_end":7068,"line_start":200,"line_end":200,"column_start":1,"column_end":86}},{"value":"/ in the `db`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":7069,"byte_end":7085,"line_start":201,"line_end":201,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":7086,"byte_end":7089,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ For a key `K` that is included in the `db` a proof of inclusion is generated.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":7090,"byte_end":7171,"line_start":203,"line_end":203,"column_start":1,"column_end":82}},{"value":"/ For a key `K` that is not included in the `db` a proof of non-inclusion is generated.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":7172,"byte_end":7261,"line_start":204,"line_end":204,"column_start":1,"column_end":90}},{"value":"/ These can be later checked in `verify_trie_proof`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":7262,"byte_end":7316,"line_start":205,"line_end":205,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":581},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":8139,"byte_end":8156,"line_start":230,"line_end":230,"column_start":8,"column_end":25},"name":"verify_trie_proof","qualname":"::verify_trie_proof","value":"pub fn verify_trie_proof<'a, L, I, K, V>(&TrieHash<L>, &[Vec<u8>], I)\n-> Result<(), VerifyError<TrieHash<L>, CError<L>>> where L: TrieConfiguration,\nI: IntoIterator<Item = &'a (K, Option<V>)>, K: 'a + AsRef<[u8]>, V: 'a +\nAsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Verify a set of key-value pairs against a trie root and a proof.","sig":null,"attributes":[{"value":"/ Verify a set of key-value pairs against a trie root and a proof.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":7698,"byte_end":7766,"line_start":222,"line_end":222,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":7767,"byte_end":7770,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ Checks a set of keys with optional values for inclusion in the proof that was generated by","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":7771,"byte_end":7865,"line_start":224,"line_end":224,"column_start":1,"column_end":95}},{"value":"/ `generate_trie_proof`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":7866,"byte_end":7892,"line_start":225,"line_end":225,"column_start":1,"column_end":27}},{"value":"/ If the value in the pair is supplied (`(key, Some(value))`), this key-value pair will be","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":7893,"byte_end":7985,"line_start":226,"line_end":226,"column_start":1,"column_end":93}},{"value":"/ checked for inclusion in the proof.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":7986,"byte_end":8025,"line_start":227,"line_end":227,"column_start":1,"column_end":40}},{"value":"/ If the value is omitted (`(key, None)`), this key will be checked for non-inclusion in the","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":8026,"byte_end":8120,"line_start":228,"line_end":228,"column_start":1,"column_end":95}},{"value":"/ proof.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":8121,"byte_end":8131,"line_start":229,"line_end":229,"column_start":1,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":587},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":8517,"byte_end":8532,"line_start":245,"line_end":245,"column_start":8,"column_end":23},"name":"delta_trie_root","qualname":"::delta_trie_root","value":"pub fn delta_trie_root<L: TrieConfiguration, I, A, B, DB,\nV>(&mut DB, TrieHash<L>, I) -> Result<TrieHash<L>, Box<TrieError<L>>> where\nI: IntoIterator<Item = (A, B)>, A: Borrow<[u8]>, B: Borrow<Option<V>>,\nV: Borrow<[u8]>, DB: hash_db::HashDB<L::Hash, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Determine a trie root given a hash DB and delta values.\n","sig":null,"attributes":[{"value":"/ Determine a trie root given a hash DB and delta values.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":8450,"byte_end":8509,"line_start":244,"line_end":244,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":595},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":9219,"byte_end":9234,"line_start":275,"line_end":275,"column_start":8,"column_end":23},"name":"read_trie_value","qualname":"::read_trie_value","value":"pub fn read_trie_value<L, DB>(&DB, &TrieHash<L>, &[u8])\n-> Result<Option<Vec<u8>>, Box<TrieError<L>>> where L: TrieConfiguration,\nDB: hash_db::HashDBRef<L::Hash, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Read a value from the trie.\n","sig":null,"attributes":[{"value":"/ Read a value from the trie.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":9180,"byte_end":9211,"line_start":274,"line_end":274,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":600},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":9552,"byte_end":9572,"line_start":288,"line_end":288,"column_start":8,"column_end":28},"name":"read_trie_value_with","qualname":"::read_trie_value_with","value":"pub fn read_trie_value_with<L, Q, DB>(&DB, &TrieHash<L>, &[u8], Q)\n-> Result<Option<Vec<u8>>, Box<TrieError<L>>> where L: TrieConfiguration,\nQ: Query<L::Hash, Item = DBValue>,\nDB: hash_db::HashDBRef<L::Hash, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Read a value from the trie with given Query.\n","sig":null,"attributes":[{"value":"/ Read a value from the trie with given Query.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":9496,"byte_end":9544,"line_start":287,"line_end":287,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":606},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":9944,"byte_end":9959,"line_start":305,"line_end":305,"column_start":8,"column_end":23},"name":"empty_trie_root","qualname":"::empty_trie_root","value":"pub fn empty_trie_root<L: TrieConfiguration>() -> <L::Hash as Hasher>::Out","parent":null,"children":[],"decl_id":null,"docs":" Determine the empty trie root.\n","sig":null,"attributes":[{"value":"/ Determine the empty trie root.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":9902,"byte_end":9936,"line_start":304,"line_end":304,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":608},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":10123,"byte_end":10144,"line_start":310,"line_end":310,"column_start":8,"column_end":29},"name":"empty_child_trie_root","qualname":"::empty_child_trie_root","value":"pub fn empty_child_trie_root<L: TrieConfiguration>()\n-> <L::Hash as Hasher>::Out","parent":null,"children":[],"decl_id":null,"docs":" Determine the empty child trie root.\n","sig":null,"attributes":[{"value":"/ Determine the empty child trie root.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":10075,"byte_end":10115,"line_start":309,"line_end":309,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":610},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":10452,"byte_end":10467,"line_start":316,"line_end":316,"column_start":8,"column_end":23},"name":"child_trie_root","qualname":"::child_trie_root","value":"pub fn child_trie_root<L: TrieConfiguration, I, A, B>(I)\n-> <L::Hash as Hasher>::Out where I: IntoIterator<Item = (A, B)>,\nA: AsRef<[u8]> + Ord, B: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Determine a child trie root given its ordered contents, closed form. H is the default hasher,\n but a generic implementation may ignore this type parameter and use other hashers.\n","sig":null,"attributes":[{"value":"/ Determine a child trie root given its ordered contents, closed form. H is the default hasher,","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":10260,"byte_end":10357,"line_start":314,"line_end":314,"column_start":1,"column_end":98}},{"value":"/ but a generic implementation may ignore this type parameter and use other hashers.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":10358,"byte_end":10444,"line_start":315,"line_end":315,"column_start":1,"column_end":87}}]},{"kind":"Function","id":{"krate":0,"index":615},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":10827,"byte_end":10848,"line_start":327,"line_end":327,"column_start":8,"column_end":29},"name":"child_delta_trie_root","qualname":"::child_delta_trie_root","value":"pub fn child_delta_trie_root<L: TrieConfiguration, I, A, B, DB, RD,\nV>(&[u8], &mut DB, RD, I)\n-> Result<<L::Hash as Hasher>::Out, Box<TrieError<L>>> where\nI: IntoIterator<Item = (A, B)>, A: Borrow<[u8]>, B: Borrow<Option<V>>,\nV: Borrow<[u8]>, RD: AsRef<[u8]>,\nDB: hash_db::HashDB<L::Hash, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Determine a child trie root given a hash DB and delta values. H is the default hasher,\n but a generic implementation may ignore this type parameter and use other hashers.\n","sig":null,"attributes":[{"value":"/ Determine a child trie root given a hash DB and delta values. H is the default hasher,","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":10642,"byte_end":10732,"line_start":325,"line_end":325,"column_start":1,"column_end":91}},{"value":"/ but a generic implementation may ignore this type parameter and use other hashers.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":10733,"byte_end":10819,"line_start":326,"line_end":326,"column_start":1,"column_end":87}}]},{"kind":"Function","id":{"krate":0,"index":623},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":11508,"byte_end":11523,"line_start":350,"line_end":350,"column_start":8,"column_end":23},"name":"record_all_keys","qualname":"::record_all_keys","value":"pub fn record_all_keys<L: TrieConfiguration,\nDB>(&DB, &TrieHash<L>, &mut Recorder<TrieHash<L>>)\n-> Result<(), Box<TrieError<L>>> where\nDB: hash_db::HashDBRef<L::Hash, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Record all keys for a given root.\n","sig":null,"attributes":[{"value":"/ Record all keys for a given root.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":11463,"byte_end":11500,"line_start":349,"line_end":349,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":626},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":12051,"byte_end":12072,"line_start":374,"line_end":374,"column_start":8,"column_end":29},"name":"read_child_trie_value","qualname":"::read_child_trie_value","value":"pub fn read_child_trie_value<L: TrieConfiguration,\nDB>(&[u8], &DB, &[u8], &[u8]) -> Result<Option<Vec<u8>>, Box<TrieError<L>>>\nwhere DB: hash_db::HashDBRef<L::Hash, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Read a value from the child trie.\n","sig":null,"attributes":[{"value":"/ Read a value from the child trie.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":12006,"byte_end":12043,"line_start":373,"line_end":373,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":631},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":12616,"byte_end":12642,"line_start":392,"line_end":392,"column_start":8,"column_end":34},"name":"read_child_trie_value_with","qualname":"::read_child_trie_value_with","value":"pub fn read_child_trie_value_with<L, Q, DB>(&[u8], &DB, &[u8], &[u8], Q)\n-> Result<Option<Vec<u8>>, Box<TrieError<L>>> where L: TrieConfiguration,\nQ: Query<L::Hash, Item = DBValue>,\nDB: hash_db::HashDBRef<L::Hash, trie_db::DBValue>","parent":null,"children":[],"decl_id":null,"docs":" Read a value from the child trie with given query.\n","sig":null,"attributes":[{"value":"/ Read a value from the child trie with given query.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":12554,"byte_end":12608,"line_start":391,"line_end":391,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":637},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":13332,"byte_end":13343,"line_start":416,"line_end":416,"column_start":12,"column_end":23},"name":"KeySpacedDB","qualname":"::KeySpacedDB","value":"","parent":null,"children":[],"decl_id":null,"docs":" `HashDB` implementation that append a encoded prefix (unique id bytes) in addition to the\n prefix of every key value.\n","sig":null,"attributes":[{"value":"/ `HashDB` implementation that append a encoded prefix (unique id bytes) in addition to the","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":13196,"byte_end":13289,"line_start":414,"line_end":414,"column_start":1,"column_end":94}},{"value":"/ prefix of every key value.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":13290,"byte_end":13320,"line_start":415,"line_end":415,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":645},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":13593,"byte_end":13607,"line_start":422,"line_end":422,"column_start":12,"column_end":26},"name":"KeySpacedDBMut","qualname":"::KeySpacedDBMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" `HashDBMut` implementation that append a encoded prefix (unique id bytes) in addition to the\n prefix of every key value.","sig":null,"attributes":[{"value":"/ `HashDBMut` implementation that append a encoded prefix (unique id bytes) in addition to the","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":13391,"byte_end":13487,"line_start":418,"line_end":418,"column_start":1,"column_end":97}},{"value":"/ prefix of every key value.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":13488,"byte_end":13518,"line_start":419,"line_end":419,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":13519,"byte_end":13522,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ Mutable variant of `KeySpacedDB`, see [`KeySpacedDB`].","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":13523,"byte_end":13581,"line_start":421,"line_end":421,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":14144,"byte_end":14147,"line_start":438,"line_end":438,"column_start":9,"column_end":12},"name":"new","qualname":"<KeySpacedDB>::new","value":"pub fn new(&'a DB, &'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" instantiate new keyspaced db\n","sig":null,"attributes":[{"value":"/ instantiate new keyspaced db","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":14103,"byte_end":14135,"line_start":437,"line_end":437,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":14329,"byte_end":14332,"line_start":448,"line_end":448,"column_start":9,"column_end":12},"name":"new","qualname":"<KeySpacedDBMut>::new","value":"pub fn new(&'a mut DB, &'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" instantiate new keyspaced db\n","sig":null,"attributes":[{"value":"/ instantiate new keyspaced db","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":14288,"byte_end":14320,"line_start":447,"line_end":447,"column_start":2,"column_end":34}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/error.rs","byte_start":30106,"byte_end":30111,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":11}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/error.rs","byte_start":30217,"byte_end":30222,"line_start":39,"line_end":39,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":13}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/error.rs","byte_start":30413,"byte_end":30418,"line_start":49,"line_end":49,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","byte_start":32047,"byte_end":32061,"line_start":39,"line_end":39,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","byte_start":32414,"byte_end":32428,"line_start":55,"line_end":55,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","byte_start":33197,"byte_end":33206,"line_start":83,"line_end":83,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","byte_start":41232,"byte_end":41238,"line_start":331,"line_end":331,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","byte_start":42853,"byte_end":42863,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","byte_start":43167,"byte_end":43177,"line_start":53,"line_end":53,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","byte_start":44107,"byte_end":44117,"line_start":83,"line_end":83,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","byte_start":44138,"byte_end":44148,"line_start":85,"line_end":85,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":48515,"byte_end":48527,"line_start":44,"line_end":44,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":50708,"byte_end":50720,"line_start":117,"line_end":117,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":51780,"byte_end":51804,"line_start":155,"line_end":155,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":51937,"byte_end":51961,"line_start":161,"line_end":161,"column_start":19,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":52103,"byte_end":52111,"line_start":169,"line_end":169,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":53909,"byte_end":53914,"line_start":49,"line_end":49,"column_start":56,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":54061,"byte_end":54066,"line_start":56,"line_end":56,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":54520,"byte_end":54525,"line_start":70,"line_end":70,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":54701,"byte_end":54706,"line_start":77,"line_end":77,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_stream.rs","byte_start":61393,"byte_end":61403,"line_start":36,"line_end":36,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_stream.rs","byte_start":62802,"byte_end":62812,"line_start":76,"line_end":76,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":2235,"byte_end":2243,"line_start":62,"line_end":62,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":2468,"byte_end":2476,"line_start":74,"line_end":74,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":501},{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":3117,"byte_end":3125,"line_start":104,"line_end":104,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":3395,"byte_end":3403,"line_start":116,"line_end":116,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":519},{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":4550,"byte_end":4551,"line_start":155,"line_end":155,"column_start":76,"column_end":77},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":14059,"byte_end":14070,"line_start":433,"line_end":433,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":14241,"byte_end":14255,"line_start":443,"line_end":443,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":14465,"byte_end":14476,"line_start":453,"line_end":453,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":14988,"byte_end":15002,"line_start":470,"line_end":470,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":16142,"byte_end":16156,"line_start":502,"line_end":502,"column_start":48,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/error.rs","byte_start":30106,"byte_end":30111,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":701},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/error.rs","byte_start":30217,"byte_end":30222,"line_start":39,"line_end":39,"column_start":19,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":701},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/error.rs","byte_start":30413,"byte_end":30418,"line_start":49,"line_end":49,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":701},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","byte_start":32047,"byte_end":32061,"line_start":39,"line_end":39,"column_start":10,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":92},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","byte_start":32414,"byte_end":32428,"line_start":55,"line_end":55,"column_start":20,"column_end":34},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":92},"to":{"krate":18,"index":152}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","byte_start":33197,"byte_end":33206,"line_start":83,"line_end":83,"column_start":24,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":718},"to":{"krate":27,"index":1768}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_codec.rs","byte_start":41232,"byte_end":41238,"line_start":331,"line_end":331,"column_start":6,"column_end":12},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","byte_start":42853,"byte_end":42863,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","byte_start":43167,"byte_end":43177,"line_start":53,"line_end":53,"column_start":17,"column_end":27},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":728},"to":{"krate":18,"index":202}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","byte_start":44107,"byte_end":44117,"line_start":83,"line_end":83,"column_start":28,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":728},"to":{"krate":18,"index":890}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/node_header.rs","byte_start":44138,"byte_end":44148,"line_start":85,"line_end":85,"column_start":17,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":728},"to":{"krate":18,"index":220}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":48515,"byte_end":48527,"line_start":44,"line_end":44,"column_start":6,"column_end":18},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":50708,"byte_end":50720,"line_start":117,"line_end":117,"column_start":6,"column_end":18},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":787},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":51780,"byte_end":51804,"line_start":155,"line_end":155,"column_start":6,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":51937,"byte_end":51961,"line_start":161,"line_end":161,"column_start":19,"column_end":43},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":233},"to":{"krate":2,"index":7914}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/storage_proof.rs","byte_start":52103,"byte_end":52111,"line_start":169,"line_end":169,"column_start":47,"column_end":55},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":537},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":53909,"byte_end":53914,"line_start":49,"line_end":49,"column_start":56,"column_end":61},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":54061,"byte_end":54066,"line_start":56,"line_end":56,"column_start":41,"column_end":46},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":282},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":54520,"byte_end":54525,"line_start":70,"line_end":70,"column_start":43,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_codec.rs","byte_start":54701,"byte_end":54706,"line_start":77,"line_end":77,"column_start":45,"column_end":50},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_stream.rs","byte_start":61393,"byte_end":61403,"line_start":36,"line_end":36,"column_start":6,"column_end":16},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/trie_stream.rs","byte_start":62802,"byte_end":62812,"line_start":76,"line_end":76,"column_start":32,"column_end":42},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":818},"to":{"krate":40,"index":25}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":2235,"byte_end":2243,"line_start":62,"line_end":62,"column_start":24,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":480},"to":{"krate":27,"index":2149}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":2468,"byte_end":2476,"line_start":74,"line_end":74,"column_start":31,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":480},"to":{"krate":27,"index":2155}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":3117,"byte_end":3125,"line_start":104,"line_end":104,"column_start":24,"column_end":32},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":484},"to":{"krate":27,"index":2149}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":3395,"byte_end":3403,"line_start":116,"line_end":116,"column_start":31,"column_end":39},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":484},"to":{"krate":27,"index":2155}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":4442,"byte_end":4450,"line_start":154,"line_end":154,"column_start":41,"column_end":49},"kind":"SuperTrait","from":{"krate":25,"index":69},"to":{"krate":0,"index":527}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":4550,"byte_end":4551,"line_start":155,"line_end":155,"column_start":76,"column_end":77},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":531},"to":{"krate":0,"index":527}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":14059,"byte_end":14070,"line_start":433,"line_end":433,"column_start":17,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":14241,"byte_end":14255,"line_start":443,"line_end":443,"column_start":17,"column_end":31},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":14465,"byte_end":14476,"line_start":453,"line_end":453,"column_start":49,"column_end":60},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":637},"to":{"krate":25,"index":52}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":14988,"byte_end":15002,"line_start":470,"line_end":470,"column_start":46,"column_end":60},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":645},"to":{"krate":25,"index":44}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/trie/src/lib.rs","byte_start":16142,"byte_end":16156,"line_start":502,"line_end":502,"column_start":48,"column_end":62},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":645},"to":{"krate":25,"index":69}}]}