{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface","program":"/Users/myunghacho/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","sp_wasm_interface","--edition=2021","/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"log\"","--cfg","feature=\"std\"","--cfg","feature=\"wasmi\"","-C","metadata=029d294e494d0f84","-C","extra-filename=-029d294e494d0f84","--out-dir","/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps","-L","dependency=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps","--extern","impl_trait_for_tuples=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libimpl_trait_for_tuples-3520002570cdd594.dylib","--extern","log=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/liblog-5e5b893e5fa367e7.rmeta","--extern","codec=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libparity_scale_codec-48d05d2fb449a544.rmeta","--extern","sp_std=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libsp_std-caa0d9a9cb9fa1d4.rmeta","--extern","wasmi=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libwasmi-0d22f5f1a6ed5180.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/myunghacho/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libsp_wasm_interface-029d294e494d0f84.rmeta"},"prelude":{"crate_id":{"name":"sp_wasm_interface","disambiguator":[14621349120364007850,0]},"crate_root":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src","external_crates":[{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9602236740471282608,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[740641686899810413,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1452182208797737205,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4474361821197688885,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11146593528668201643,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7026141623111916022,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11096207044195207047,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[16946906222655600942,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9670608472714711915,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3075685271658393714,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[7553277853646633394,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5387634511767759158,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10401181353817371068,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14296571408058143832,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":18,"id":{"name":"sp_std","disambiguator":[3836989623224051638,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":19,"id":{"name":"parity_scale_codec","disambiguator":[11025389664727138833,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":20,"id":{"name":"parity_scale_codec_derive","disambiguator":[13567950630339581430,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":21,"id":{"name":"arrayvec","disambiguator":[4765445384651765470,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":22,"id":{"name":"byte_slice_cast","disambiguator":[1450742829568187162,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":23,"id":{"name":"impl_trait_for_tuples","disambiguator":[1199501065919261664,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":24,"id":{"name":"serde","disambiguator":[9544137782352177236,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","num":25,"id":{"name":"serde_derive","disambiguator":[17621009518653333156,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/wasmi_impl.rs","num":26,"id":{"name":"wasmi","disambiguator":[16123217206983833204,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/wasmi_impl.rs","num":27,"id":{"name":"num_rational","disambiguator":[7244470453211819544,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/wasmi_impl.rs","num":28,"id":{"name":"num_bigint","disambiguator":[635263567890515209,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/wasmi_impl.rs","num":29,"id":{"name":"num_integer","disambiguator":[12790497028950123625,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/wasmi_impl.rs","num":30,"id":{"name":"num_traits","disambiguator":[4458903683416238728,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/wasmi_impl.rs","num":31,"id":{"name":"parity_wasm","disambiguator":[16011417072864726173,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/wasmi_impl.rs","num":32,"id":{"name":"downcast_rs","disambiguator":[4795813113247543536,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/wasmi_impl.rs","num":33,"id":{"name":"wasmi_validation","disambiguator":[3849529294403821989,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/wasmi_impl.rs","num":34,"id":{"name":"memory_units","disambiguator":[17120499401839962369,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/wasmi_impl.rs","num":35,"id":{"name":"libc","disambiguator":[9005103142181622755,0]}}],"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":686,"byte_end":20586,"line_start":18,"line_end":722,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":686,"byte_end":20586,"line_start":18,"line_end":722,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":178},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":198},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":225},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":230},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":74},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":103},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":135},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":276},{"krate":0,"index":281},{"krate":0,"index":287},{"krate":0,"index":294},{"krate":0,"index":302},{"krate":0,"index":311},{"krate":0,"index":321},{"krate":0,"index":332},{"krate":0,"index":344},{"krate":0,"index":357},{"krate":0,"index":371},{"krate":0,"index":386},{"krate":0,"index":402},{"krate":0,"index":419},{"krate":0,"index":437},{"krate":0,"index":456},{"krate":0,"index":476},{"krate":0,"index":497},{"krate":0,"index":519},{"krate":0,"index":542},{"krate":0,"index":566},{"krate":0,"index":591},{"krate":0,"index":617},{"krate":0,"index":644},{"krate":0,"index":672},{"krate":0,"index":701},{"krate":0,"index":731},{"krate":0,"index":762},{"krate":0,"index":137},{"krate":0,"index":141},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":804},{"krate":0,"index":807},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":814},{"krate":0,"index":817},{"krate":0,"index":819},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":829},{"krate":0,"index":832},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":834},{"krate":0,"index":840},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":852},{"krate":0,"index":857},{"krate":0,"index":174},{"krate":0,"index":176}],"decl_id":null,"docs":" Types and traits for interfacing between the host and the wasm runtime.\n","sig":null,"attributes":[{"value":"/ Types and traits for interfacing between the host and the wasm runtime.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":686,"byte_end":761,"line_start":18,"line_end":18,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":50},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":1445,"byte_end":1451,"line_start":48,"line_end":48,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"result::Result<T, String>","parent":null,"children":[],"decl_id":null,"docs":" Result type used by traits in this crate.\n","sig":null,"attributes":[{"value":"/ Result type used by traits in this crate.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":1366,"byte_end":1411,"line_start":46,"line_end":46,"column_start":1,"column_end":46}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":1412,"byte_end":1435,"line_start":47,"line_end":47,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":179},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":1735,"byte_end":1738,"line_start":56,"line_end":56,"column_start":2,"column_end":5},"name":"I32","qualname":"::ValueType::I32","value":"ValueType::I32","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" An `i32` value type.\n","sig":null,"attributes":[{"value":"/ An `i32` value type.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":1709,"byte_end":1733,"line_start":55,"line_end":55,"column_start":2,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":181},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":1767,"byte_end":1770,"line_start":58,"line_end":58,"column_start":2,"column_end":5},"name":"I64","qualname":"::ValueType::I64","value":"ValueType::I64","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" An `i64` value type.\n","sig":null,"attributes":[{"value":"/ An `i64` value type.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":1741,"byte_end":1765,"line_start":57,"line_end":57,"column_start":2,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":183},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":1799,"byte_end":1802,"line_start":60,"line_end":60,"column_start":2,"column_end":5},"name":"F32","qualname":"::ValueType::F32","value":"ValueType::F32","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" An `f32` value type.\n","sig":null,"attributes":[{"value":"/ An `f32` value type.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":1773,"byte_end":1797,"line_start":59,"line_end":59,"column_start":2,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":185},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":1831,"byte_end":1834,"line_start":62,"line_end":62,"column_start":2,"column_end":5},"name":"F64","qualname":"::ValueType::F64","value":"ValueType::F64","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" An `f64` value type.\n","sig":null,"attributes":[{"value":"/ An `f64` value type.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":1805,"byte_end":1829,"line_start":61,"line_end":61,"column_start":2,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":178},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":1696,"byte_end":1705,"line_start":54,"line_end":54,"column_start":10,"column_end":19},"name":"ValueType","qualname":"::ValueType","value":"pub enum ValueType { I32, I64, F32, F64, }","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":185}],"decl_id":null,"docs":" Value types supported by Substrate on the boundary between host/Wasm.\n","sig":null,"attributes":[{"value":"/ Value types supported by Substrate on the boundary between host/Wasm.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":1568,"byte_end":1641,"line_start":52,"line_end":52,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":199},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":2470,"byte_end":2473,"line_start":94,"line_end":94,"column_start":2,"column_end":5},"name":"I32","qualname":"::Value::I32","value":"Value::I32(i32)","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" A 32-bit integer.\n","sig":null,"attributes":[{"value":"/ A 32-bit integer.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":2447,"byte_end":2468,"line_start":93,"line_end":93,"column_start":2,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":202},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":2504,"byte_end":2507,"line_start":96,"line_end":96,"column_start":2,"column_end":5},"name":"I64","qualname":"::Value::I64","value":"Value::I64(i64)","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" A 64-bit integer.\n","sig":null,"attributes":[{"value":"/ A 64-bit integer.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":2481,"byte_end":2502,"line_start":95,"line_end":95,"column_start":2,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":205},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":2643,"byte_end":2646,"line_start":100,"line_end":100,"column_start":2,"column_end":5},"name":"F32","qualname":"::Value::F32","value":"Value::F32(u32)","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" A 32-bit floating-point number stored as raw bit pattern.","sig":null,"attributes":[{"value":"/ A 32-bit floating-point number stored as raw bit pattern.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":2515,"byte_end":2576,"line_start":97,"line_end":97,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":2578,"byte_end":2581,"line_start":98,"line_end":98,"column_start":2,"column_end":5}},{"value":"/ You can materialize this value using `f32::from_bits`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":2583,"byte_end":2641,"line_start":99,"line_end":99,"column_start":2,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":208},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":2782,"byte_end":2785,"line_start":104,"line_end":104,"column_start":2,"column_end":5},"name":"F64","qualname":"::Value::F64","value":"Value::F64(u64)","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" A 64-bit floating-point number stored as raw bit pattern.","sig":null,"attributes":[{"value":"/ A 64-bit floating-point number stored as raw bit pattern.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":2654,"byte_end":2715,"line_start":101,"line_end":101,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":2717,"byte_end":2720,"line_start":102,"line_end":102,"column_start":2,"column_end":5}},{"value":"/ You can materialize this value using `f64::from_bits`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":2722,"byte_end":2780,"line_start":103,"line_end":103,"column_start":2,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":198},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":2438,"byte_end":2443,"line_start":92,"line_end":92,"column_start":10,"column_end":15},"name":"Value","qualname":"::Value","value":"pub enum Value { I32(i32), I64(i64), F32(u32), F64(u64), }","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":208}],"decl_id":null,"docs":" Values supported by Substrate on the boundary between host/Wasm.\n","sig":null,"attributes":[{"value":"/ Values supported by Substrate on the boundary between host/Wasm.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":2289,"byte_end":2357,"line_start":90,"line_end":90,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":2853,"byte_end":2863,"line_start":109,"line_end":109,"column_start":9,"column_end":19},"name":"value_type","qualname":"<Value>::value_type","value":"pub fn value_type(&Self) -> ValueType","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of this value.\n","sig":null,"attributes":[{"value":"/ Returns the type of this value.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":2809,"byte_end":2844,"line_start":108,"line_end":108,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":3090,"byte_end":3096,"line_start":119,"line_end":119,"column_start":9,"column_end":15},"name":"as_i32","qualname":"<Value>::as_i32","value":"pub fn as_i32(&Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" Return `Self` as `i32`.\n","sig":null,"attributes":[{"value":"/ Return `Self` as `i32`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":3054,"byte_end":3081,"line_start":118,"line_end":118,"column_start":2,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":61},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":3330,"byte_end":3336,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"Sealed","qualname":"::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":68},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":3583,"byte_end":3594,"line_start":144,"line_end":144,"column_start":11,"column_end":22},"name":"PointerType","qualname":"::PointerType","value":"PointerType: Sized + private::Sealed","parent":null,"children":[{"krate":0,"index":69}],"decl_id":null,"docs":" Something that can be wrapped in a wasm `Pointer`.","sig":null,"attributes":[{"value":"/ Something that can be wrapped in a wasm `Pointer`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":3488,"byte_end":3542,"line_start":141,"line_end":141,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":3543,"byte_end":3546,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":3547,"byte_end":3572,"line_start":143,"line_end":143,"column_start":1,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":69},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":3664,"byte_end":3668,"line_start":146,"line_end":146,"column_start":8,"column_end":12},"name":"SIZE","qualname":"::PointerType::SIZE","value":"u32","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" The size of the type in wasm.\n","sig":null,"attributes":[{"value":"/ The size of the type in wasm.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":3623,"byte_end":3656,"line_start":145,"line_end":145,"column_start":2,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":230},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":3931,"byte_end":3938,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"Pointer","qualname":"::Pointer","value":"Pointer {  }","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233}],"decl_id":null,"docs":" Type to represent a pointer in wasm at the host.\n","sig":null,"attributes":[{"value":"/ Type to represent a pointer in wasm at the host.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":3822,"byte_end":3874,"line_start":154,"line_end":154,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":4077,"byte_end":4080,"line_start":163,"line_end":163,"column_start":9,"column_end":12},"name":"new","qualname":"<Pointer<T>>::new","value":"pub fn new(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `Self`.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `Self`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":4032,"byte_end":4068,"line_start":162,"line_end":162,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":4395,"byte_end":4401,"line_start":173,"line_end":173,"column_start":9,"column_end":15},"name":"offset","qualname":"<Pointer<T>>::offset","value":"pub fn offset(Self, u32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Calculate the offset from this pointer.","sig":null,"attributes":[{"value":"/ Calculate the offset from this pointer.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":4150,"byte_end":4193,"line_start":167,"line_end":167,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":4195,"byte_end":4198,"line_start":168,"line_end":168,"column_start":2,"column_end":5}},{"value":"/ `offset` is in units of `T`. So, `3` means `3 * mem::size_of::<T>()` as offset to the","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":4200,"byte_end":4289,"line_start":169,"line_end":169,"column_start":2,"column_end":91}},{"value":"/ pointer.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":4291,"byte_end":4303,"line_start":170,"line_end":170,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":4305,"byte_end":4308,"line_start":171,"line_end":171,"column_start":2,"column_end":5}},{"value":"/ Returns an `Option` to respect that the pointer could probably overflow.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":4310,"byte_end":4386,"line_start":172,"line_end":172,"column_start":2,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":4612,"byte_end":4616,"line_start":181,"line_end":181,"column_start":9,"column_end":13},"name":"null","qualname":"<Pointer<T>>::null","value":"pub fn null() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a null pointer.\n","sig":null,"attributes":[{"value":"/ Create a null pointer.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":4577,"byte_end":4603,"line_start":180,"line_end":180,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":4717,"byte_end":4721,"line_start":186,"line_end":186,"column_start":9,"column_end":13},"name":"cast","qualname":"<Pointer<T>>::cast","value":"pub fn cast<R: PointerType>(Self) -> Pointer<R>","parent":null,"children":[],"decl_id":null,"docs":" Cast this pointer of type `T` to a pointer of type `R`.\n","sig":null,"attributes":[{"value":"/ Cast this pointer of type `T` to a pointer of type `R`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":4649,"byte_end":4708,"line_start":185,"line_end":185,"column_start":2,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":102},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":5636,"byte_end":5644,"line_start":232,"line_end":232,"column_start":10,"column_end":18},"name":"WordSize","qualname":"::WordSize","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" The word size used in wasm. Normally known as `usize` in Rust.\n","sig":null,"attributes":[{"value":"/ The word size used in wasm. Normally known as `usize` in Rust.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":5560,"byte_end":5626,"line_start":231,"line_end":231,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":253},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":5735,"byte_end":5744,"line_start":236,"line_end":236,"column_start":12,"column_end":21},"name":"Signature","qualname":"::Signature","value":"Signature { args, return_value }","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255}],"decl_id":null,"docs":" The Signature of a function\n","sig":null,"attributes":[{"value":"/ The Signature of a function","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":5653,"byte_end":5684,"line_start":234,"line_end":234,"column_start":1,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":254},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":5786,"byte_end":5790,"line_start":238,"line_end":238,"column_start":6,"column_end":10},"name":"args","qualname":"::Signature::args","value":"std::borrow::Cow<'static, [ValueType]>","parent":{"krate":0,"index":253},"children":[],"decl_id":null,"docs":" The arguments of a function.\n","sig":null,"attributes":[{"value":"/ The arguments of a function.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":5748,"byte_end":5780,"line_start":237,"line_end":237,"column_start":2,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":255},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":5870,"byte_end":5882,"line_start":240,"line_end":240,"column_start":6,"column_end":18},"name":"return_value","qualname":"::Signature::return_value","value":"std::option::Option<ValueType>","parent":{"krate":0,"index":253},"children":[],"decl_id":null,"docs":" The optional return value of a function.\n","sig":null,"attributes":[{"value":"/ The optional return value of a function.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":5820,"byte_end":5864,"line_start":239,"line_end":239,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":5974,"byte_end":5977,"line_start":245,"line_end":245,"column_start":9,"column_end":12},"name":"new","qualname":"<Signature>::new","value":"pub fn new<T: Into<Cow>>(T, Option<ValueType>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `Signature`.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `Signature`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":5924,"byte_end":5965,"line_start":244,"line_end":244,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":6223,"byte_end":6236,"line_start":253,"line_end":253,"column_start":9,"column_end":22},"name":"new_with_args","qualname":"<Signature>::new_with_args","value":"pub fn new_with_args<T: Into<Cow>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `Signature` with the given `args` and without any return value.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `Signature` with the given `args` and without any return value.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":6122,"byte_end":6214,"line_start":252,"line_end":252,"column_start":2,"column_end":94}}]},{"kind":"Trait","id":{"krate":0,"index":108},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":6445,"byte_end":6463,"line_start":260,"line_end":260,"column_start":11,"column_end":29},"name":"MaybeRefUnwindSafe","qualname":"::MaybeRefUnwindSafe","value":"MaybeRefUnwindSafe: std::panic::RefUnwindSafe","parent":null,"children":[],"decl_id":null,"docs":" A trait that requires `RefUnwindSafe` when `feature = std`.\n","sig":null,"attributes":[{"value":"/ A trait that requires `RefUnwindSafe` when `feature = std`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":6347,"byte_end":6410,"line_start":258,"line_end":258,"column_start":1,"column_end":64}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":6411,"byte_end":6434,"line_start":259,"line_end":259,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":111},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":6870,"byte_end":6878,"line_start":271,"line_end":271,"column_start":11,"column_end":19},"name":"Function","qualname":"::Function","value":"Function: MaybeRefUnwindSafe + Send + Sync","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"decl_id":null,"docs":" Something that provides a function implementation on the host for a wasm function.\n","sig":null,"attributes":[{"value":"/ Something that provides a function implementation on the host for a wasm function.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":6773,"byte_end":6859,"line_start":270,"line_end":270,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":6959,"byte_end":6963,"line_start":273,"line_end":273,"column_start":5,"column_end":9},"name":"name","qualname":"::Function::name","value":"pub fn name(&Self) -> &str","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" Returns the name of this function.\n","sig":null,"attributes":[{"value":"/ Returns the name of this function.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":6916,"byte_end":6954,"line_start":272,"line_end":272,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":7029,"byte_end":7038,"line_start":275,"line_end":275,"column_start":5,"column_end":14},"name":"signature","qualname":"::Function::signature","value":"pub fn signature(&Self) -> Signature","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" Returns the signature of this function.\n","sig":null,"attributes":[{"value":"/ Returns the signature of this function.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":6981,"byte_end":7024,"line_start":274,"line_end":274,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":7117,"byte_end":7124,"line_start":277,"line_end":277,"column_start":5,"column_end":12},"name":"execute","qualname":"::Function::execute","value":"pub fn execute(&Self, &mut dyn FunctionContext,\n&mut dyn Iterator<Item = Value>) -> Result<Option<Value>>","parent":{"krate":0,"index":111},"children":[],"decl_id":null,"docs":" Execute this function with the given arguments.\n","sig":null,"attributes":[{"value":"/ Execute this function with the given arguments.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":7061,"byte_end":7112,"line_start":276,"line_end":276,"column_start":2,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":117},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":7503,"byte_end":7518,"line_start":291,"line_end":291,"column_start":11,"column_end":26},"name":"FunctionContext","qualname":"::FunctionContext","value":"FunctionContext","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124}],"decl_id":null,"docs":" Context used by `Function` to interact with the allocator and the memory of the wasm instance.\n","sig":null,"attributes":[{"value":"/ Context used by `Function` to interact with the allocator and the memory of the wasm instance.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":7394,"byte_end":7492,"line_start":290,"line_end":290,"column_start":1,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":7572,"byte_end":7583,"line_start":293,"line_end":293,"column_start":5,"column_end":16},"name":"read_memory","qualname":"::FunctionContext::read_memory","value":"pub fn read_memory(&Self, Pointer<u8>, WordSize) -> Result<Vec<u8>>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Read memory from `address` into a vector.\n","sig":null,"attributes":[{"value":"/ Read memory from `address` into a vector.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":7522,"byte_end":7567,"line_start":292,"line_end":292,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":7814,"byte_end":7830,"line_start":299,"line_end":299,"column_start":5,"column_end":21},"name":"read_memory_into","qualname":"::FunctionContext::read_memory_into","value":"pub fn read_memory_into(&Self, Pointer<u8>, &mut [u8]) -> Result<()>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Read memory into the given `dest` buffer from `address`.\n","sig":null,"attributes":[{"value":"/ Read memory into the given `dest` buffer from `address`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":7749,"byte_end":7809,"line_start":298,"line_end":298,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":7952,"byte_end":7964,"line_start":301,"line_end":301,"column_start":5,"column_end":17},"name":"write_memory","qualname":"::FunctionContext::write_memory","value":"pub fn write_memory(&mut Self, Pointer<u8>, &[u8]) -> Result<()>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Write the given data at `address` into the memory.\n","sig":null,"attributes":[{"value":"/ Write the given data at `address` into the memory.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":7893,"byte_end":7947,"line_start":300,"line_end":300,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":8079,"byte_end":8094,"line_start":303,"line_end":303,"column_start":5,"column_end":20},"name":"allocate_memory","qualname":"::FunctionContext::allocate_memory","value":"pub fn allocate_memory(&mut Self, WordSize) -> Result<Pointer<u8>>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Allocate a memory instance of `size` bytes.\n","sig":null,"attributes":[{"value":"/ Allocate a memory instance of `size` bytes.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":8027,"byte_end":8074,"line_start":302,"line_end":302,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":8191,"byte_end":8208,"line_start":305,"line_end":305,"column_start":5,"column_end":22},"name":"deallocate_memory","qualname":"::FunctionContext::deallocate_memory","value":"pub fn deallocate_memory(&mut Self, Pointer<u8>) -> Result<()>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Deallocate a given memory instance.\n","sig":null,"attributes":[{"value":"/ Deallocate a given memory instance.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":8147,"byte_end":8186,"line_start":304,"line_end":304,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":8294,"byte_end":8301,"line_start":307,"line_end":307,"column_start":5,"column_end":12},"name":"sandbox","qualname":"::FunctionContext::sandbox","value":"pub fn sandbox(&mut Self) -> &mut dyn Sandbox","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Provides access to the sandbox.\n","sig":null,"attributes":[{"value":"/ Provides access to the sandbox.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":8254,"byte_end":8289,"line_start":306,"line_end":306,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":9511,"byte_end":9539,"line_start":330,"line_end":330,"column_start":5,"column_end":33},"name":"register_panic_error_message","qualname":"::FunctionContext::register_panic_error_message","value":"pub fn register_panic_error_message(&mut Self, &str)","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Registers a panic error message within the executor.","sig":null,"attributes":[{"value":"/ Registers a panic error message within the executor.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":8336,"byte_end":8392,"line_start":309,"line_end":309,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":8394,"byte_end":8397,"line_start":310,"line_end":310,"column_start":2,"column_end":5}},{"value":"/ This is meant to be used in situations where the runtime","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":8399,"byte_end":8459,"line_start":311,"line_end":311,"column_start":2,"column_end":62}},{"value":"/ encounters an unrecoverable error and intends to panic.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":8461,"byte_end":8520,"line_start":312,"line_end":312,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":8522,"byte_end":8525,"line_start":313,"line_end":313,"column_start":2,"column_end":5}},{"value":"/ Panicking in WASM is done through the [`unreachable`](https://webassembly.github.io/spec/core/syntax/instructions.html#syntax-instr-control)","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":8527,"byte_end":8671,"line_start":314,"line_end":314,"column_start":2,"column_end":146}},{"value":"/ instruction which causes an unconditional trap and immediately aborts","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":8673,"byte_end":8746,"line_start":315,"line_end":315,"column_start":2,"column_end":75}},{"value":"/ the execution. It does not however allow for any diagnostics to be","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":8748,"byte_end":8818,"line_start":316,"line_end":316,"column_start":2,"column_end":72}},{"value":"/ passed through to the host, so while we do know that *something* went","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":8820,"byte_end":8893,"line_start":317,"line_end":317,"column_start":2,"column_end":75}},{"value":"/ wrong we don't have any direct indication of what *exactly* went wrong.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":8895,"byte_end":8970,"line_start":318,"line_end":318,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":8972,"byte_end":8975,"line_start":319,"line_end":319,"column_start":2,"column_end":5}},{"value":"/ As a workaround we use this method right before the execution is","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":8977,"byte_end":9045,"line_start":320,"line_end":320,"column_start":2,"column_end":70}},{"value":"/ actually aborted to pass an error message to the host so that it","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":9047,"byte_end":9115,"line_start":321,"line_end":321,"column_start":2,"column_end":70}},{"value":"/ can associate it with the next trap, and return that to the caller.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":9117,"byte_end":9188,"line_start":322,"line_end":322,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":9190,"byte_end":9193,"line_start":323,"line_end":323,"column_start":2,"column_end":5}},{"value":"/ A WASM trap should be triggered immediately after calling this method;","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":9195,"byte_end":9269,"line_start":324,"line_end":324,"column_start":2,"column_end":76}},{"value":"/ otherwise the error message might be associated with a completely","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":9271,"byte_end":9340,"line_start":325,"line_end":325,"column_start":2,"column_end":71}},{"value":"/ unrelated trap.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":9342,"byte_end":9361,"line_start":326,"line_end":326,"column_start":2,"column_end":21}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":9363,"byte_end":9366,"line_start":327,"line_end":327,"column_start":2,"column_end":5}},{"value":"/ It should only be called once, however calling it more than once","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":9368,"byte_end":9436,"line_start":328,"line_end":328,"column_start":2,"column_end":70}},{"value":"/ is harmless and will overwrite the previously set error message.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":9438,"byte_end":9506,"line_start":329,"line_end":329,"column_start":2,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":125},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":9610,"byte_end":9618,"line_start":334,"line_end":334,"column_start":10,"column_end":18},"name":"MemoryId","qualname":"::MemoryId","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Sandbox memory identifier.\n","sig":null,"attributes":[{"value":"/ Sandbox memory identifier.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":9570,"byte_end":9600,"line_start":333,"line_end":333,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":126},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":9688,"byte_end":9695,"line_start":337,"line_end":337,"column_start":11,"column_end":18},"name":"Sandbox","qualname":"::Sandbox","value":"Sandbox","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134}],"decl_id":null,"docs":" Something that provides access to the sandbox.\n","sig":null,"attributes":[{"value":"/ Something that provides access to the sandbox.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":9627,"byte_end":9677,"line_start":336,"line_end":336,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":9791,"byte_end":9801,"line_start":339,"line_end":339,"column_start":5,"column_end":15},"name":"memory_get","qualname":"::Sandbox::memory_get","value":"pub fn memory_get(&mut Self, MemoryId, WordSize, Pointer<u8>, WordSize)\n-> Result<u32>","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Get sandbox memory from the `memory_id` instance at `offset` into the given buffer.\n","sig":null,"attributes":[{"value":"/ Get sandbox memory from the `memory_id` instance at `offset` into the given buffer.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":9699,"byte_end":9786,"line_start":338,"line_end":338,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":9973,"byte_end":9983,"line_start":347,"line_end":347,"column_start":5,"column_end":15},"name":"memory_set","qualname":"::Sandbox::memory_set","value":"pub fn memory_set(&mut Self, MemoryId, WordSize, Pointer<u8>, WordSize)\n-> Result<u32>","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Set sandbox memory from the given value.\n","sig":null,"attributes":[{"value":"/ Set sandbox memory from the given value.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":9924,"byte_end":9968,"line_start":346,"line_end":346,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":10140,"byte_end":10155,"line_start":355,"line_end":355,"column_start":5,"column_end":20},"name":"memory_teardown","qualname":"::Sandbox::memory_teardown","value":"pub fn memory_teardown(&mut Self, MemoryId) -> Result<()>","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Delete a memory instance.\n","sig":null,"attributes":[{"value":"/ Delete a memory instance.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":10106,"byte_end":10135,"line_start":354,"line_end":354,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":10333,"byte_end":10343,"line_start":358,"line_end":358,"column_start":5,"column_end":15},"name":"memory_new","qualname":"::Sandbox::memory_new","value":"pub fn memory_new(&mut Self, u32, u32) -> Result<MemoryId>","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Create a new memory instance with the given `initial` size and the `maximum` size.\n The size is given in wasm pages.\n","sig":null,"attributes":[{"value":"/ Create a new memory instance with the given `initial` size and the `maximum` size.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":10204,"byte_end":10290,"line_start":356,"line_end":356,"column_start":2,"column_end":88}},{"value":"/ The size is given in wasm pages.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":10292,"byte_end":10328,"line_start":357,"line_end":357,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":10452,"byte_end":10458,"line_start":360,"line_end":360,"column_start":5,"column_end":11},"name":"invoke","qualname":"::Sandbox::invoke","value":"pub fn invoke(&mut Self, u32, &str, &[u8], Pointer<u8>, WordSize, u32)\n-> Result<u32>","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Invoke an exported function by a name.\n","sig":null,"attributes":[{"value":"/ Invoke an exported function by a name.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":10405,"byte_end":10447,"line_start":359,"line_end":359,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":10653,"byte_end":10670,"line_start":370,"line_end":370,"column_start":5,"column_end":22},"name":"instance_teardown","qualname":"::Sandbox::instance_teardown","value":"pub fn instance_teardown(&mut Self, u32) -> Result<()>","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Delete a sandbox instance.\n","sig":null,"attributes":[{"value":"/ Delete a sandbox instance.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":10618,"byte_end":10648,"line_start":369,"line_end":369,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":10755,"byte_end":10767,"line_start":372,"line_end":372,"column_start":5,"column_end":17},"name":"instance_new","qualname":"::Sandbox::instance_new","value":"pub fn instance_new(&mut Self, u32, &[u8], &[u8], u32) -> Result<u32>","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Create a new sandbox instance.\n","sig":null,"attributes":[{"value":"/ Create a new sandbox instance.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":10716,"byte_end":10750,"line_start":371,"line_end":371,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":11087,"byte_end":11101,"line_start":384,"line_end":384,"column_start":5,"column_end":19},"name":"get_global_val","qualname":"::Sandbox::get_global_val","value":"pub fn get_global_val(&Self, u32, &str) -> Result<Option<Value>>","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Get the value from a global with the given `name`. The sandbox is determined by the\n given `instance_idx` instance.","sig":null,"attributes":[{"value":"/ Get the value from a global with the given `name`. The sandbox is determined by the","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":10880,"byte_end":10967,"line_start":380,"line_end":380,"column_start":2,"column_end":89}},{"value":"/ given `instance_idx` instance.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":10969,"byte_end":11003,"line_start":381,"line_end":381,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":11005,"byte_end":11008,"line_start":382,"line_end":382,"column_start":2,"column_end":5}},{"value":"/ Returns `Some(_)` when the requested global variable could be found.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":11010,"byte_end":11082,"line_start":383,"line_end":383,"column_start":2,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":135},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":12399,"byte_end":12412,"line_start":419,"line_end":419,"column_start":11,"column_end":24},"name":"HostFunctions","qualname":"::HostFunctions","value":"HostFunctions: 'static + Send + Sync","parent":null,"children":[{"krate":0,"index":136}],"decl_id":null,"docs":" Something that provides implementations for host functions.\n","sig":null,"attributes":[{"value":"/ Something that provides implementations for host functions.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":12325,"byte_end":12388,"line_start":418,"line_end":418,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":12491,"byte_end":12505,"line_start":421,"line_end":421,"column_start":5,"column_end":19},"name":"host_functions","qualname":"::HostFunctions::host_functions","value":"pub fn host_functions() -> Vec<&'static dyn Function>","parent":{"krate":0,"index":135},"children":[],"decl_id":null,"docs":" Returns the host functions `Self` provides.\n","sig":null,"attributes":[{"value":"/ Returns the host functions `Self` provides.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":12439,"byte_end":12486,"line_start":420,"line_end":420,"column_start":2,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":137},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":13395,"byte_end":13416,"line_start":456,"line_end":456,"column_start":12,"column_end":33},"name":"ExtendedHostFunctions","qualname":"::ExtendedHostFunctions","value":"ExtendedHostFunctions {  }","parent":null,"children":[{"krate":0,"index":140}],"decl_id":null,"docs":" A wrapper which merges two sets of host functions, and allows the second set to override\n the host functions from the first set.\n","sig":null,"attributes":[{"value":"/ A wrapper which merges two sets of host functions, and allows the second set to override","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":13248,"byte_end":13340,"line_start":454,"line_end":454,"column_start":1,"column_end":93}},{"value":"/ the host functions from the first set.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":13341,"byte_end":13383,"line_start":455,"line_end":455,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":147},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":16752,"byte_end":16758,"line_start":573,"line_end":573,"column_start":11,"column_end":17},"name":"WasmTy","qualname":"::WasmTy","value":"WasmTy: private::Sealed","parent":null,"children":[],"decl_id":null,"docs":" A trait for types directly usable at the WASM FFI boundary without any conversion at all.","sig":null,"attributes":[{"value":"/ A trait for types directly usable at the WASM FFI boundary without any conversion at all.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":16521,"byte_end":16614,"line_start":569,"line_end":569,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":16615,"byte_end":16618,"line_start":570,"line_end":570,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and should not be implemented downstream.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":16619,"byte_end":16685,"line_start":571,"line_end":571,"column_start":1,"column_end":67}},{"value":"cfg(not(all(feature = \"std\", feature = \"wasmtime\")))","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":16686,"byte_end":16741,"line_start":572,"line_end":572,"column_start":1,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":152},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":16951,"byte_end":16960,"line_start":581,"line_end":581,"column_start":11,"column_end":20},"name":"IntoValue","qualname":"::IntoValue","value":"IntoValue","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"decl_id":null,"docs":" Something that can be converted into a wasm compatible `Value`.\n","sig":null,"attributes":[{"value":"/ Something that can be converted into a wasm compatible `Value`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":16873,"byte_end":16940,"line_start":580,"line_end":580,"column_start":1,"column_end":68}}]},{"kind":"Const","id":{"krate":0,"index":153},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":17006,"byte_end":17016,"line_start":583,"line_end":583,"column_start":8,"column_end":18},"name":"VALUE_TYPE","qualname":"::IntoValue::VALUE_TYPE","value":"ValueType","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" The type of the value in wasm.\n","sig":null,"attributes":[{"value":"/ The type of the value in wasm.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":16964,"byte_end":16998,"line_start":582,"line_end":582,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":17075,"byte_end":17085,"line_start":586,"line_end":586,"column_start":5,"column_end":15},"name":"into_value","qualname":"::IntoValue::into_value","value":"pub fn into_value(Self) -> Value","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":" Convert `self` into a wasm `Value`.\n","sig":null,"attributes":[{"value":"/ Convert `self` into a wasm `Value`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":17031,"byte_end":17070,"line_start":585,"line_end":585,"column_start":2,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":155},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":17174,"byte_end":17186,"line_start":590,"line_end":590,"column_start":11,"column_end":23},"name":"TryFromValue","qualname":"::TryFromValue","value":"TryFromValue: Sized","parent":null,"children":[{"krate":0,"index":156}],"decl_id":null,"docs":" Something that can may be created from a wasm `Value`.\n","sig":null,"attributes":[{"value":"/ Something that can may be created from a wasm `Value`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":17105,"byte_end":17163,"line_start":589,"line_end":589,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":17251,"byte_end":17265,"line_start":592,"line_end":592,"column_start":5,"column_end":19},"name":"try_from_value","qualname":"::TryFromValue::try_from_value","value":"pub fn try_from_value(Value) -> Option<Self>","parent":{"krate":0,"index":155},"children":[],"decl_id":null,"docs":" Try to convert the given `Value` into `Self`.\n","sig":null,"attributes":[{"value":"/ Try to convert the given `Value` into `Self`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":17197,"byte_end":17246,"line_start":591,"line_end":591,"column_start":2,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":158},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":18007,"byte_end":18021,"line_start":631,"line_end":631,"column_start":11,"column_end":25},"name":"WritePrimitive","qualname":"::WritePrimitive","value":"WritePrimitive<T: PointerType>","parent":null,"children":[{"krate":0,"index":160}],"decl_id":null,"docs":" Something that can write a primitive to wasm memory location.\n","sig":null,"attributes":[{"value":"/ Something that can write a primitive to wasm memory location.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":17931,"byte_end":17996,"line_start":630,"line_end":630,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":18111,"byte_end":18126,"line_start":633,"line_end":633,"column_start":5,"column_end":20},"name":"write_primitive","qualname":"::WritePrimitive::write_primitive","value":"pub fn write_primitive(&mut Self, Pointer<T>, T) -> Result<()>","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Write the given value `t` to the given memory location `ptr`.\n","sig":null,"attributes":[{"value":"/ Write the given value `t` to the given memory location `ptr`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":18041,"byte_end":18106,"line_start":632,"line_end":632,"column_start":2,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":165},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":18656,"byte_end":18669,"line_start":651,"line_end":651,"column_start":11,"column_end":24},"name":"ReadPrimitive","qualname":"::ReadPrimitive","value":"ReadPrimitive<T: PointerType>","parent":null,"children":[{"krate":0,"index":167}],"decl_id":null,"docs":" Something that can read a primitive from a wasm memory location.\n","sig":null,"attributes":[{"value":"/ Something that can read a primitive from a wasm memory location.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":18577,"byte_end":18645,"line_start":650,"line_end":650,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":18752,"byte_end":18766,"line_start":653,"line_end":653,"column_start":5,"column_end":19},"name":"read_primitive","qualname":"::ReadPrimitive::read_primitive","value":"pub fn read_primitive(&Self, Pointer<T>) -> Result<T>","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" Read a primitive from the given memory location `ptr`.\n","sig":null,"attributes":[{"value":"/ Read a primitive from the given memory location `ptr`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":18689,"byte_end":18747,"line_start":652,"line_end":652,"column_start":2,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":835},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":19509,"byte_end":19513,"line_start":678,"line_end":678,"column_start":2,"column_end":6},"name":"Unit","qualname":"::ReturnValue::Unit","value":"ReturnValue::Unit","parent":{"krate":0,"index":834},"children":[],"decl_id":null,"docs":" For returning nothing.\n","sig":null,"attributes":[{"value":"/ For returning nothing.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":19481,"byte_end":19507,"line_start":677,"line_end":677,"column_start":2,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":837},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":19556,"byte_end":19561,"line_start":680,"line_end":680,"column_start":2,"column_end":7},"name":"Value","qualname":"::ReturnValue::Value","value":"ReturnValue::Value(Value)","parent":{"krate":0,"index":834},"children":[],"decl_id":null,"docs":" For returning some concrete value.\n","sig":null,"attributes":[{"value":"/ For returning some concrete value.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":19516,"byte_end":19554,"line_start":679,"line_end":679,"column_start":2,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":834},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":19466,"byte_end":19477,"line_start":676,"line_end":676,"column_start":10,"column_end":21},"name":"ReturnValue","qualname":"::ReturnValue","value":"pub enum ReturnValue { Unit, Value(Value), }","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":837}],"decl_id":null,"docs":" Typed value that can be returned from a function.","sig":null,"attributes":[{"value":"/ Typed value that can be returned from a function.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":19250,"byte_end":19303,"line_start":672,"line_end":672,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":19304,"byte_end":19307,"line_start":673,"line_end":673,"column_start":1,"column_end":4}},{"value":"/ Basically a `TypedValue` plus `Unit`, for functions which return nothing.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":19308,"byte_end":19385,"line_start":674,"line_end":674,"column_start":1,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":177},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":19973,"byte_end":19989,"line_start":696,"line_end":696,"column_start":12,"column_end":28},"name":"ENCODED_MAX_SIZE","qualname":"::ReturnValue::ENCODED_MAX_SIZE","value":"usize","parent":{"krate":0,"index":176},"children":[],"decl_id":null,"docs":" Maximum number of bytes `ReturnValue` might occupy when serialized with `SCALE`.","sig":null,"attributes":[{"value":"/ Maximum number of bytes `ReturnValue` might occupy when serialized with `SCALE`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":19694,"byte_end":19778,"line_start":690,"line_end":690,"column_start":2,"column_end":86}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":19780,"byte_end":19783,"line_start":691,"line_end":691,"column_start":2,"column_end":5}},{"value":"/ Breakdown:","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":19785,"byte_end":19799,"line_start":692,"line_end":692,"column_start":2,"column_end":16}},{"value":"/  1 byte for encoding unit/value variant","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":19801,"byte_end":19844,"line_start":693,"line_end":693,"column_start":2,"column_end":45}},{"value":"/  1 byte for encoding value type","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":19846,"byte_end":19881,"line_start":694,"line_end":694,"column_start":2,"column_end":37}},{"value":"/  8 bytes for encoding the biggest value types available in wasm: f64, i64.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":19883,"byte_end":19961,"line_start":695,"line_end":695,"column_start":2,"column_end":80}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/wasmi_impl.rs","byte_start":21415,"byte_end":21427,"line_start":22,"line_end":22,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/wasmi_impl.rs","byte_start":21690,"byte_end":21695,"line_start":33,"line_end":33,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/wasmi_impl.rs","byte_start":22025,"byte_end":22034,"line_start":44,"line_end":44,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/wasmi_impl.rs","byte_start":22260,"byte_end":22269,"line_start":55,"line_end":55,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/wasmi_impl.rs","byte_start":22530,"byte_end":22539,"line_start":66,"line_end":66,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/wasmi_impl.rs","byte_start":22751,"byte_end":22760,"line_start":73,"line_end":73,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":2060,"byte_end":2069,"line_start":76,"line_end":76,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":2800,"byte_end":2805,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":4018,"byte_end":4025,"line_start":161,"line_end":161,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":4826,"byte_end":4833,"line_start":191,"line_end":191,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":5247,"byte_end":5254,"line_start":215,"line_end":215,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":5411,"byte_end":5418,"line_start":222,"line_end":222,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":5911,"byte_end":5920,"line_start":243,"line_end":243,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":6576,"byte_end":6577,"line_start":262,"line_end":262,"column_start":59,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":13515,"byte_end":13536,"line_start":460,"line_end":460,"column_start":39,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":19594,"byte_end":19605,"line_start":683,"line_end":683,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":19679,"byte_end":19690,"line_start":689,"line_end":689,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/wasmi_impl.rs","byte_start":21415,"byte_end":21427,"line_start":22,"line_end":22,"column_start":29,"column_end":41},"kind":{"Impl":{"id":0}},"from":{"krate":26,"index":3090},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/wasmi_impl.rs","byte_start":21690,"byte_end":21695,"line_start":33,"line_end":33,"column_start":36,"column_end":41},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":198},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/wasmi_impl.rs","byte_start":22025,"byte_end":22034,"line_start":44,"line_end":44,"column_start":33,"column_end":42},"kind":{"Impl":{"id":2}},"from":{"krate":26,"index":3065},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/wasmi_impl.rs","byte_start":22260,"byte_end":22269,"line_start":55,"line_end":55,"column_start":33,"column_end":42},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":178},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/wasmi_impl.rs","byte_start":22530,"byte_end":22539,"line_start":66,"line_end":66,"column_start":33,"column_end":42},"kind":{"Impl":{"id":4}},"from":{"krate":26,"index":3051},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/wasmi_impl.rs","byte_start":22751,"byte_end":22760,"line_start":73,"line_end":73,"column_start":34,"column_end":43},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":253},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":2060,"byte_end":2069,"line_start":76,"line_end":76,"column_start":39,"column_end":48},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":178},"to":{"krate":2,"index":2937}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":2800,"byte_end":2805,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":3596,"byte_end":3601,"line_start":144,"line_end":144,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":3613,"byte_end":3619,"line_start":144,"line_end":144,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":61},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":4018,"byte_end":4025,"line_start":161,"line_end":161,"column_start":22,"column_end":29},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":4826,"byte_end":4833,"line_start":191,"line_end":191,"column_start":36,"column_end":43},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":230},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":5247,"byte_end":5254,"line_start":215,"line_end":215,"column_start":36,"column_end":43},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":230},"to":{"krate":0,"index":152}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":5411,"byte_end":5418,"line_start":222,"line_end":222,"column_start":39,"column_end":46},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":230},"to":{"krate":0,"index":155}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":5911,"byte_end":5920,"line_start":243,"line_end":243,"column_start":6,"column_end":15},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":6477,"byte_end":6490,"line_start":260,"line_end":260,"column_start":43,"column_end":56},"kind":"SuperTrait","from":{"krate":2,"index":8641},"to":{"krate":0,"index":108}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":6576,"byte_end":6577,"line_start":262,"line_end":262,"column_start":59,"column_end":60},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":110},"to":{"krate":0,"index":108}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":6880,"byte_end":6898,"line_start":271,"line_end":271,"column_start":21,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":108},"to":{"krate":0,"index":111}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":6901,"byte_end":6905,"line_start":271,"line_end":271,"column_start":42,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":111}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":6908,"byte_end":6912,"line_start":271,"line_end":271,"column_start":49,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":3036},"to":{"krate":0,"index":111}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":12424,"byte_end":12428,"line_start":419,"line_end":419,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":135}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":12431,"byte_end":12435,"line_start":419,"line_end":419,"column_start":43,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":3036},"to":{"krate":0,"index":135}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":13515,"byte_end":13536,"line_start":460,"line_end":460,"column_start":39,"column_end":60},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":137},"to":{"krate":0,"index":135}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":16769,"byte_end":16775,"line_start":573,"line_end":573,"column_start":28,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":61},"to":{"krate":0,"index":147}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":17188,"byte_end":17193,"line_start":590,"line_end":590,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":155}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":19594,"byte_end":19605,"line_start":683,"line_end":683,"column_start":22,"column_end":33},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":834},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/wasm-interface/src/lib.rs","byte_start":19679,"byte_end":19690,"line_start":689,"line_end":689,"column_start":6,"column_end":17},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":834},"to":{"krate":4294967295,"index":4294967295}}]}