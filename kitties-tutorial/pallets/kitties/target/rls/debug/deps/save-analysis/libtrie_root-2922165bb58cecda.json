{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0","program":"/Users/myunghacho/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","trie_root","--edition=2018","/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=2922165bb58cecda","-C","extra-filename=-2922165bb58cecda","--out-dir","/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps","-L","dependency=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps","--extern","hash_db=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libhash_db-8503ebc18b1889d6.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/myunghacho/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libtrie_root-2922165bb58cecda.rmeta"},"prelude":{"crate_id":{"name":"trie_root","disambiguator":[16305582103997779709,0]},"crate_root":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src","external_crates":[{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9602236740471282608,0]}},{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[740641686899810413,0]}},{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1452182208797737205,0]}},{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4474361821197688885,0]}},{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11146593528668201643,0]}},{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7026141623111916022,0]}},{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11096207044195207047,0]}},{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[16946906222655600942,0]}},{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9670608472714711915,0]}},{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3075685271658393714,0]}},{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[7553277853646633394,0]}},{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5387634511767759158,0]}},{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10401181353817371068,0]}},{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14296571408058143832,0]}},{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","num":18,"id":{"name":"hash_db","disambiguator":[3035980359055305477,0]}}],"span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":603,"byte_end":11461,"line_start":15,"line_end":375,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":15},"span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":1094,"byte_end":1100,"line_start":41,"line_end":41,"column_start":18,"column_end":24},"alias_span":null,"name":"Hasher","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":603,"byte_end":11461,"line_start":15,"line_end":375,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":103},{"krate":0,"index":111},{"krate":0,"index":21},{"krate":0,"index":25},{"krate":0,"index":37},{"krate":0,"index":41},{"krate":0,"index":47},{"krate":0,"index":55},{"krate":0,"index":61},{"krate":0,"index":67},{"krate":0,"index":75},{"krate":0,"index":81},{"krate":0,"index":88},{"krate":0,"index":98}],"decl_id":null,"docs":" Generates trie root.","sig":null,"attributes":[{"value":"/ Generates trie root.","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":603,"byte_end":627,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":628,"byte_end":631,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This module should be used to generate trie root hash.","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":632,"byte_end":690,"line_start":17,"line_end":17,"column_start":1,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":105},"span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":1225,"byte_end":1231,"line_start":47,"line_end":47,"column_start":2,"column_end":8},"name":"Inline","qualname":"::Value::Inline","value":"Value::Inline(&'a [u8])","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Contains a full value.\n","sig":null,"attributes":[{"value":"/ Contains a full value.","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":1197,"byte_end":1223,"line_start":46,"line_end":46,"column_start":2,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":108},"span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":1275,"byte_end":1279,"line_start":49,"line_end":49,"column_start":2,"column_end":6},"name":"Node","qualname":"::Value::Node","value":"Value::Node(Vec<u8>)","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Contains hash of a value.\n","sig":null,"attributes":[{"value":"/ Contains hash of a value.","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":1244,"byte_end":1273,"line_start":48,"line_end":48,"column_start":2,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":103},"span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":1184,"byte_end":1189,"line_start":45,"line_end":45,"column_start":10,"column_end":15},"name":"Value","qualname":"::Value","value":"pub enum Value<'a> { Inline(&'a [u8]), Node(Vec<u8>), }","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":108}],"decl_id":null,"docs":" Different possible value to use for node encoding.\n","sig":null,"attributes":[{"value":"/ Different possible value to use for node encoding.","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":1103,"byte_end":1157,"line_start":43,"line_end":43,"column_start":1,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":25},"span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":1684,"byte_end":1694,"line_start":67,"line_end":67,"column_start":11,"column_end":21},"name":"TrieStream","qualname":"::TrieStream","value":"TrieStream","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":36}],"decl_id":null,"docs":" Byte-stream oriented trait for constructing closed-form tries.\n","sig":null,"attributes":[{"value":"/ Byte-stream oriented trait for constructing closed-form tries.","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":1607,"byte_end":1673,"line_start":66,"line_end":66,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":1735,"byte_end":1738,"line_start":69,"line_end":69,"column_start":5,"column_end":8},"name":"new","qualname":"::TrieStream::new","value":"pub fn new() -> Self","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Construct a new `TrieStream`\n","sig":null,"attributes":[{"value":"/ Construct a new `TrieStream`","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":1698,"byte_end":1730,"line_start":68,"line_end":68,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":1780,"byte_end":1797,"line_start":71,"line_end":71,"column_start":5,"column_end":22},"name":"append_empty_data","qualname":"::TrieStream::append_empty_data","value":"pub fn append_empty_data(&mut Self)","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Append an Empty node\n","sig":null,"attributes":[{"value":"/ Append an Empty node","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":1751,"byte_end":1775,"line_start":70,"line_end":70,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":1952,"byte_end":1964,"line_start":74,"line_end":74,"column_start":5,"column_end":17},"name":"begin_branch","qualname":"::TrieStream::begin_branch","value":"pub fn begin_branch<impl Iterator<Item = bool>: Iterator<Item =\nbool>>(&mut Self, Option<&[u8]>, Option<Value>, impl Iterator<Item = bool>)","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Start a new Branch node, possibly with a value; takes a list indicating\n which slots in the Branch node has further child nodes.\n","sig":null,"attributes":[{"value":"/ Start a new Branch node, possibly with a value; takes a list indicating","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":1811,"byte_end":1886,"line_start":72,"line_end":72,"column_start":2,"column_end":77}},{"value":"/ which slots in the Branch node has further child nodes.","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":1888,"byte_end":1947,"line_start":73,"line_end":73,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":2132,"byte_end":2150,"line_start":81,"line_end":81,"column_start":5,"column_end":23},"name":"append_empty_child","qualname":"::TrieStream::append_empty_child","value":"pub fn append_empty_child(&mut Self)","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Append an empty child node. Optional.\n","sig":null,"attributes":[{"value":"/ Append an empty child node. Optional.","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":2086,"byte_end":2127,"line_start":80,"line_end":80,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":2279,"byte_end":2289,"line_start":84,"line_end":84,"column_start":5,"column_end":15},"name":"end_branch","qualname":"::TrieStream::end_branch","value":"pub fn end_branch(&mut Self, Option<Value>)","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Wrap up a Branch node portion of a `TrieStream` and append the value\n stored on the Branch (if any).\n","sig":null,"attributes":[{"value":"/ Wrap up a Branch node portion of a `TrieStream` and append the value","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":2166,"byte_end":2238,"line_start":82,"line_end":82,"column_start":2,"column_end":74}},{"value":"/ stored on the Branch (if any).","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":2240,"byte_end":2274,"line_start":83,"line_end":83,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":2355,"byte_end":2366,"line_start":86,"line_end":86,"column_start":5,"column_end":16},"name":"append_leaf","qualname":"::TrieStream::append_leaf","value":"pub fn append_leaf(&mut Self, &[u8], Value)","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Append a Leaf node\n","sig":null,"attributes":[{"value":"/ Append a Leaf node","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":2328,"byte_end":2350,"line_start":85,"line_end":85,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":2439,"byte_end":2455,"line_start":88,"line_end":88,"column_start":5,"column_end":21},"name":"append_extension","qualname":"::TrieStream::append_extension","value":"pub fn append_extension(&mut Self, &[u8])","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Append an Extension node\n","sig":null,"attributes":[{"value":"/ Append an Extension node","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":2406,"byte_end":2434,"line_start":87,"line_end":87,"column_start":2,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":2528,"byte_end":2544,"line_start":90,"line_end":90,"column_start":5,"column_end":21},"name":"append_substream","qualname":"::TrieStream::append_substream","value":"pub fn append_substream<H: Hasher>(&mut Self, Self)","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Append a Branch of Extension substream\n","sig":null,"attributes":[{"value":"/ Append a Branch of Extension substream","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":2481,"byte_end":2523,"line_start":89,"line_end":89,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":2645,"byte_end":2648,"line_start":92,"line_end":92,"column_start":5,"column_end":8},"name":"out","qualname":"::TrieStream::out","value":"pub fn out(Self) -> Vec<u8>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Return the finished `TrieStream` as a vector of bytes.\n","sig":null,"attributes":[{"value":"/ Return the finished `TrieStream` as a vector of bytes.","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":2582,"byte_end":2640,"line_start":91,"line_end":91,"column_start":2,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":41},"span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":3392,"byte_end":3401,"line_start":119,"line_end":119,"column_start":8,"column_end":17},"name":"trie_root","qualname":"::trie_root","value":"pub fn trie_root<H, S, I, A, B>(I, Option<u32>) -> H::Out where\nI: IntoIterator<Item = (A, B)>, A: AsRef<[u8]> + Ord, B: AsRef<[u8]>,\nH: Hasher, S: TrieStream","parent":null,"children":[],"decl_id":null,"docs":" Generates a trie root hash for a vector of key-value tuples","sig":null,"attributes":[{"value":"/ Generates a trie root hash for a vector of key-value tuples","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":2865,"byte_end":2928,"line_start":102,"line_end":102,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":2929,"byte_end":2932,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":2933,"byte_end":2946,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/ use hex_literal::hex;","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":2947,"byte_end":2972,"line_start":105,"line_end":105,"column_start":1,"column_end":26}},{"value":"/ use trie_root::trie_root;","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":2973,"byte_end":3002,"line_start":106,"line_end":106,"column_start":1,"column_end":30}},{"value":"/ use reference_trie::ReferenceTrieStream;","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":3003,"byte_end":3047,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/ use keccak_hasher::KeccakHasher;","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":3048,"byte_end":3084,"line_start":108,"line_end":108,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":3085,"byte_end":3088,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ let v = vec![","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":3089,"byte_end":3106,"line_start":110,"line_end":110,"column_start":1,"column_end":18}},{"value":"/     (\"doe\", \"reindeer\"),","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":3107,"byte_end":3135,"line_start":111,"line_end":111,"column_start":1,"column_end":29}},{"value":"/     (\"dog\", \"puppy\"),","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":3136,"byte_end":3161,"line_start":112,"line_end":112,"column_start":1,"column_end":26}},{"value":"/     (\"dogglesworth\", \"cat\"),","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":3162,"byte_end":3194,"line_start":113,"line_end":113,"column_start":1,"column_end":33}},{"value":"/ ];","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":3195,"byte_end":3201,"line_start":114,"line_end":114,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":3202,"byte_end":3205,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ let root = hex![\"0807d5393ae7f349481063ebb5dbaf6bda58db282a385ca97f37dccba717cb79\"];","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":3206,"byte_end":3294,"line_start":116,"line_end":116,"column_start":1,"column_end":89}},{"value":"/ assert_eq!(trie_root::<KeccakHasher, ReferenceTrieStream, _, _, _>(v), root);","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":3295,"byte_end":3376,"line_start":117,"line_end":117,"column_start":1,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":3377,"byte_end":3384,"line_start":118,"line_end":118,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":55},"span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":4691,"byte_end":4713,"line_start":165,"line_end":165,"column_start":8,"column_end":30},"name":"trie_root_no_extension","qualname":"::trie_root_no_extension","value":"pub fn trie_root_no_extension<H, S, I, A, B>(I, Option<u32>) -> H::Out where\nI: IntoIterator<Item = (A, B)>, A: AsRef<[u8]> + Ord, B: AsRef<[u8]>,\nH: Hasher, S: TrieStream","parent":null,"children":[],"decl_id":null,"docs":" Variant of `trie_root` for patricia trie without extension node.\n See [`trie_root`].\n","sig":null,"attributes":[{"value":"/ Variant of `trie_root` for patricia trie without extension node.","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":4592,"byte_end":4660,"line_start":163,"line_end":163,"column_start":1,"column_end":69}},{"value":"/ See [`trie_root`].","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":4661,"byte_end":4683,"line_start":164,"line_end":164,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":61},"span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":5127,"byte_end":5140,"line_start":179,"line_end":179,"column_start":8,"column_end":21},"name":"unhashed_trie","qualname":"::unhashed_trie","value":"pub fn unhashed_trie<H, S, I, A, B>(I, Option<u32>) -> Vec<u8> where\nI: IntoIterator<Item = (A, B)>, A: AsRef<[u8]> + Ord, B: AsRef<[u8]>,\nH: Hasher, S: TrieStream","parent":null,"children":[],"decl_id":null,"docs":" Method similar to `trie_root` but returning the root encoded\n node instead of its hash.\n Mainly use for testing or debugging.\n","sig":null,"attributes":[{"value":"/ Method similar to `trie_root` but returning the root encoded","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":4984,"byte_end":5048,"line_start":176,"line_end":176,"column_start":1,"column_end":65}},{"value":"/ node instead of its hash.","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":5049,"byte_end":5078,"line_start":177,"line_end":177,"column_start":1,"column_end":30}},{"value":"/ Mainly use for testing or debugging.","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":5079,"byte_end":5119,"line_start":178,"line_end":178,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":75},"span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":6415,"byte_end":6441,"line_start":224,"line_end":224,"column_start":8,"column_end":34},"name":"unhashed_trie_no_extension","qualname":"::unhashed_trie_no_extension","value":"pub fn unhashed_trie_no_extension<H, S, I, A, B>(I, Option<u32>) -> Vec<u8>\nwhere I: IntoIterator<Item = (A, B)>, A: AsRef<[u8]> + Ord, B: AsRef<[u8]>,\nH: Hasher, S: TrieStream","parent":null,"children":[],"decl_id":null,"docs":" Variant of `unhashed_trie` for patricia trie without extension node.\n See [`unhashed_trie`].\n","sig":null,"attributes":[{"value":"/ Variant of `unhashed_trie` for patricia trie without extension node.","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":6308,"byte_end":6380,"line_start":222,"line_end":222,"column_start":1,"column_end":73}},{"value":"/ See [`unhashed_trie`].","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":6381,"byte_end":6407,"line_start":223,"line_end":223,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":81},"span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":7223,"byte_end":7236,"line_start":251,"line_end":251,"column_start":8,"column_end":21},"name":"sec_trie_root","qualname":"::sec_trie_root","value":"pub fn sec_trie_root<H, S, I, A, B>(I, Option<u32>) -> H::Out where\nI: IntoIterator<Item = (A, B)>, A: AsRef<[u8]>, B: AsRef<[u8]>, H: Hasher,\nH::Out: Ord, S: TrieStream","parent":null,"children":[],"decl_id":null,"docs":" Generates a key-hashed (secure) trie root hash for a vector of key-value tuples.","sig":null,"attributes":[{"value":"/ Generates a key-hashed (secure) trie root hash for a vector of key-value tuples.","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":6676,"byte_end":6760,"line_start":234,"line_end":234,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":6761,"byte_end":6764,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":6765,"byte_end":6778,"line_start":236,"line_end":236,"column_start":1,"column_end":14}},{"value":"/ use hex_literal::hex;","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":6779,"byte_end":6804,"line_start":237,"line_end":237,"column_start":1,"column_end":26}},{"value":"/ use trie_root::sec_trie_root;","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":6805,"byte_end":6838,"line_start":238,"line_end":238,"column_start":1,"column_end":34}},{"value":"/ use keccak_hasher::KeccakHasher;","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":6839,"byte_end":6875,"line_start":239,"line_end":239,"column_start":1,"column_end":37}},{"value":"/ use reference_trie::ReferenceTrieStream;","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":6876,"byte_end":6920,"line_start":240,"line_end":240,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":6921,"byte_end":6924,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ let v = vec![","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":6925,"byte_end":6942,"line_start":242,"line_end":242,"column_start":1,"column_end":18}},{"value":"/ \t(\"doe\", \"reindeer\"),","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":6943,"byte_end":6968,"line_start":243,"line_end":243,"column_start":1,"column_end":26}},{"value":"/ \t(\"dog\", \"puppy\"),","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":6969,"byte_end":6991,"line_start":244,"line_end":244,"column_start":1,"column_end":23}},{"value":"/ \t(\"dogglesworth\", \"cat\"),","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":6992,"byte_end":7021,"line_start":245,"line_end":245,"column_start":1,"column_end":30}},{"value":"/ ];","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":7022,"byte_end":7028,"line_start":246,"line_end":246,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":7029,"byte_end":7032,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ let root = hex![\"d6e02b2bd48aa04fd2ad87cfac1144a29ca7f7dc60f4526c7b7040763abe3d43\"];","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":7033,"byte_end":7121,"line_start":248,"line_end":248,"column_start":1,"column_end":89}},{"value":"/ assert_eq!(sec_trie_root::<KeccakHasher, ReferenceTrieStream, _, _, _>(v), root);","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":7122,"byte_end":7207,"line_start":249,"line_end":249,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":7208,"byte_end":7215,"line_start":250,"line_end":250,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":1302,"byte_end":1307,"line_start":52,"line_end":52,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/myunghacho/.cargo/registry/src/github.com-1ecc6299db9ec823/trie-root-0.17.0/src/lib.rs","byte_start":1302,"byte_end":1307,"line_start":52,"line_end":52,"column_start":10,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":103},"to":{"krate":4294967295,"index":4294967295}}]}