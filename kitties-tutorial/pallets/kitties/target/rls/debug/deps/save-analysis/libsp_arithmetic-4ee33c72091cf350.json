{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic","program":"/Users/myunghacho/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","sp_arithmetic","--edition=2021","/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"serde\"","--cfg","feature=\"std\"","-C","metadata=4ee33c72091cf350","-C","extra-filename=-4ee33c72091cf350","--out-dir","/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps","-L","dependency=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps","--extern","integer_sqrt=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libinteger_sqrt-262a837e3a782e27.rmeta","--extern","num_traits=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libnum_traits-f639dc1d5b076ff1.rmeta","--extern","codec=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libparity_scale_codec-48d05d2fb449a544.rmeta","--extern","scale_info=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libscale_info-66e73dd6b9eeddb1.rmeta","--extern","serde=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libserde-6f8217b9748a5cc4.rmeta","--extern","sp_debug_derive=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libsp_debug_derive-6d4b23a9ffc227f9.dylib","--extern","sp_std=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libsp_std-caa0d9a9cb9fa1d4.rmeta","--extern","static_assertions=/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libstatic_assertions-5a20571a8b4858c6.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/myunghacho/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/myunghacho/Desktop/substrate-kitties-workshop/kitties-tutorial/pallets/kitties/target/rls/debug/deps/libsp_arithmetic-4ee33c72091cf350.rmeta"},"prelude":{"crate_id":{"name":"sp_arithmetic","disambiguator":[16156418643593806731,0]},"crate_root":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src","external_crates":[{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9602236740471282608,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","num":2,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[740641686899810413,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1452182208797737205,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4474361821197688885,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11146593528668201643,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7026141623111916022,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11096207044195207047,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[16946906222655600942,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9670608472714711915,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3075685271658393714,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[7553277853646633394,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5387634511767759158,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10401181353817371068,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14296571408058143832,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","num":18,"id":{"name":"parity_scale_codec","disambiguator":[11025389664727138833,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","num":19,"id":{"name":"parity_scale_codec_derive","disambiguator":[13567950630339581430,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","num":20,"id":{"name":"arrayvec","disambiguator":[4765445384651765470,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","num":21,"id":{"name":"byte_slice_cast","disambiguator":[1450742829568187162,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","num":22,"id":{"name":"impl_trait_for_tuples","disambiguator":[1199501065919261664,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","num":23,"id":{"name":"serde","disambiguator":[9544137782352177236,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","num":24,"id":{"name":"serde_derive","disambiguator":[17621009518653333156,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","num":25,"id":{"name":"num_traits","disambiguator":[4458903683416238728,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","num":26,"id":{"name":"sp_std","disambiguator":[3836989623224051638,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","num":27,"id":{"name":"sp_debug_derive","disambiguator":[501895185402007615,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","num":28,"id":{"name":"integer_sqrt","disambiguator":[1599833354932985529,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","num":29,"id":{"name":"static_assertions","disambiguator":[10004466869080491857,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","num":30,"id":{"name":"scale_info","disambiguator":[15088973142150946651,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","num":31,"id":{"name":"cfg_if","disambiguator":[13037983282529128945,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","num":32,"id":{"name":"derive_more","disambiguator":[8707368253099479613,0]}},{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","num":33,"id":{"name":"scale_info_derive","disambiguator":[7230802250740732360,0]}}],"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":686,"byte_end":15358,"line_start":18,"line_end":460,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":28,"index":4},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":152771,"byte_end":152788,"line_start":21,"line_end":21,"column_start":23,"column_end":40},"alias_span":null,"name":"IntegerSquareRoot","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":25,"index":863},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":152813,"byte_end":152824,"line_start":23,"line_end":23,"column_start":2,"column_end":13},"alias_span":null,"name":"checked_pow","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":25,"index":237},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":152826,"byte_end":152833,"line_start":23,"line_end":23,"column_start":15,"column_end":22},"alias_span":null,"name":"Bounded","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":25,"index":621},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":152835,"byte_end":152845,"line_start":23,"line_end":23,"column_start":24,"column_end":34},"alias_span":null,"name":"CheckedAdd","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":25,"index":628},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":152847,"byte_end":152857,"line_start":23,"line_end":23,"column_start":36,"column_end":46},"alias_span":null,"name":"CheckedDiv","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":25,"index":626},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":152859,"byte_end":152869,"line_start":23,"line_end":23,"column_start":48,"column_end":58},"alias_span":null,"name":"CheckedMul","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":25,"index":633},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":152871,"byte_end":152881,"line_start":23,"line_end":23,"column_start":60,"column_end":70},"alias_span":null,"name":"CheckedNeg","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":25,"index":630},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":152883,"byte_end":152893,"line_start":23,"line_end":23,"column_start":72,"column_end":82},"alias_span":null,"name":"CheckedRem","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":25,"index":635},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":152895,"byte_end":152905,"line_start":23,"line_end":23,"column_start":84,"column_end":94},"alias_span":null,"name":"CheckedShl","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":25,"index":638},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":152908,"byte_end":152918,"line_start":24,"line_end":24,"column_start":2,"column_end":12},"alias_span":null,"name":"CheckedShr","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":25,"index":624},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":152920,"byte_end":152930,"line_start":24,"line_end":24,"column_start":14,"column_end":24},"alias_span":null,"name":"CheckedSub","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":25,"index":525},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":152932,"byte_end":152935,"line_start":24,"line_end":24,"column_start":26,"column_end":29},"alias_span":null,"name":"One","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":25,"index":943},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":152937,"byte_end":152943,"line_start":24,"line_end":24,"column_start":31,"column_end":37},"alias_span":null,"name":"Signed","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":25,"index":964},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":152945,"byte_end":152953,"line_start":24,"line_end":24,"column_start":39,"column_end":47},"alias_span":null,"name":"Unsigned","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":25,"index":515},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":152955,"byte_end":152959,"line_start":24,"line_end":24,"column_start":49,"column_end":53},"alias_span":null,"name":"Zero","value":"","parent":{"krate":0,"index":501}},{"kind":"Use","ref_id":{"krate":0,"index":982},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1235,"byte_end":1244,"line_start":43,"line_end":43,"column_start":23,"column_end":32},"alias_span":null,"name":"FixedI128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":857},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1246,"byte_end":1254,"line_start":43,"line_end":43,"column_start":34,"column_end":42},"alias_span":null,"name":"FixedI64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":209},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1256,"byte_end":1272,"line_start":43,"line_end":43,"column_start":44,"column_end":60},"alias_span":null,"name":"FixedPointNumber","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":198},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1274,"byte_end":1291,"line_start":43,"line_end":43,"column_start":62,"column_end":79},"alias_span":null,"name":"FixedPointOperand","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1107},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1293,"byte_end":1302,"line_start":43,"line_end":43,"column_start":81,"column_end":90},"alias_span":null,"name":"FixedU128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":378},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1326,"byte_end":1333,"line_start":44,"line_end":44,"column_start":22,"column_end":29},"alias_span":null,"name":"InnerOf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":382},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1335,"byte_end":1343,"line_start":44,"line_end":44,"column_start":31,"column_end":39},"alias_span":null,"name":"PerThing","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1428},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1345,"byte_end":1351,"line_start":44,"line_end":44,"column_start":41,"column_end":47},"alias_span":null,"name":"PerU16","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1740},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1353,"byte_end":1360,"line_start":44,"line_end":44,"column_start":49,"column_end":56},"alias_span":null,"name":"Perbill","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1272},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1362,"byte_end":1369,"line_start":44,"line_end":44,"column_start":58,"column_end":65},"alias_span":null,"name":"Percent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1584},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1371,"byte_end":1378,"line_start":44,"line_end":44,"column_start":67,"column_end":74},"alias_span":null,"name":"Permill","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1896},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1380,"byte_end":1391,"line_start":44,"line_end":44,"column_start":76,"column_end":87},"alias_span":null,"name":"Perquintill","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":380},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1393,"byte_end":1400,"line_start":44,"line_end":44,"column_start":89,"column_end":96},"alias_span":null,"name":"UpperOf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1943},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1422,"byte_end":1433,"line_start":45,"line_end":45,"column_start":20,"column_end":31},"alias_span":null,"name":"Rational128","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1932},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1435,"byte_end":1451,"line_start":45,"line_end":45,"column_start":33,"column_end":49},"alias_span":null,"name":"RationalInfinite","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":686,"byte_end":15358,"line_start":18,"line_end":460,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":102},{"krate":0,"index":268},{"krate":0,"index":294},{"krate":0,"index":429},{"krate":0,"index":501},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":652},{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":674},{"krate":0,"index":677},{"krate":0,"index":680},{"krate":0,"index":683},{"krate":0,"index":686},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":720},{"krate":0,"index":723},{"krate":0,"index":726},{"krate":0,"index":729},{"krate":0,"index":732},{"krate":0,"index":1955},{"krate":0,"index":1957},{"krate":0,"index":1959},{"krate":0,"index":1961},{"krate":0,"index":1963},{"krate":0,"index":733},{"krate":0,"index":738}],"decl_id":null,"docs":" Minimal fixed point arithmetic primitives and types for runtime.\n","sig":null,"attributes":[{"value":"/ Minimal fixed point arithmetic primitives and types for runtime.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":686,"byte_end":754,"line_start":18,"line_end":18,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"biguint","qualname":"::biguint","value":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":745},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":759},{"krate":0,"index":763},{"krate":0,"index":765},{"krate":0,"index":44},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":767},{"krate":0,"index":770},{"krate":0,"index":97},{"krate":0,"index":773},{"krate":0,"index":775},{"krate":0,"index":777},{"krate":0,"index":98},{"krate":0,"index":100}],"decl_id":null,"docs":" Infinite precision unsigned integer for substrate runtime.\n","sig":null,"attributes":[{"value":"/ Infinite precision unsigned integer for substrate runtime.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":16046,"byte_end":16108,"line_start":18,"line_end":18,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":36},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":16526,"byte_end":16532,"line_start":29,"line_end":29,"column_start":10,"column_end":16},"name":"Single","qualname":"::biguint::Single","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Representation of a single limb.\n","sig":null,"attributes":[{"value":"/ Representation of a single limb.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":16480,"byte_end":16516,"line_start":28,"line_end":28,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":37},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":16582,"byte_end":16588,"line_start":31,"line_end":31,"column_start":10,"column_end":16},"name":"Double","qualname":"::biguint::Double","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" Representation of two limbs.\n","sig":null,"attributes":[{"value":"/ Representation of two limbs.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":16540,"byte_end":16572,"line_start":30,"line_end":30,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":40},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":17030,"byte_end":17035,"line_start":42,"line_end":42,"column_start":8,"column_end":13},"name":"split","qualname":"::biguint::split","value":"pub fn split(Double) -> (Single, Single)","parent":null,"children":[],"decl_id":null,"docs":" Splits a [`Double`] limb number into a tuple of two [`Single`] limb numbers.\n","sig":null,"attributes":[{"value":"/ Splits a [`Double`] limb number into a tuple of two [`Single`] limb numbers.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":16942,"byte_end":17022,"line_start":41,"line_end":41,"column_start":1,"column_end":81}}]},{"kind":"Function","id":{"krate":0,"index":41},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":17250,"byte_end":17260,"line_start":51,"line_end":51,"column_start":8,"column_end":18},"name":"mul_single","qualname":"::biguint::mul_single","value":"pub fn mul_single(Single, Single) -> Double","parent":null,"children":[],"decl_id":null,"docs":" Assumed as a given primitive.","sig":null,"attributes":[{"value":"/ Assumed as a given primitive.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":17139,"byte_end":17172,"line_start":48,"line_end":48,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":17173,"byte_end":17176,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Multiplication of two singles, which at most yields 1 double.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":17177,"byte_end":17242,"line_start":50,"line_end":50,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":42},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":17528,"byte_end":17538,"line_start":61,"line_end":61,"column_start":8,"column_end":18},"name":"add_single","qualname":"::biguint::add_single","value":"pub fn add_single(Single, Single) -> (Single, Single)","parent":null,"children":[],"decl_id":null,"docs":" Assumed as a given primitive.","sig":null,"attributes":[{"value":"/ Assumed as a given primitive.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":17359,"byte_end":17392,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":17393,"byte_end":17396,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Addition of two singles, which at most takes a single limb of result and a carry,","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":17397,"byte_end":17482,"line_start":59,"line_end":59,"column_start":1,"column_end":86}},{"value":"/ returned as a tuple respectively.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":17483,"byte_end":17520,"line_start":60,"line_end":60,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":748},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":18175,"byte_end":18182,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"BigUint","qualname":"::biguint::BigUint","value":"BigUint {  }","parent":null,"children":[{"krate":0,"index":749}],"decl_id":null,"docs":" Simple wrapper around an infinitely large integer, represented as limbs of [`Single`].\n","sig":null,"attributes":[{"value":"/ Simple wrapper around an infinitely large integer, represented as limbs of [`Single`].","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":18031,"byte_end":18121,"line_start":81,"line_end":81,"column_start":1,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":18475,"byte_end":18488,"line_start":93,"line_end":93,"column_start":9,"column_end":22},"name":"with_capacity","qualname":"<BigUint>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance with `size` limbs. This prevents any number with zero limbs to be\n created.","sig":null,"attributes":[{"value":"/ Create a new instance with `size` limbs. This prevents any number with zero limbs to be","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":18296,"byte_end":18387,"line_start":89,"line_end":89,"column_start":2,"column_end":93}},{"value":"/ created.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":18389,"byte_end":18401,"line_start":90,"line_end":90,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":18403,"byte_end":18406,"line_start":91,"line_end":91,"column_start":2,"column_end":5}},{"value":"/ The behavior of the type is undefined with zero limbs.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":18408,"byte_end":18466,"line_start":92,"line_end":92,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":18669,"byte_end":18679,"line_start":99,"line_end":99,"column_start":9,"column_end":19},"name":"from_limbs","qualname":"<BigUint>::from_limbs","value":"pub fn from_limbs(&[Single]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raw constructor from custom limbs. If `limbs` is empty, `Zero::zero()` implementation is\n used.\n","sig":null,"attributes":[{"value":"/ Raw constructor from custom limbs. If `limbs` is empty, `Zero::zero()` implementation is","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":18557,"byte_end":18649,"line_start":97,"line_end":97,"column_start":2,"column_end":94}},{"value":"/ used.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":18651,"byte_end":18660,"line_start":98,"line_end":98,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":18833,"byte_end":18836,"line_start":108,"line_end":108,"column_start":9,"column_end":12},"name":"len","qualname":"<BigUint>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Number of limbs.\n","sig":null,"attributes":[{"value":"/ Number of limbs.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":18804,"byte_end":18824,"line_start":107,"line_end":107,"column_start":2,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":19033,"byte_end":19036,"line_start":117,"line_end":117,"column_start":9,"column_end":12},"name":"get","qualname":"<BigUint>::get","value":"pub fn get(&Self, usize) -> Single","parent":null,"children":[],"decl_id":null,"docs":" A naive getter for limb at `index`. Note that the order is lsb -> msb.","sig":null,"attributes":[{"value":"/ A naive getter for limb at `index`. Note that the order is lsb -> msb.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":18880,"byte_end":18954,"line_start":112,"line_end":112,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":18956,"byte_end":18959,"line_start":113,"line_end":113,"column_start":2,"column_end":5}},{"value":"/ #### Panics","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":18961,"byte_end":18976,"line_start":114,"line_end":114,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":18978,"byte_end":18981,"line_start":115,"line_end":115,"column_start":2,"column_end":5}},{"value":"/ This panics if index is out of range.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":18983,"byte_end":19024,"line_start":116,"line_end":116,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":19196,"byte_end":19207,"line_start":122,"line_end":122,"column_start":9,"column_end":20},"name":"checked_get","qualname":"<BigUint>::checked_get","value":"pub fn checked_get(&Self, usize) -> Option<Single>","parent":null,"children":[],"decl_id":null,"docs":" A naive getter for limb at `index`. Note that the order is lsb -> msb.\n","sig":null,"attributes":[{"value":"/ A naive getter for limb at `index`. Note that the order is lsb -> msb.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":19113,"byte_end":19187,"line_start":121,"line_end":121,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":19508,"byte_end":19511,"line_start":133,"line_end":133,"column_start":9,"column_end":12},"name":"set","qualname":"<BigUint>::set","value":"pub fn set(&mut Self, usize, Single)","parent":null,"children":[],"decl_id":null,"docs":" A naive setter for limb at `index`. Note that the order is lsb -> msb.","sig":null,"attributes":[{"value":"/ A naive setter for limb at `index`. Note that the order is lsb -> msb.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":19355,"byte_end":19429,"line_start":128,"line_end":128,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":19431,"byte_end":19434,"line_start":129,"line_end":129,"column_start":2,"column_end":5}},{"value":"/ #### Panics","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":19436,"byte_end":19451,"line_start":130,"line_end":130,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":19453,"byte_end":19456,"line_start":131,"line_end":131,"column_start":2,"column_end":5}},{"value":"/ This panics if index is out of range.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":19458,"byte_end":19499,"line_start":132,"line_end":132,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":19813,"byte_end":19816,"line_start":143,"line_end":143,"column_start":9,"column_end":12},"name":"lsb","qualname":"<BigUint>::lsb","value":"pub fn lsb(&Self) -> Single","parent":null,"children":[],"decl_id":null,"docs":" returns the least significant limb of the number.","sig":null,"attributes":[{"value":"/ returns the least significant limb of the number.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":19630,"byte_end":19683,"line_start":138,"line_end":138,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":19685,"byte_end":19688,"line_start":139,"line_end":139,"column_start":2,"column_end":5}},{"value":"/ #### Panics","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":19690,"byte_end":19705,"line_start":140,"line_end":140,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":19707,"byte_end":19710,"line_start":141,"line_end":141,"column_start":2,"column_end":5}},{"value":"/ While the constructor of the type prevents this, this can panic if `self` has no digits.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":19712,"byte_end":19804,"line_start":142,"line_end":142,"column_start":2,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":20053,"byte_end":20056,"line_start":152,"line_end":152,"column_start":9,"column_end":12},"name":"msb","qualname":"<BigUint>::msb","value":"pub fn msb(&Self) -> Single","parent":null,"children":[],"decl_id":null,"docs":" returns the most significant limb of the number.","sig":null,"attributes":[{"value":"/ returns the most significant limb of the number.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":19871,"byte_end":19923,"line_start":147,"line_end":147,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":19925,"byte_end":19928,"line_start":148,"line_end":148,"column_start":2,"column_end":5}},{"value":"/ #### Panics","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":19930,"byte_end":19945,"line_start":149,"line_end":149,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":19947,"byte_end":19950,"line_start":150,"line_end":150,"column_start":2,"column_end":5}},{"value":"/ While the constructor of the type prevents this, this can panic if `self` has no digits.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":19952,"byte_end":20044,"line_start":151,"line_end":151,"column_start":2,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":20190,"byte_end":20196,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"name":"lstrip","qualname":"<BigUint>::lstrip","value":"pub fn lstrip(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Strips zeros from the left side (the most significant limbs) of `self`, if any.\n","sig":null,"attributes":[{"value":"/ Strips zeros from the left side (the most significant limbs) of `self`, if any.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":20098,"byte_end":20181,"line_start":156,"line_end":156,"column_start":2,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":20774,"byte_end":20778,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"name":"lpad","qualname":"<BigUint>::lpad","value":"pub fn lpad(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Zero-pad `self` from left to reach `size` limbs. Will not make any difference if `self`\n is already bigger than `size` limbs.\n","sig":null,"attributes":[{"value":"/ Zero-pad `self` from left to reach `size` limbs. Will not make any difference if `self`","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":20632,"byte_end":20723,"line_start":171,"line_end":171,"column_start":2,"column_end":93}},{"value":"/ is already bigger than `size` limbs.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":20725,"byte_end":20765,"line_start":172,"line_end":172,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":21460,"byte_end":21463,"line_start":192,"line_end":192,"column_start":9,"column_end":12},"name":"add","qualname":"<BigUint>::add","value":"pub fn add(Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds `self` with `other`. self and other do not have to have any particular size. Given\n that the `n = max{size(self), size(other)}`, it will produce a number with `n + 1`\n limbs.","sig":null,"attributes":[{"value":"/ Adds `self` with `other`. self and other do not have to have any particular size. Given","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":21023,"byte_end":21114,"line_start":184,"line_end":184,"column_start":2,"column_end":93}},{"value":"/ that the `n = max{size(self), size(other)}`, it will produce a number with `n + 1`","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":21116,"byte_end":21202,"line_start":185,"line_end":185,"column_start":2,"column_end":88}},{"value":"/ limbs.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":21204,"byte_end":21214,"line_start":186,"line_end":186,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":21216,"byte_end":21219,"line_start":187,"line_end":187,"column_start":2,"column_end":5}},{"value":"/ This function does not strip the output and returns the original allocated `n + 1`","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":21221,"byte_end":21307,"line_start":188,"line_end":188,"column_start":2,"column_end":88}},{"value":"/ limbs. The caller may strip the output if desired.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":21309,"byte_end":21363,"line_start":189,"line_end":189,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":21365,"byte_end":21368,"line_start":190,"line_end":190,"column_start":2,"column_end":5}},{"value":"/ Taken from \"The Art of Computer Programming\" by D.E. Knuth, vol 2, chapter 4.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":21370,"byte_end":21451,"line_start":191,"line_end":191,"column_start":2,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":22277,"byte_end":22280,"line_start":216,"line_end":216,"column_start":9,"column_end":12},"name":"sub","qualname":"<BigUint>::sub","value":"pub fn sub(Self, &Self) -> Result<Self, Self>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts `other` from `self`. self and other do not have to have any particular size.\n Given that the `n = max{size(self), size(other)}`, it will produce a number of size `n`.","sig":null,"attributes":[{"value":"/ Subtracts `other` from `self`. self and other do not have to have any particular size.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":21921,"byte_end":22011,"line_start":210,"line_end":210,"column_start":2,"column_end":92}},{"value":"/ Given that the `n = max{size(self), size(other)}`, it will produce a number of size `n`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":22013,"byte_end":22105,"line_start":211,"line_end":211,"column_start":2,"column_end":94}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":22107,"byte_end":22110,"line_start":212,"line_end":212,"column_start":2,"column_end":5}},{"value":"/ If `other` is bigger than `self`, `Err(B - borrow)` is returned.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":22112,"byte_end":22180,"line_start":213,"line_end":213,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":22182,"byte_end":22185,"line_start":214,"line_end":214,"column_start":2,"column_end":5}},{"value":"/ Taken from \"The Art of Computer Programming\" by D.E. Knuth, vol 2, chapter 4.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":22187,"byte_end":22268,"line_start":215,"line_end":215,"column_start":2,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":23562,"byte_end":23565,"line_start":260,"line_end":260,"column_start":9,"column_end":12},"name":"mul","qualname":"<BigUint>::mul","value":"pub fn mul(Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiplies n-limb number `self` with m-limb number `other`.","sig":null,"attributes":[{"value":"/ Multiplies n-limb number `self` with m-limb number `other`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":23190,"byte_end":23253,"line_start":252,"line_end":252,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":23255,"byte_end":23258,"line_start":253,"line_end":253,"column_start":2,"column_end":5}},{"value":"/ The resulting number will always have `n + m` limbs.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":23260,"byte_end":23316,"line_start":254,"line_end":254,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":23318,"byte_end":23321,"line_start":255,"line_end":255,"column_start":2,"column_end":5}},{"value":"/ This function does not strip the output and returns the original allocated `n + m`","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":23323,"byte_end":23409,"line_start":256,"line_end":256,"column_start":2,"column_end":88}},{"value":"/ limbs. The caller may strip the output if desired.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":23411,"byte_end":23465,"line_start":257,"line_end":257,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":23467,"byte_end":23470,"line_start":258,"line_end":258,"column_start":2,"column_end":5}},{"value":"/ Taken from \"The Art of Computer Programming\" by D.E. Knuth, vol 2, chapter 4.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":23472,"byte_end":23553,"line_start":259,"line_end":259,"column_start":2,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":24451,"byte_end":24459,"line_start":291,"line_end":291,"column_start":9,"column_end":17},"name":"div_unit","qualname":"<BigUint>::div_unit","value":"pub fn div_unit(Self, Single) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Divides `self` by a single limb `other`. This can be used in cases where the original\n division cannot work due to the divisor (`other`) being just one limb.","sig":null,"attributes":[{"value":"/ Divides `self` by a single limb `other`. This can be used in cases where the original","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":24232,"byte_end":24321,"line_start":287,"line_end":287,"column_start":2,"column_end":91}},{"value":"/ division cannot work due to the divisor (`other`) being just one limb.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":24323,"byte_end":24397,"line_start":288,"line_end":288,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":24399,"byte_end":24402,"line_start":289,"line_end":289,"column_start":2,"column_end":5}},{"value":"/ Invariant: `other` cannot be zero.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":24404,"byte_end":24442,"line_start":290,"line_end":290,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":25582,"byte_end":25585,"line_start":319,"line_end":319,"column_start":9,"column_end":12},"name":"div","qualname":"<BigUint>::div","value":"pub fn div(Self, &Self, bool) -> Option<(Self, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Divides an `n + m` limb self by a `n` limb `other`. The result is a `m + 1` limb\n quotient and a `n` limb remainder, if enabled by passing `true` in `rem` argument, both\n in the form of an option's `Ok`.","sig":null,"attributes":[{"value":"/ Divides an `n + m` limb self by a `n` limb `other`. The result is a `m + 1` limb","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":24874,"byte_end":24958,"line_start":306,"line_end":306,"column_start":2,"column_end":86}},{"value":"/ quotient and a `n` limb remainder, if enabled by passing `true` in `rem` argument, both","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":24960,"byte_end":25051,"line_start":307,"line_end":307,"column_start":2,"column_end":93}},{"value":"/ in the form of an option's `Ok`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":25053,"byte_end":25089,"line_start":308,"line_end":308,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":25091,"byte_end":25094,"line_start":309,"line_end":309,"column_start":2,"column_end":5}},{"value":"/ - requires `other` to be stripped and have no leading zeros.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":25096,"byte_end":25160,"line_start":310,"line_end":310,"column_start":2,"column_end":66}},{"value":"/ - requires `self` to be stripped and have no leading zeros.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":25162,"byte_end":25225,"line_start":311,"line_end":311,"column_start":2,"column_end":65}},{"value":"/ - requires `other` to have at least two limbs.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":25227,"byte_end":25277,"line_start":312,"line_end":312,"column_start":2,"column_end":52}},{"value":"/ - requires `self` to have a greater length compared to `other`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":25279,"byte_end":25346,"line_start":313,"line_end":313,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":25348,"byte_end":25351,"line_start":314,"line_end":314,"column_start":2,"column_end":5}},{"value":"/ All arguments are examined without being stripped for the above conditions. If any of","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":25353,"byte_end":25442,"line_start":315,"line_end":315,"column_start":2,"column_end":91}},{"value":"/ the above fails, `None` is returned.`","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":25444,"byte_end":25485,"line_start":316,"line_end":316,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":25487,"byte_end":25490,"line_start":317,"line_end":317,"column_start":2,"column_end":5}},{"value":"/ Taken from \"The Art of Computer Programming\" by D.E. Knuth, vol 2, chapter 4.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":25492,"byte_end":25573,"line_start":318,"line_end":318,"column_start":2,"column_end":83}}]},{"kind":"Mod","id":{"krate":0,"index":102},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fixed_point","qualname":"::fixed_point","value":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":267},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":869},{"krate":0,"index":873},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":885},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":779},{"krate":0,"index":781},{"krate":0,"index":785},{"krate":0,"index":791},{"krate":0,"index":795},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":814},{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":841},{"krate":0,"index":843},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":994},{"krate":0,"index":998},{"krate":0,"index":1005},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1010},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":904},{"krate":0,"index":906},{"krate":0,"index":910},{"krate":0,"index":916},{"krate":0,"index":920},{"krate":0,"index":926},{"krate":0,"index":929},{"krate":0,"index":932},{"krate":0,"index":935},{"krate":0,"index":939},{"krate":0,"index":943},{"krate":0,"index":945},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":961},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":968},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":1107},{"krate":0,"index":1110},{"krate":0,"index":1119},{"krate":0,"index":1123},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1135},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1145},{"krate":0,"index":1147},{"krate":0,"index":1149},{"krate":0,"index":1029},{"krate":0,"index":1031},{"krate":0,"index":1035},{"krate":0,"index":1041},{"krate":0,"index":1045},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1060},{"krate":0,"index":1064},{"krate":0,"index":1068},{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1075},{"krate":0,"index":1078},{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":1086},{"krate":0,"index":1088},{"krate":0,"index":1091},{"krate":0,"index":1093},{"krate":0,"index":1097},{"krate":0,"index":1100}],"decl_id":null,"docs":" Decimal Fixed Point implementations for Substrate runtime.\n","sig":null,"attributes":[{"value":"/ Decimal Fixed Point implementations for Substrate runtime.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":38172,"byte_end":38234,"line_start":18,"line_end":18,"column_start":1,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":198},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":38793,"byte_end":38810,"line_start":40,"line_end":40,"column_start":11,"column_end":28},"name":"FixedPointOperand","qualname":"::fixed_point::FixedPointOperand","value":"FixedPointOperand: Copy + Clone + Bounded + Zero + Saturating + PartialOrd +\nUniqueSaturatedInto<u128> + TryFrom<u128> + CheckedNeg","parent":null,"children":[],"decl_id":null,"docs":" Integer types that can be used to interact with `FixedPointNumber` implementations.\n","sig":null,"attributes":[{"value":"/ Integer types that can be used to interact with `FixedPointNumber` implementations.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":38695,"byte_end":38782,"line_start":39,"line_end":39,"column_start":1,"column_end":88}}]},{"kind":"Trait","id":{"krate":0,"index":209},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39640,"byte_end":39656,"line_start":71,"line_end":71,"column_start":11,"column_end":27},"name":"FixedPointNumber","qualname":"::fixed_point::FixedPointNumber","value":"FixedPointNumber: Sized + Copy + Default + Debug + Saturating + Bounded + Eq + PartialEq + Ord +\nPartialOrd + CheckedSub + CheckedAdd + CheckedMul + CheckedDiv + Add + Sub +\nDiv + Mul + Zero + One","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":224},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252}],"decl_id":null,"docs":" Something that implements a decimal fixed point number.","sig":null,"attributes":[{"value":"/ Something that implements a decimal fixed point number.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39280,"byte_end":39339,"line_start":64,"line_end":64,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39340,"byte_end":39343,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ The precision is given by `Self::DIV`, i.e. `1 / DIV` can be represented.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39344,"byte_end":39421,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39422,"byte_end":39425,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Each type can store numbers from `Self::Inner::min_value() / Self::DIV`","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39426,"byte_end":39501,"line_start":68,"line_end":68,"column_start":1,"column_end":76}},{"value":"/ to `Self::Inner::max_value() / Self::DIV`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39502,"byte_end":39548,"line_start":69,"line_end":69,"column_start":1,"column_end":47}},{"value":"/ This is also referred to as the _accuracy_ of the type in the documentation.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39549,"byte_end":39629,"line_start":70,"line_end":70,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":210},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39929,"byte_end":39934,"line_start":94,"line_end":94,"column_start":7,"column_end":12},"name":"Inner","qualname":"::fixed_point::FixedPointNumber::Inner","value":"type Inner: Debug + One + CheckedMul + CheckedDiv + FixedPointOperand;","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" The underlying data type used for this fixed point number.\n","sig":null,"attributes":[{"value":"/ The underlying data type used for this fixed point number.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39860,"byte_end":39922,"line_start":93,"line_end":93,"column_start":2,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":211},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":40084,"byte_end":40087,"line_start":97,"line_end":97,"column_start":8,"column_end":11},"name":"DIV","qualname":"::fixed_point::FixedPointNumber::DIV","value":"Self::Inner","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Precision of this fixed point implementation. It should be a power of `10`.\n","sig":null,"attributes":[{"value":"/ Precision of this fixed point implementation. It should be a power of `10`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39997,"byte_end":40076,"line_start":96,"line_end":96,"column_start":2,"column_end":81}}]},{"kind":"Const","id":{"krate":0,"index":212},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":40178,"byte_end":40184,"line_start":100,"line_end":100,"column_start":8,"column_end":14},"name":"SIGNED","qualname":"::fixed_point::FixedPointNumber::SIGNED","value":"bool","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Indicates if this fixed point implementation is signed or not.\n","sig":null,"attributes":[{"value":"/ Indicates if this fixed point implementation is signed or not.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":40104,"byte_end":40170,"line_start":99,"line_end":99,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":40248,"byte_end":40256,"line_start":103,"line_end":103,"column_start":5,"column_end":13},"name":"accuracy","qualname":"::fixed_point::FixedPointNumber::accuracy","value":"pub fn accuracy() -> Self::Inner","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Precision of this fixed point implementation.\n","sig":null,"attributes":[{"value":"/ Precision of this fixed point implementation.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":40194,"byte_end":40243,"line_start":102,"line_end":102,"column_start":2,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":40342,"byte_end":40352,"line_start":108,"line_end":108,"column_start":5,"column_end":15},"name":"from_inner","qualname":"::fixed_point::FixedPointNumber::from_inner","value":"pub fn from_inner(Self::Inner) -> Self","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Builds this type from an integer number.\n","sig":null,"attributes":[{"value":"/ Builds this type from an integer number.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":40293,"byte_end":40337,"line_start":107,"line_end":107,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":40439,"byte_end":40449,"line_start":111,"line_end":111,"column_start":5,"column_end":15},"name":"into_inner","qualname":"::fixed_point::FixedPointNumber::into_inner","value":"pub fn into_inner(Self) -> Self::Inner","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner raw value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner raw value.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":40382,"byte_end":40434,"line_start":110,"line_end":110,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":40597,"byte_end":40620,"line_start":116,"line_end":116,"column_start":5,"column_end":28},"name":"saturating_from_integer","qualname":"::fixed_point::FixedPointNumber::saturating_from_integer","value":"pub fn saturating_from_integer<N: FixedPointOperand>(N) -> Self","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Creates self from an integer number `int`.","sig":null,"attributes":[{"value":"/ Creates self from an integer number `int`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":40474,"byte_end":40520,"line_start":113,"line_end":113,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":40522,"byte_end":40525,"line_start":114,"line_end":114,"column_start":2,"column_end":5}},{"value":"/ Returns `Self::max` or `Self::min` if `int` exceeds accuracy.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":40527,"byte_end":40592,"line_start":115,"line_end":115,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":40936,"byte_end":40956,"line_start":125,"line_end":125,"column_start":5,"column_end":25},"name":"checked_from_integer","qualname":"::fixed_point::FixedPointNumber::checked_from_integer","value":"pub fn checked_from_integer(Self::Inner) -> Option<Self>","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Creates `self` from an integer number `int`.","sig":null,"attributes":[{"value":"/ Creates `self` from an integer number `int`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":40831,"byte_end":40879,"line_start":122,"line_end":122,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":40881,"byte_end":40884,"line_start":123,"line_end":123,"column_start":2,"column_end":5}},{"value":"/ Returns `None` if `int` exceeds accuracy.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":40886,"byte_end":40931,"line_start":124,"line_end":124,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":41208,"byte_end":41232,"line_start":132,"line_end":132,"column_start":5,"column_end":29},"name":"saturating_from_rational","qualname":"::fixed_point::FixedPointNumber::saturating_from_rational","value":"pub fn saturating_from_rational<N: FixedPointOperand,\nD: FixedPointOperand>(N, D) -> Self","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Creates `self` from a rational number. Equal to `n / d`.","sig":null,"attributes":[{"value":"/ Creates `self` from a rational number. Equal to `n / d`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":41050,"byte_end":41110,"line_start":129,"line_end":129,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":41112,"byte_end":41115,"line_start":130,"line_end":130,"column_start":2,"column_end":5}},{"value":"/ Panics if `d = 0`. Returns `Self::max` or `Self::min` if `n / d` exceeds accuracy.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":41117,"byte_end":41203,"line_start":131,"line_end":131,"column_start":2,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":41570,"byte_end":41591,"line_start":142,"line_end":142,"column_start":5,"column_end":26},"name":"checked_from_rational","qualname":"::fixed_point::FixedPointNumber::checked_from_rational","value":"pub fn checked_from_rational<N: FixedPointOperand, D: FixedPointOperand>(N, D)\n-> Option<Self>","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Creates `self` from a rational number. Equal to `n / d`.","sig":null,"attributes":[{"value":"/ Creates `self` from a rational number. Equal to `n / d`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":41439,"byte_end":41499,"line_start":139,"line_end":139,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":41501,"byte_end":41504,"line_start":140,"line_end":140,"column_start":2,"column_end":5}},{"value":"/ Returns `None` if `d == 0` or `n / d` exceeds accuracy.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":41506,"byte_end":41565,"line_start":141,"line_end":141,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":42120,"byte_end":42135,"line_start":163,"line_end":163,"column_start":5,"column_end":20},"name":"checked_mul_int","qualname":"::fixed_point::FixedPointNumber::checked_mul_int","value":"pub fn checked_mul_int<N: FixedPointOperand>(Self, N) -> Option<N>","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Checked multiplication for integer type `N`. Equal to `self * n`.","sig":null,"attributes":[{"value":"/ Checked multiplication for integer type `N`. Equal to `self * n`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":41986,"byte_end":42055,"line_start":160,"line_end":160,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":42057,"byte_end":42060,"line_start":161,"line_end":161,"column_start":2,"column_end":5}},{"value":"/ Returns `None` if the result does not fit in `N`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":42062,"byte_end":42115,"line_start":162,"line_end":162,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":42608,"byte_end":42626,"line_start":176,"line_end":176,"column_start":5,"column_end":23},"name":"saturating_mul_int","qualname":"::fixed_point::FixedPointNumber::saturating_mul_int","value":"pub fn saturating_mul_int<N: FixedPointOperand>(Self, N) -> N","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Saturating multiplication for integer type `N`. Equal to `self * n`.","sig":null,"attributes":[{"value":"/ Saturating multiplication for integer type `N`. Equal to `self * n`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":42457,"byte_end":42529,"line_start":173,"line_end":173,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":42531,"byte_end":42534,"line_start":174,"line_end":174,"column_start":2,"column_end":5}},{"value":"/ Returns `N::min` or `N::max` if the result does not fit in `N`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":42536,"byte_end":42603,"line_start":175,"line_end":175,"column_start":2,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":42889,"byte_end":42904,"line_start":183,"line_end":183,"column_start":5,"column_end":20},"name":"checked_div_int","qualname":"::fixed_point::FixedPointNumber::checked_div_int","value":"pub fn checked_div_int<N: FixedPointOperand>(Self, N) -> Option<N>","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Checked division for integer type `N`. Equal to `self / d`.","sig":null,"attributes":[{"value":"/ Checked division for integer type `N`. Equal to `self / d`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":42749,"byte_end":42812,"line_start":180,"line_end":180,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":42814,"byte_end":42817,"line_start":181,"line_end":181,"column_start":2,"column_end":5}},{"value":"/ Returns `None` if the result does not fit in `N` or `d == 0`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":42819,"byte_end":42884,"line_start":182,"line_end":182,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":43408,"byte_end":43426,"line_start":197,"line_end":197,"column_start":5,"column_end":23},"name":"saturating_div_int","qualname":"::fixed_point::FixedPointNumber::saturating_div_int","value":"pub fn saturating_div_int<N: FixedPointOperand>(Self, N) -> N","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Saturating division for integer type `N`. Equal to `self / d`.","sig":null,"attributes":[{"value":"/ Saturating division for integer type `N`. Equal to `self / d`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":43243,"byte_end":43309,"line_start":194,"line_end":194,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":43311,"byte_end":43314,"line_start":195,"line_end":195,"column_start":2,"column_end":5}},{"value":"/ Panics if `d == 0`. Returns `N::min` or `N::max` if the result does not fit in `N`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":43316,"byte_end":43403,"line_start":196,"line_end":196,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":43822,"byte_end":43844,"line_start":208,"line_end":208,"column_start":5,"column_end":27},"name":"saturating_mul_acc_int","qualname":"::fixed_point::FixedPointNumber::saturating_mul_acc_int","value":"pub fn saturating_mul_acc_int<N: FixedPointOperand>(Self, N) -> N","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Saturating multiplication for integer type `N`, adding the result back.\n Equal to `self * n + n`.","sig":null,"attributes":[{"value":"/ Saturating multiplication for integer type `N`, adding the result back.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":43614,"byte_end":43689,"line_start":204,"line_end":204,"column_start":2,"column_end":77}},{"value":"/ Equal to `self * n + n`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":43691,"byte_end":43719,"line_start":205,"line_end":205,"column_start":2,"column_end":30}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":43721,"byte_end":43724,"line_start":206,"line_end":206,"column_start":2,"column_end":5}},{"value":"/ Returns `N::min` or `N::max` if the multiplication or final result does not fit in `N`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":43726,"byte_end":43817,"line_start":207,"line_end":207,"column_start":2,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":44163,"byte_end":44177,"line_start":219,"line_end":219,"column_start":5,"column_end":19},"name":"saturating_abs","qualname":"::fixed_point::FixedPointNumber::saturating_abs","value":"pub fn saturating_abs(Self) -> Self","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Saturating absolute value.","sig":null,"attributes":[{"value":"/ Saturating absolute value.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":44074,"byte_end":44104,"line_start":216,"line_end":216,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":44106,"byte_end":44109,"line_start":217,"line_end":217,"column_start":2,"column_end":5}},{"value":"/ Returns `Self::max` if `self == Self::min`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":44111,"byte_end":44158,"line_start":218,"line_end":218,"column_start":2,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":44472,"byte_end":44482,"line_start":231,"line_end":231,"column_start":5,"column_end":15},"name":"reciprocal","qualname":"::fixed_point::FixedPointNumber::reciprocal","value":"pub fn reciprocal(Self) -> Option<Self>","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Takes the reciprocal (inverse). Equal to `1 / self`.","sig":null,"attributes":[{"value":"/ Takes the reciprocal (inverse). Equal to `1 / self`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":44371,"byte_end":44427,"line_start":228,"line_end":228,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":44429,"byte_end":44432,"line_start":229,"line_end":229,"column_start":2,"column_end":5}},{"value":"/ Returns `None` if `self = 0`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":44434,"byte_end":44467,"line_start":230,"line_end":230,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":44582,"byte_end":44588,"line_start":236,"line_end":236,"column_start":5,"column_end":11},"name":"is_one","qualname":"::fixed_point::FixedPointNumber::is_one","value":"pub fn is_one(&Self) -> bool","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Checks if the number is one.\n","sig":null,"attributes":[{"value":"/ Checks if the number is one.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":44545,"byte_end":44577,"line_start":235,"line_end":235,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":44745,"byte_end":44756,"line_start":241,"line_end":241,"column_start":5,"column_end":16},"name":"is_positive","qualname":"::fixed_point::FixedPointNumber::is_positive","value":"pub fn is_positive(Self) -> bool","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is positive and `false` if the number is zero or negative.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is positive and `false` if the number is zero or negative.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":44653,"byte_end":44740,"line_start":240,"line_end":240,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":44912,"byte_end":44923,"line_start":246,"line_end":246,"column_start":5,"column_end":16},"name":"is_negative","qualname":"::fixed_point::FixedPointNumber::is_negative","value":"pub fn is_negative(Self) -> bool","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is negative and `false` if the number is zero or positive.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is negative and `false` if the number is zero or positive.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":44820,"byte_end":44907,"line_start":245,"line_end":245,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":45021,"byte_end":45026,"line_start":251,"line_end":251,"column_start":5,"column_end":10},"name":"trunc","qualname":"::fixed_point::FixedPointNumber::trunc","value":"pub fn trunc(Self) -> Self","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Returns the integer part.\n","sig":null,"attributes":[{"value":"/ Returns the integer part.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":44987,"byte_end":45016,"line_start":250,"line_end":250,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":45456,"byte_end":45460,"line_start":264,"line_end":264,"column_start":5,"column_end":9},"name":"frac","qualname":"::fixed_point::FixedPointNumber::frac","value":"pub fn frac(Self) -> Self","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Returns the fractional part.","sig":null,"attributes":[{"value":"/ Returns the fractional part.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":45282,"byte_end":45314,"line_start":260,"line_end":260,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":45316,"byte_end":45319,"line_start":261,"line_end":261,"column_start":2,"column_end":5}},{"value":"/ Note: the returned fraction will be non-negative for negative numbers,","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":45321,"byte_end":45395,"line_start":262,"line_end":262,"column_start":2,"column_end":76}},{"value":"/ except in the case where the integer part is zero.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":45397,"byte_end":45451,"line_start":263,"line_end":263,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":45799,"byte_end":45803,"line_start":277,"line_end":277,"column_start":5,"column_end":9},"name":"ceil","qualname":"::fixed_point::FixedPointNumber::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":45652,"byte_end":45719,"line_start":274,"line_end":274,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":45721,"byte_end":45724,"line_start":275,"line_end":275,"column_start":2,"column_end":5}},{"value":"/ Saturates to `Self::max` (truncated) if the result does not fit.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":45726,"byte_end":45794,"line_start":276,"line_end":276,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":46119,"byte_end":46124,"line_start":290,"line_end":290,"column_start":5,"column_end":10},"name":"floor","qualname":"::fixed_point::FixedPointNumber::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":45976,"byte_end":46039,"line_start":287,"line_end":287,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":46041,"byte_end":46044,"line_start":288,"line_end":288,"column_start":2,"column_end":5}},{"value":"/ Saturates to `Self::min` (truncated) if the result does not fit.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":46046,"byte_end":46114,"line_start":289,"line_end":289,"column_start":2,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":46433,"byte_end":46438,"line_start":301,"line_end":301,"column_start":5,"column_end":10},"name":"round","qualname":"::fixed_point::FixedPointNumber::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Returns the number rounded to the nearest integer. Rounds half-way cases away from 0.0.","sig":null,"attributes":[{"value":"/ Returns the number rounded to the nearest integer. Rounds half-way cases away from 0.0.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":46247,"byte_end":46338,"line_start":298,"line_end":298,"column_start":2,"column_end":93}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":46340,"byte_end":46343,"line_start":299,"line_end":299,"column_start":2,"column_end":5}},{"value":"/ Saturates to `Self::min` or `Self::max` (truncated) if the result does not fit.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":46345,"byte_end":46428,"line_start":300,"line_end":300,"column_start":2,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":857},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":88580,"byte_end":88588,"line_start":1736,"line_end":1736,"column_start":2,"column_end":10},"name":"FixedI64","qualname":"::fixed_point::FixedI64","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed point number representation in the range.\n_Fixed Point 64 bits signed, range = [-9223372036.854775808, 9223372036.854775807]_\n","sig":null,"attributes":[{"value":"/ A fixed point number representation in the range.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":48090,"byte_end":48143,"line_start":363,"line_end":363,"column_start":3,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":982},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":88747,"byte_end":88756,"line_start":1745,"line_end":1745,"column_start":2,"column_end":11},"name":"FixedI128","qualname":"::fixed_point::FixedI128","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed point number representation in the range.\n_Fixed Point 128 bits signed, range = [-170141183460469231731.687303715884105728, 170141183460469231731.687303715884105727]_\n","sig":null,"attributes":[{"value":"/ A fixed point number representation in the range.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":48090,"byte_end":48143,"line_start":363,"line_end":363,"column_start":3,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1107},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":88974,"byte_end":88983,"line_start":1755,"line_end":1755,"column_start":2,"column_end":11},"name":"FixedU128","qualname":"::fixed_point::FixedU128","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed point number representation in the range.\n_Fixed Point 128 bits unsigned, range = [0.000000000000000000, 340282366920938463463.374607431768211455]_\n","sig":null,"attributes":[{"value":"/ A fixed point number representation in the range.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":48090,"byte_end":48143,"line_start":363,"line_end":363,"column_start":3,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":268},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/helpers_128bit.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"helpers_128bit","qualname":"::helpers_128bit","value":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/helpers_128bit.rs","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292}],"decl_id":null,"docs":" Some helper functions to work with 128bit numbers. Note that the functionality provided here is\n only sensible to use with 128bit numbers because for smaller sizes, you can always rely on\n assumptions of a bigger type (u128) being available, or simply create a per-thing and use the\n multiplication implementation provided there.\n","sig":null,"attributes":[{"value":"/ Some helper functions to work with 128bit numbers. Note that the functionality provided here is","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/helpers_128bit.rs","byte_start":89850,"byte_end":89949,"line_start":18,"line_end":18,"column_start":1,"column_end":100}},{"value":"/ only sensible to use with 128bit numbers because for smaller sizes, you can always rely on","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/helpers_128bit.rs","byte_start":89950,"byte_end":90044,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/ assumptions of a bigger type (u128) being available, or simply create a per-thing and use the","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/helpers_128bit.rs","byte_start":90045,"byte_end":90142,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ multiplication implementation provided there.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/helpers_128bit.rs","byte_start":90143,"byte_end":90192,"line_start":21,"line_end":21,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":289},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/helpers_128bit.rs","byte_start":90364,"byte_end":90367,"line_start":32,"line_end":32,"column_start":8,"column_end":11},"name":"gcd","qualname":"::helpers_128bit::gcd","value":"pub fn gcd(u128, u128) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Helper gcd function used in Rational128 implementation.\n","sig":null,"attributes":[{"value":"/ Helper gcd function used in Rational128 implementation.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/helpers_128bit.rs","byte_start":90297,"byte_end":90356,"line_start":31,"line_end":31,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":290},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/helpers_128bit.rs","byte_start":90764,"byte_end":90769,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"split","qualname":"::helpers_128bit::split","value":"pub fn split(u128) -> (u64, u64)","parent":null,"children":[],"decl_id":null,"docs":" split a u128 into two u64 limbs\n","sig":null,"attributes":[{"value":"/ split a u128 into two u64 limbs","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/helpers_128bit.rs","byte_start":90721,"byte_end":90756,"line_start":46,"line_end":46,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":291},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/helpers_128bit.rs","byte_start":90906,"byte_end":90917,"line_start":54,"line_end":54,"column_start":8,"column_end":19},"name":"to_big_uint","qualname":"::helpers_128bit::to_big_uint","value":"pub fn to_big_uint(u128) -> biguint::BigUint","parent":null,"children":[],"decl_id":null,"docs":" Convert a u128 to a u32 based biguint.\n","sig":null,"attributes":[{"value":"/ Convert a u128 to a u32 based biguint.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/helpers_128bit.rs","byte_start":90856,"byte_end":90898,"line_start":53,"line_end":53,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":292},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/helpers_128bit.rs","byte_start":91435,"byte_end":91455,"line_start":69,"line_end":69,"column_start":8,"column_end":28},"name":"multiply_by_rational","qualname":"::helpers_128bit::multiply_by_rational","value":"pub fn multiply_by_rational(u128, u128, u128) -> Result<u128, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Safely and accurately compute `a * b / c`. The approach is:\n   - Simply try `a * b / c`.\n   - Else, convert them both into big numbers and re-try. `Err` is returned if the result cannot\n     be safely casted back to u128.","sig":null,"attributes":[{"value":"/ Safely and accurately compute `a * b / c`. The approach is:","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/helpers_128bit.rs","byte_start":91136,"byte_end":91199,"line_start":63,"line_end":63,"column_start":1,"column_end":64}},{"value":"/   - Simply try `a * b / c`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/helpers_128bit.rs","byte_start":91200,"byte_end":91231,"line_start":64,"line_end":64,"column_start":1,"column_end":32}},{"value":"/   - Else, convert them both into big numbers and re-try. `Err` is returned if the result cannot","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/helpers_128bit.rs","byte_start":91232,"byte_end":91331,"line_start":65,"line_end":65,"column_start":1,"column_end":100}},{"value":"/     be safely casted back to u128.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/helpers_128bit.rs","byte_start":91332,"byte_end":91370,"line_start":66,"line_end":66,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/helpers_128bit.rs","byte_start":91371,"byte_end":91374,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Invariant: c must be greater than or equal to 1.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/helpers_128bit.rs","byte_start":91375,"byte_end":91427,"line_start":68,"line_end":68,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":294},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"per_things","qualname":"::per_things","value":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":411},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":1272},{"krate":0,"index":1275},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1294},{"krate":0,"index":1297},{"krate":0,"index":1299},{"krate":0,"index":1301},{"krate":0,"index":1303},{"krate":0,"index":1247},{"krate":0,"index":1253},{"krate":0,"index":1154},{"krate":0,"index":1158},{"krate":0,"index":1160},{"krate":0,"index":1172},{"krate":0,"index":1196},{"krate":0,"index":1201},{"krate":0,"index":1204},{"krate":0,"index":1207},{"krate":0,"index":1210},{"krate":0,"index":1213},{"krate":0,"index":1216},{"krate":0,"index":1218},{"krate":0,"index":1222},{"krate":0,"index":1227},{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1428},{"krate":0,"index":1431},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1455},{"krate":0,"index":1457},{"krate":0,"index":1459},{"krate":0,"index":1403},{"krate":0,"index":1409},{"krate":0,"index":1310},{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":1328},{"krate":0,"index":1352},{"krate":0,"index":1357},{"krate":0,"index":1360},{"krate":0,"index":1363},{"krate":0,"index":1366},{"krate":0,"index":1369},{"krate":0,"index":1372},{"krate":0,"index":1374},{"krate":0,"index":1378},{"krate":0,"index":1383},{"krate":0,"index":1386},{"krate":0,"index":1389},{"krate":0,"index":1392},{"krate":0,"index":1394},{"krate":0,"index":1396},{"krate":0,"index":1398},{"krate":0,"index":1400},{"krate":0,"index":1308},{"krate":0,"index":1584},{"krate":0,"index":1587},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1606},{"krate":0,"index":1609},{"krate":0,"index":1611},{"krate":0,"index":1613},{"krate":0,"index":1615},{"krate":0,"index":1559},{"krate":0,"index":1565},{"krate":0,"index":1466},{"krate":0,"index":1470},{"krate":0,"index":1472},{"krate":0,"index":1484},{"krate":0,"index":1508},{"krate":0,"index":1513},{"krate":0,"index":1516},{"krate":0,"index":1519},{"krate":0,"index":1522},{"krate":0,"index":1525},{"krate":0,"index":1528},{"krate":0,"index":1530},{"krate":0,"index":1534},{"krate":0,"index":1539},{"krate":0,"index":1542},{"krate":0,"index":1545},{"krate":0,"index":1548},{"krate":0,"index":1550},{"krate":0,"index":1552},{"krate":0,"index":1554},{"krate":0,"index":1556},{"krate":0,"index":1464},{"krate":0,"index":1740},{"krate":0,"index":1743},{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1762},{"krate":0,"index":1765},{"krate":0,"index":1767},{"krate":0,"index":1769},{"krate":0,"index":1771},{"krate":0,"index":1715},{"krate":0,"index":1721},{"krate":0,"index":1622},{"krate":0,"index":1626},{"krate":0,"index":1628},{"krate":0,"index":1640},{"krate":0,"index":1664},{"krate":0,"index":1669},{"krate":0,"index":1672},{"krate":0,"index":1675},{"krate":0,"index":1678},{"krate":0,"index":1681},{"krate":0,"index":1684},{"krate":0,"index":1686},{"krate":0,"index":1690},{"krate":0,"index":1695},{"krate":0,"index":1698},{"krate":0,"index":1701},{"krate":0,"index":1704},{"krate":0,"index":1706},{"krate":0,"index":1708},{"krate":0,"index":1710},{"krate":0,"index":1712},{"krate":0,"index":1620},{"krate":0,"index":1896},{"krate":0,"index":1899},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1911},{"krate":0,"index":1912},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1918},{"krate":0,"index":1921},{"krate":0,"index":1923},{"krate":0,"index":1925},{"krate":0,"index":1927},{"krate":0,"index":1871},{"krate":0,"index":1877},{"krate":0,"index":1778},{"krate":0,"index":1782},{"krate":0,"index":1784},{"krate":0,"index":1796},{"krate":0,"index":1820},{"krate":0,"index":1825},{"krate":0,"index":1828},{"krate":0,"index":1831},{"krate":0,"index":1834},{"krate":0,"index":1837},{"krate":0,"index":1840},{"krate":0,"index":1842},{"krate":0,"index":1846},{"krate":0,"index":1851},{"krate":0,"index":1854},{"krate":0,"index":1857},{"krate":0,"index":1860},{"krate":0,"index":1862},{"krate":0,"index":1864},{"krate":0,"index":1866},{"krate":0,"index":1868},{"krate":0,"index":1776}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":378},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94215,"byte_end":94222,"line_start":36,"line_end":36,"column_start":10,"column_end":17},"name":"InnerOf","qualname":"::per_things::InnerOf","value":"<P as PerThing>::Inner","parent":null,"children":[],"decl_id":null,"docs":" Get the inner type of a `PerThing`.\n","sig":null,"attributes":[{"value":"/ Get the inner type of a `PerThing`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94166,"byte_end":94205,"line_start":35,"line_end":35,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":380},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94302,"byte_end":94309,"line_start":39,"line_end":39,"column_start":10,"column_end":17},"name":"UpperOf","qualname":"::per_things::UpperOf","value":"<P as PerThing>::Upper","parent":null,"children":[],"decl_id":null,"docs":" Get the upper type of a `PerThing`.\n","sig":null,"attributes":[{"value":"/ Get the upper type of a `PerThing`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94253,"byte_end":94292,"line_start":38,"line_end":38,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":382},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94460,"byte_end":94468,"line_start":43,"line_end":43,"column_start":11,"column_end":19},"name":"PerThing","qualname":"::per_things::PerThing","value":"PerThing: Sized + Saturating + Copy + Default + Eq + PartialEq + Ord + PartialOrd +\nBounded + fmt::Debug + ops::Div<Output = Self> + ops::Mul<Output = Self> +\nPow<usize, Output = Self>","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":409}],"decl_id":null,"docs":" Something that implements a fixed point ration with an arbitrary granularity `X`, as _parts per\n `X`_.\n","sig":null,"attributes":[{"value":"/ Something that implements a fixed point ration with an arbitrary granularity `X`, as _parts per","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94340,"byte_end":94439,"line_start":41,"line_end":41,"column_start":1,"column_end":100}},{"value":"/ `X`_.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94440,"byte_end":94449,"line_start":42,"line_end":42,"column_start":1,"column_end":10}}]},{"kind":"Type","id":{"krate":0,"index":383},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94716,"byte_end":94721,"line_start":59,"line_end":59,"column_start":7,"column_end":12},"name":"Inner","qualname":"::per_things::PerThing::Inner","value":"type Inner: BaseArithmetic + Unsigned + Copy + Into<u128> + fmt::Debug;","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" The data type used to build this per-thingy.\n","sig":null,"attributes":[{"value":"/ The data type used to build this per-thingy.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94661,"byte_end":94709,"line_start":58,"line_end":58,"column_start":2,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":384},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94925,"byte_end":94930,"line_start":63,"line_end":63,"column_start":7,"column_end":12},"name":"Upper","qualname":"::per_things::PerThing::Upper","value":"type Upper: BaseArithmetic\n\t\t+ Copy\n\t\t+ From<Self::Inner>\n\t\t+ TryInto<Self::Inner>\n\t\t+ UniqueSaturatedInto<Self::Inner>\n\t\t+ Unsigned\n\t\t+ fmt::Debug;","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" A data type larger than `Self::Inner`, used to avoid overflow in some computations.\n It must be able to compute `ACCURACY^2`.\n","sig":null,"attributes":[{"value":"/ A data type larger than `Self::Inner`, used to avoid overflow in some computations.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94785,"byte_end":94872,"line_start":61,"line_end":61,"column_start":2,"column_end":89}},{"value":"/ It must be able to compute `ACCURACY^2`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94874,"byte_end":94918,"line_start":62,"line_end":62,"column_start":2,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":385},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":95109,"byte_end":95117,"line_start":72,"line_end":72,"column_start":8,"column_end":16},"name":"ACCURACY","qualname":"::per_things::PerThing::ACCURACY","value":"Self::Inner","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" The accuracy of this type.\n","sig":null,"attributes":[{"value":"/ The accuracy of this type.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":95071,"byte_end":95101,"line_start":71,"line_end":71,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":95179,"byte_end":95183,"line_start":75,"line_end":75,"column_start":5,"column_end":9},"name":"zero","qualname":"::per_things::PerThing::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Equivalent to `Self::from_parts(0)`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `Self::from_parts(0)`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":95134,"byte_end":95174,"line_start":74,"line_end":74,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":95283,"byte_end":95290,"line_start":80,"line_end":80,"column_start":5,"column_end":12},"name":"is_zero","qualname":"::per_things::PerThing::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Return `true` if this is nothing.\n","sig":null,"attributes":[{"value":"/ Return `true` if this is nothing.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":95241,"byte_end":95278,"line_start":79,"line_end":79,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":95415,"byte_end":95418,"line_start":85,"line_end":85,"column_start":5,"column_end":8},"name":"one","qualname":"::per_things::PerThing::one","value":"pub fn one() -> Self","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Equivalent to `Self::from_parts(Self::ACCURACY)`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `Self::from_parts(Self::ACCURACY)`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":95357,"byte_end":95410,"line_start":84,"line_end":84,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":95509,"byte_end":95515,"line_start":90,"line_end":90,"column_start":5,"column_end":11},"name":"is_one","qualname":"::per_things::PerThing::is_one","value":"pub fn is_one(&Self) -> bool","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Return `true` if this is one.\n","sig":null,"attributes":[{"value":"/ Return `true` if this is one.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":95471,"byte_end":95504,"line_start":89,"line_end":89,"column_start":2,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":95743,"byte_end":95755,"line_start":96,"line_end":96,"column_start":5,"column_end":17},"name":"from_percent","qualname":"::per_things::PerThing::from_percent","value":"pub fn from_percent(Self::Inner) -> Self","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Build this type from a percent. Equivalent to `Self::from_parts(x * Self::ACCURACY / 100)`\n but more accurate and can cope with potential type overflows.\n","sig":null,"attributes":[{"value":"/ Build this type from a percent. Equivalent to `Self::from_parts(x * Self::ACCURACY / 100)`","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":95577,"byte_end":95671,"line_start":94,"line_end":94,"column_start":2,"column_end":96}},{"value":"/ but more accurate and can cope with potential type overflows.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":95673,"byte_end":95738,"line_start":95,"line_end":95,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":95977,"byte_end":95983,"line_start":103,"line_end":103,"column_start":5,"column_end":11},"name":"square","qualname":"::per_things::PerThing::square","value":"pub fn square(Self) -> Self","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Return the product of multiplication of this value by itself.\n","sig":null,"attributes":[{"value":"/ Return the product of multiplication of this value by itself.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":95907,"byte_end":95972,"line_start":102,"line_end":102,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":96236,"byte_end":96249,"line_start":110,"line_end":110,"column_start":5,"column_end":18},"name":"left_from_one","qualname":"::per_things::PerThing::left_from_one","value":"pub fn left_from_one(Self) -> Self","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Return the part left when `self` is saturating-subtracted from `Self::one()`.\n","sig":null,"attributes":[{"value":"/ Return the part left when `self` is saturating-subtracted from `Self::one()`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":96150,"byte_end":96231,"line_start":109,"line_end":109,"column_start":2,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":96822,"byte_end":96831,"line_start":129,"line_end":129,"column_start":5,"column_end":14},"name":"mul_floor","qualname":"::per_things::PerThing::mul_floor","value":"pub fn mul_floor<N>(Self, N) -> N where N: Clone +\nUniqueSaturatedInto<Self::Inner> + ops::Rem<N, Output = N> + ops::Div<N,\nOutput = N> + ops::Mul<N, Output = N> + ops::Add<N, Output = N> + Unsigned,\nSelf::Inner: Into<N>","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Multiplication that always rounds down to a whole number. The standard `Mul` rounds to the\n nearest whole number.","sig":null,"attributes":[{"value":"/ Multiplication that always rounds down to a whole number. The standard `Mul` rounds to the","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":96306,"byte_end":96400,"line_start":114,"line_end":114,"column_start":2,"column_end":96}},{"value":"/ nearest whole number.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":96402,"byte_end":96427,"line_start":115,"line_end":115,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":96429,"byte_end":96432,"line_start":116,"line_end":116,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":96434,"byte_end":96445,"line_start":117,"line_end":117,"column_start":2,"column_end":13}},{"value":"/ # use sp_arithmetic::{Percent, PerThing};","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":96447,"byte_end":96492,"line_start":118,"line_end":118,"column_start":2,"column_end":47}},{"value":"/ # fn main () {","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":96494,"byte_end":96512,"line_start":119,"line_end":119,"column_start":2,"column_end":20}},{"value":"/ // round to nearest","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":96514,"byte_end":96537,"line_start":120,"line_end":120,"column_start":2,"column_end":25}},{"value":"/ assert_eq!(Percent::from_percent(34) * 10u64, 3);","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":96539,"byte_end":96592,"line_start":121,"line_end":121,"column_start":2,"column_end":55}},{"value":"/ assert_eq!(Percent::from_percent(36) * 10u64, 4);","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":96594,"byte_end":96647,"line_start":122,"line_end":122,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":96649,"byte_end":96652,"line_start":123,"line_end":123,"column_start":2,"column_end":5}},{"value":"/ // round down","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":96654,"byte_end":96671,"line_start":124,"line_end":124,"column_start":2,"column_end":19}},{"value":"/ assert_eq!(Percent::from_percent(34).mul_floor(10u64), 3);","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":96673,"byte_end":96735,"line_start":125,"line_end":125,"column_start":2,"column_end":64}},{"value":"/ assert_eq!(Percent::from_percent(36).mul_floor(10u64), 3);","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":96737,"byte_end":96799,"line_start":126,"line_end":126,"column_start":2,"column_end":64}},{"value":"/ # }","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":96801,"byte_end":96808,"line_start":127,"line_end":127,"column_start":2,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":96810,"byte_end":96817,"line_start":128,"line_end":128,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":97663,"byte_end":97671,"line_start":158,"line_end":158,"column_start":5,"column_end":13},"name":"mul_ceil","qualname":"::per_things::PerThing::mul_ceil","value":"pub fn mul_ceil<N>(Self, N) -> N where N: Clone +\nUniqueSaturatedInto<Self::Inner> + ops::Rem<N, Output = N> + ops::Div<N,\nOutput = N> + ops::Mul<N, Output = N> + ops::Add<N, Output = N> + Unsigned,\nSelf::Inner: Into<N>","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Multiplication that always rounds the result up to a whole number. The standard `Mul`\n rounds to the nearest whole number.","sig":null,"attributes":[{"value":"/ Multiplication that always rounds the result up to a whole number. The standard `Mul`","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":97142,"byte_end":97231,"line_start":143,"line_end":143,"column_start":2,"column_end":91}},{"value":"/ rounds to the nearest whole number.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":97233,"byte_end":97272,"line_start":144,"line_end":144,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":97274,"byte_end":97277,"line_start":145,"line_end":145,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":97279,"byte_end":97290,"line_start":146,"line_end":146,"column_start":2,"column_end":13}},{"value":"/ # use sp_arithmetic::{Percent, PerThing};","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":97292,"byte_end":97337,"line_start":147,"line_end":147,"column_start":2,"column_end":47}},{"value":"/ # fn main () {","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":97339,"byte_end":97357,"line_start":148,"line_end":148,"column_start":2,"column_end":20}},{"value":"/ // round to nearest","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":97359,"byte_end":97382,"line_start":149,"line_end":149,"column_start":2,"column_end":25}},{"value":"/ assert_eq!(Percent::from_percent(34) * 10u64, 3);","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":97384,"byte_end":97437,"line_start":150,"line_end":150,"column_start":2,"column_end":55}},{"value":"/ assert_eq!(Percent::from_percent(36) * 10u64, 4);","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":97439,"byte_end":97492,"line_start":151,"line_end":151,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":97494,"byte_end":97497,"line_start":152,"line_end":152,"column_start":2,"column_end":5}},{"value":"/ // round up","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":97499,"byte_end":97514,"line_start":153,"line_end":153,"column_start":2,"column_end":17}},{"value":"/ assert_eq!(Percent::from_percent(34).mul_ceil(10u64), 4);","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":97516,"byte_end":97577,"line_start":154,"line_end":154,"column_start":2,"column_end":63}},{"value":"/ assert_eq!(Percent::from_percent(36).mul_ceil(10u64), 4);","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":97579,"byte_end":97640,"line_start":155,"line_end":155,"column_start":2,"column_end":63}},{"value":"/ # }","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":97642,"byte_end":97649,"line_start":156,"line_end":156,"column_start":2,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":97651,"byte_end":97658,"line_start":157,"line_end":157,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":98342,"byte_end":98367,"line_start":181,"line_end":181,"column_start":5,"column_end":30},"name":"saturating_reciprocal_mul","qualname":"::per_things::PerThing::saturating_reciprocal_mul","value":"pub fn saturating_reciprocal_mul<N>(Self, N) -> N where N: Clone +\nUniqueSaturatedInto<Self::Inner> + ops::Rem<N, Output = N> + ops::Div<N,\nOutput = N> + ops::Mul<N, Output = N> + ops::Add<N, Output = N> + Saturating +\nUnsigned, Self::Inner: Into<N>","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Saturating multiplication by the reciprocal of `self`.\tThe result is rounded to the\n nearest whole number and saturates at the numeric bounds instead of overflowing.","sig":null,"attributes":[{"value":"/ Saturating multiplication by the reciprocal of `self`.\tThe result is rounded to the","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":97980,"byte_end":98067,"line_start":172,"line_end":172,"column_start":2,"column_end":89}},{"value":"/ nearest whole number and saturates at the numeric bounds instead of overflowing.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":98069,"byte_end":98153,"line_start":173,"line_end":173,"column_start":2,"column_end":86}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":98155,"byte_end":98158,"line_start":174,"line_end":174,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":98160,"byte_end":98171,"line_start":175,"line_end":175,"column_start":2,"column_end":13}},{"value":"/ # use sp_arithmetic::{Percent, PerThing};","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":98173,"byte_end":98218,"line_start":176,"line_end":176,"column_start":2,"column_end":47}},{"value":"/ # fn main () {","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":98220,"byte_end":98238,"line_start":177,"line_end":177,"column_start":2,"column_end":20}},{"value":"/ assert_eq!(Percent::from_percent(50).saturating_reciprocal_mul(10u64), 20);","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":98240,"byte_end":98319,"line_start":178,"line_end":178,"column_start":2,"column_end":81}},{"value":"/ # }","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":98321,"byte_end":98328,"line_start":179,"line_end":179,"column_start":2,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":98330,"byte_end":98337,"line_start":180,"line_end":180,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":99202,"byte_end":99233,"line_start":208,"line_end":208,"column_start":5,"column_end":36},"name":"saturating_reciprocal_mul_floor","qualname":"::per_things::PerThing::saturating_reciprocal_mul_floor","value":"pub fn saturating_reciprocal_mul_floor<N>(Self, N) -> N where N: Clone +\nUniqueSaturatedInto<Self::Inner> + ops::Rem<N, Output = N> + ops::Div<N,\nOutput = N> + ops::Mul<N, Output = N> + ops::Add<N, Output = N> + Saturating +\nUnsigned, Self::Inner: Into<N>","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Saturating multiplication by the reciprocal of `self`.\tThe result is rounded down to the\n nearest whole number and saturates at the numeric bounds instead of overflowing.","sig":null,"attributes":[{"value":"/ Saturating multiplication by the reciprocal of `self`.\tThe result is rounded down to the","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":98704,"byte_end":98796,"line_start":196,"line_end":196,"column_start":2,"column_end":94}},{"value":"/ nearest whole number and saturates at the numeric bounds instead of overflowing.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":98798,"byte_end":98882,"line_start":197,"line_end":197,"column_start":2,"column_end":86}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":98884,"byte_end":98887,"line_start":198,"line_end":198,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":98889,"byte_end":98900,"line_start":199,"line_end":199,"column_start":2,"column_end":13}},{"value":"/ # use sp_arithmetic::{Percent, PerThing};","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":98902,"byte_end":98947,"line_start":200,"line_end":200,"column_start":2,"column_end":47}},{"value":"/ # fn main () {","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":98949,"byte_end":98967,"line_start":201,"line_end":201,"column_start":2,"column_end":20}},{"value":"/ // round to nearest","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":98969,"byte_end":98992,"line_start":202,"line_end":202,"column_start":2,"column_end":25}},{"value":"/ assert_eq!(Percent::from_percent(60).saturating_reciprocal_mul(10u64), 17);","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":98994,"byte_end":99073,"line_start":203,"line_end":203,"column_start":2,"column_end":81}},{"value":"/ // round down","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":99075,"byte_end":99092,"line_start":204,"line_end":204,"column_start":2,"column_end":19}},{"value":"/ assert_eq!(Percent::from_percent(60).saturating_reciprocal_mul_floor(10u64), 16);","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":99094,"byte_end":99179,"line_start":205,"line_end":205,"column_start":2,"column_end":87}},{"value":"/ # }","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":99181,"byte_end":99188,"line_start":206,"line_end":206,"column_start":2,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":99190,"byte_end":99197,"line_start":207,"line_end":207,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":100060,"byte_end":100090,"line_start":235,"line_end":235,"column_start":5,"column_end":35},"name":"saturating_reciprocal_mul_ceil","qualname":"::per_things::PerThing::saturating_reciprocal_mul_ceil","value":"pub fn saturating_reciprocal_mul_ceil<N>(Self, N) -> N where N: Clone +\nUniqueSaturatedInto<Self::Inner> + ops::Rem<N, Output = N> + ops::Div<N,\nOutput = N> + ops::Mul<N, Output = N> + ops::Add<N, Output = N> + Saturating +\nUnsigned, Self::Inner: Into<N>","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Saturating multiplication by the reciprocal of `self`.\tThe result is rounded up to the\n nearest whole number and saturates at the numeric bounds instead of overflowing.","sig":null,"attributes":[{"value":"/ Saturating multiplication by the reciprocal of `self`.\tThe result is rounded up to the","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":99567,"byte_end":99657,"line_start":223,"line_end":223,"column_start":2,"column_end":92}},{"value":"/ nearest whole number and saturates at the numeric bounds instead of overflowing.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":99659,"byte_end":99743,"line_start":224,"line_end":224,"column_start":2,"column_end":86}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":99745,"byte_end":99748,"line_start":225,"line_end":225,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":99750,"byte_end":99761,"line_start":226,"line_end":226,"column_start":2,"column_end":13}},{"value":"/ # use sp_arithmetic::{Percent, PerThing};","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":99763,"byte_end":99808,"line_start":227,"line_end":227,"column_start":2,"column_end":47}},{"value":"/ # fn main () {","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":99810,"byte_end":99828,"line_start":228,"line_end":228,"column_start":2,"column_end":20}},{"value":"/ // round to nearest","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":99830,"byte_end":99853,"line_start":229,"line_end":229,"column_start":2,"column_end":25}},{"value":"/ assert_eq!(Percent::from_percent(61).saturating_reciprocal_mul(10u64), 16);","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":99855,"byte_end":99934,"line_start":230,"line_end":230,"column_start":2,"column_end":81}},{"value":"/ // round up","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":99936,"byte_end":99951,"line_start":231,"line_end":231,"column_start":2,"column_end":17}},{"value":"/ assert_eq!(Percent::from_percent(61).saturating_reciprocal_mul_ceil(10u64), 17);","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":99953,"byte_end":100037,"line_start":232,"line_end":232,"column_start":2,"column_end":86}},{"value":"/ # }","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":100039,"byte_end":100046,"line_start":233,"line_end":233,"column_start":2,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":100048,"byte_end":100055,"line_start":234,"line_end":234,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":100485,"byte_end":100496,"line_start":251,"line_end":251,"column_start":5,"column_end":16},"name":"deconstruct","qualname":"::per_things::PerThing::deconstruct","value":"pub fn deconstruct(Self) -> Self::Inner","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Consume self and return the number of parts per thing.\n","sig":null,"attributes":[{"value":"/ Consume self and return the number of parts per thing.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":100422,"byte_end":100480,"line_start":250,"line_end":250,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":100579,"byte_end":100589,"line_start":254,"line_end":254,"column_start":5,"column_end":15},"name":"from_parts","qualname":"::per_things::PerThing::from_parts","value":"pub fn from_parts(Self::Inner) -> Self","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Build this type from a number of parts per thing.\n","sig":null,"attributes":[{"value":"/ Build this type from a number of parts per thing.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":100521,"byte_end":100574,"line_start":253,"line_end":253,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":100687,"byte_end":100697,"line_start":258,"line_end":258,"column_start":5,"column_end":15},"name":"from_float","qualname":"::per_things::PerThing::from_float","value":"pub fn from_float(f64) -> Self","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Converts a fraction into `Self`.\n","sig":null,"attributes":[{"value":"/ Converts a fraction into `Self`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":100621,"byte_end":100657,"line_start":256,"line_end":256,"column_start":2,"column_end":38}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":100659,"byte_end":100682,"line_start":257,"line_end":257,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":100820,"byte_end":100833,"line_start":263,"line_end":263,"column_start":5,"column_end":18},"name":"from_fraction","qualname":"::per_things::PerThing::from_fraction","value":"pub fn from_fraction(f64) -> Self","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Same as `Self::from_float`.\n","sig":null,"attributes":[{"value":"/ Same as `Self::from_float`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":100717,"byte_end":100748,"line_start":260,"line_end":260,"column_start":2,"column_end":33}},{"value":"deprecated = \"Use from_float instead\"","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":100750,"byte_end":100790,"line_start":261,"line_end":261,"column_start":2,"column_end":42}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":100792,"byte_end":100815,"line_start":262,"line_end":262,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":101533,"byte_end":101546,"line_start":285,"line_end":285,"column_start":5,"column_end":18},"name":"from_rational","qualname":"::per_things::PerThing::from_rational","value":"pub fn from_rational<N>(N, N) -> Self where N: Clone + Ord +\nTryInto<Self::Inner> + TryInto<Self::Upper> + ops::Div<N, Output = N> +\nops::Rem<N, Output = N> + ops::Add<N, Output = N> + Unsigned,\nSelf::Inner: Into<N>","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Approximate the fraction `p/q` into a per-thing fraction. This will never overflow.","sig":null,"attributes":[{"value":"/ Approximate the fraction `p/q` into a per-thing fraction. This will never overflow.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":100879,"byte_end":100966,"line_start":267,"line_end":267,"column_start":2,"column_end":89}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":100968,"byte_end":100971,"line_start":268,"line_end":268,"column_start":2,"column_end":5}},{"value":"/ The computation of this approximation is performed in the generic type `N`. Given","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":100973,"byte_end":101058,"line_start":269,"line_end":269,"column_start":2,"column_end":87}},{"value":"/ `M` as the data type that can hold the maximum value of this per-thing (e.g. u32 for","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":101060,"byte_end":101148,"line_start":270,"line_end":270,"column_start":2,"column_end":90}},{"value":"/ perbill), this can only work if `N == M` or `N: From<M> + TryInto<M>`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":101150,"byte_end":101224,"line_start":271,"line_end":271,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":101226,"byte_end":101229,"line_start":272,"line_end":272,"column_start":2,"column_end":5}},{"value":"/ Note that this always rounds _down_, i.e.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":101231,"byte_end":101276,"line_start":273,"line_end":273,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":101278,"byte_end":101281,"line_start":274,"line_end":274,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":101283,"byte_end":101294,"line_start":275,"line_end":275,"column_start":2,"column_end":13}},{"value":"/ # use sp_arithmetic::{Percent, PerThing};","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":101296,"byte_end":101341,"line_start":276,"line_end":276,"column_start":2,"column_end":47}},{"value":"/ # fn main () {","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":101343,"byte_end":101361,"line_start":277,"line_end":277,"column_start":2,"column_end":20}},{"value":"/ // 989/100 is technically closer to 99%.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":101363,"byte_end":101407,"line_start":278,"line_end":278,"column_start":2,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":101409,"byte_end":101424,"line_start":279,"line_end":279,"column_start":2,"column_end":17}},{"value":"/ \t\tPercent::from_rational(989u64, 1000),","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":101426,"byte_end":101469,"line_start":280,"line_end":280,"column_start":2,"column_end":45}},{"value":"/ \t\tPercent::from_parts(98),","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":101471,"byte_end":101501,"line_start":281,"line_end":281,"column_start":2,"column_end":32}},{"value":"/ \t);","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":101503,"byte_end":101510,"line_start":282,"line_end":282,"column_start":2,"column_end":9}},{"value":"/ # }","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":101512,"byte_end":101519,"line_start":283,"line_end":283,"column_start":2,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":101521,"byte_end":101528,"line_start":284,"line_end":284,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":101861,"byte_end":101888,"line_start":299,"line_end":299,"column_start":5,"column_end":32},"name":"from_rational_approximation","qualname":"::per_things::PerThing::from_rational_approximation","value":"pub fn from_rational_approximation<N>(N, N) -> Self where N: Clone + Ord +\nTryInto<Self::Inner> + TryInto<Self::Upper> + ops::Div<N, Output = N> +\nops::Rem<N, Output = N> + ops::Add<N, Output = N> + Unsigned + Zero + One,\nSelf::Inner: Into<N>","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Same as `Self::from_rational`.\n","sig":null,"attributes":[{"value":"/ Same as `Self::from_rational`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":101777,"byte_end":101811,"line_start":297,"line_end":297,"column_start":2,"column_end":36}},{"value":"deprecated = \"Use from_rational instead\"","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":101813,"byte_end":101856,"line_start":298,"line_end":298,"column_start":2,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1272},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":138427,"byte_end":138434,"line_start":1591,"line_end":1591,"column_start":22,"column_end":29},"name":"Percent","qualname":"::per_things::Percent","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed point representation of a number in the range [0, 1].","sig":null,"attributes":[{"value":"/ A fixed point representation of a number in the range [0, 1].","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":105541,"byte_end":105606,"line_start":424,"line_end":424,"column_start":3,"column_end":68}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":105609,"byte_end":105612,"line_start":425,"line_end":425,"column_start":3,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":1428},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":138540,"byte_end":138546,"line_start":1593,"line_end":1593,"column_start":2,"column_end":8},"name":"PerU16","qualname":"::per_things::PerU16","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed point representation of a number in the range [0, 1].","sig":null,"attributes":[{"value":"/ A fixed point representation of a number in the range [0, 1].","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":105541,"byte_end":105606,"line_start":424,"line_end":424,"column_start":3,"column_end":68}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":105609,"byte_end":105612,"line_start":425,"line_end":425,"column_start":3,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":1584},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":138690,"byte_end":138697,"line_start":1603,"line_end":1603,"column_start":2,"column_end":9},"name":"Permill","qualname":"::per_things::Permill","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed point representation of a number in the range [0, 1].","sig":null,"attributes":[{"value":"/ A fixed point representation of a number in the range [0, 1].","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":105541,"byte_end":105606,"line_start":424,"line_end":424,"column_start":3,"column_end":68}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":105609,"byte_end":105612,"line_start":425,"line_end":425,"column_start":3,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":1740},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":138848,"byte_end":138855,"line_start":1613,"line_end":1613,"column_start":2,"column_end":9},"name":"Perbill","qualname":"::per_things::Perbill","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed point representation of a number in the range [0, 1].","sig":null,"attributes":[{"value":"/ A fixed point representation of a number in the range [0, 1].","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":105541,"byte_end":105606,"line_start":424,"line_end":424,"column_start":3,"column_end":68}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":105609,"byte_end":105612,"line_start":425,"line_end":425,"column_start":3,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":1896},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":139010,"byte_end":139021,"line_start":1623,"line_end":1623,"column_start":2,"column_end":13},"name":"Perquintill","qualname":"::per_things::Perquintill","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed point representation of a number in the range [0, 1].","sig":null,"attributes":[{"value":"/ A fixed point representation of a number in the range [0, 1].","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":105541,"byte_end":105606,"line_start":424,"line_end":424,"column_start":3,"column_end":68}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":105609,"byte_end":105612,"line_start":425,"line_end":425,"column_start":3,"column_end":6}}]},{"kind":"Mod","id":{"krate":0,"index":429},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rational","qualname":"::rational","value":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":1932},{"krate":0,"index":1936},{"krate":0,"index":1938},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":452},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":1943},{"krate":0,"index":1947},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":489},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":499}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1932},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":140222,"byte_end":140238,"line_start":27,"line_end":27,"column_start":12,"column_end":28},"name":"RationalInfinite","qualname":"::rational::RationalInfinite","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper for any rational number with infinitely large numerator and denominator.","sig":null,"attributes":[{"value":"/ A wrapper for any rational number with infinitely large numerator and denominator.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":139970,"byte_end":140056,"line_start":22,"line_end":22,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":140057,"byte_end":140060,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type exists to facilitate `cmp` operation","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":140061,"byte_end":140111,"line_start":24,"line_end":24,"column_start":1,"column_end":51}},{"value":"/ on values like `a/b < c/d` where `a, b, c, d` are all `BigUint`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":140112,"byte_end":140180,"line_start":25,"line_end":25,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":140328,"byte_end":140329,"line_start":31,"line_end":31,"column_start":9,"column_end":10},"name":"n","qualname":"<RationalInfinite>::n","value":"pub fn n(&Self) -> &BigUint","parent":null,"children":[],"decl_id":null,"docs":" Return the numerator reference.\n","sig":null,"attributes":[{"value":"/ Return the numerator reference.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":140284,"byte_end":140319,"line_start":30,"line_end":30,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":140412,"byte_end":140413,"line_start":36,"line_end":36,"column_start":9,"column_end":10},"name":"d","qualname":"<RationalInfinite>::d","value":"pub fn d(&Self) -> &BigUint","parent":null,"children":[],"decl_id":null,"docs":" Return the denominator reference.\n","sig":null,"attributes":[{"value":"/ Return the denominator reference.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":140366,"byte_end":140403,"line_start":35,"line_end":35,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":140486,"byte_end":140490,"line_start":41,"line_end":41,"column_start":9,"column_end":13},"name":"from","qualname":"<RationalInfinite>::from","value":"pub fn from(BigUint, BigUint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Build from a raw `n/d`.\n","sig":null,"attributes":[{"value":"/ Build from a raw `n/d`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":140450,"byte_end":140477,"line_start":40,"line_end":40,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":140581,"byte_end":140585,"line_start":46,"line_end":46,"column_start":9,"column_end":13},"name":"zero","qualname":"<RationalInfinite>::zero","value":"pub fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Zero.\n","sig":null,"attributes":[{"value":"/ Zero.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":140563,"byte_end":140572,"line_start":45,"line_end":45,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":140660,"byte_end":140663,"line_start":51,"line_end":51,"column_start":9,"column_end":12},"name":"one","qualname":"<RationalInfinite>::one","value":"pub fn one() -> Self","parent":null,"children":[],"decl_id":null,"docs":" One.\n","sig":null,"attributes":[{"value":"/ One.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":140643,"byte_end":140651,"line_start":50,"line_end":50,"column_start":2,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":1943},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":141617,"byte_end":141628,"line_start":92,"line_end":92,"column_start":12,"column_end":23},"name":"Rational128","qualname":"::rational::Rational128","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper for any rational number with a 128 bit numerator and denominator.\n","sig":null,"attributes":[{"value":"/ A wrapper for any rational number with a 128 bit numerator and denominator.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":141490,"byte_end":141569,"line_start":90,"line_end":90,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":142078,"byte_end":142082,"line_start":110,"line_end":110,"column_start":9,"column_end":13},"name":"zero","qualname":"<Rational128>::zero","value":"pub fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Zero.\n","sig":null,"attributes":[{"value":"/ Zero.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":142060,"byte_end":142069,"line_start":109,"line_end":109,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":142129,"byte_end":142132,"line_start":115,"line_end":115,"column_start":9,"column_end":12},"name":"one","qualname":"<Rational128>::one","value":"pub fn one() -> Self","parent":null,"children":[],"decl_id":null,"docs":" One\n","sig":null,"attributes":[{"value":"/ One","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":142113,"byte_end":142120,"line_start":114,"line_end":114,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":142196,"byte_end":142203,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"name":"is_zero","qualname":"<Rational128>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If it is zero or not\n","sig":null,"attributes":[{"value":"/ If it is zero or not","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":142163,"byte_end":142187,"line_start":119,"line_end":119,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":142281,"byte_end":142285,"line_start":125,"line_end":125,"column_start":9,"column_end":13},"name":"from","qualname":"<Rational128>::from","value":"pub fn from(u128, u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Build from a raw `n/d`.\n","sig":null,"attributes":[{"value":"/ Build from a raw `n/d`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":142245,"byte_end":142272,"line_start":124,"line_end":124,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":142423,"byte_end":142437,"line_start":130,"line_end":130,"column_start":9,"column_end":23},"name":"from_unchecked","qualname":"<Rational128>::from_unchecked","value":"pub fn from_unchecked(u128, u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Build from a raw `n/d`. This could lead to / 0 if not properly handled.\n","sig":null,"attributes":[{"value":"/ Build from a raw `n/d`. This could lead to / 0 if not properly handled.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":142339,"byte_end":142414,"line_start":129,"line_end":129,"column_start":2,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":142518,"byte_end":142519,"line_start":135,"line_end":135,"column_start":9,"column_end":10},"name":"n","qualname":"<Rational128>::n","value":"pub fn n(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Return the numerator.\n","sig":null,"attributes":[{"value":"/ Return the numerator.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":142484,"byte_end":142509,"line_start":134,"line_end":134,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":142587,"byte_end":142588,"line_start":140,"line_end":140,"column_start":9,"column_end":10},"name":"d","qualname":"<Rational128>::d","value":"pub fn d(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Return the denominator.\n","sig":null,"attributes":[{"value":"/ Return the denominator.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":142551,"byte_end":142578,"line_start":139,"line_end":139,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":142838,"byte_end":142844,"line_start":148,"line_end":148,"column_start":9,"column_end":15},"name":"to_den","qualname":"<Rational128>::to_den","value":"pub fn to_den(Self, u128) -> Result<Self, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Convert `self` to a similar rational number where denominator is the given `den`.\n This only returns if the result is accurate. `Err` is returned if the result cannot be\n accurately calculated.\n","sig":null,"attributes":[{"value":"/ Convert `self` to a similar rational number where denominator is the given `den`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":142620,"byte_end":142705,"line_start":144,"line_end":144,"column_start":2,"column_end":87}},{"value":"/ This only returns if the result is accurate. `Err` is returned if the result cannot be","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":142711,"byte_end":142801,"line_start":146,"line_end":146,"column_start":2,"column_end":92}},{"value":"/ accurately calculated.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":142803,"byte_end":142829,"line_start":147,"line_end":147,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":143219,"byte_end":143222,"line_start":160,"line_end":160,"column_start":9,"column_end":12},"name":"lcm","qualname":"<Rational128>::lcm","value":"pub fn lcm(&Self, &Self) -> Result<u128, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Get the least common divisor of `self` and `other`.","sig":null,"attributes":[{"value":"/ Get the least common divisor of `self` and `other`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":143030,"byte_end":143085,"line_start":156,"line_end":156,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":143087,"byte_end":143090,"line_start":157,"line_end":157,"column_start":2,"column_end":5}},{"value":"/ This only returns if the result is accurate. `Err` is returned if the result cannot be","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":143092,"byte_end":143182,"line_start":158,"line_end":158,"column_start":2,"column_end":92}},{"value":"/ accurately calculated.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":143184,"byte_end":143210,"line_start":159,"line_end":159,"column_start":2,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":143605,"byte_end":143624,"line_start":170,"line_end":170,"column_start":9,"column_end":28},"name":"lazy_saturating_add","qualname":"<Rational128>::lazy_saturating_add","value":"pub fn lazy_saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A saturating add that assumes `self` and `other` have the same denominator.\n","sig":null,"attributes":[{"value":"/ A saturating add that assumes `self` and `other` have the same denominator.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":143517,"byte_end":143596,"line_start":169,"line_end":169,"column_start":2,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":143849,"byte_end":143868,"line_start":179,"line_end":179,"column_start":9,"column_end":28},"name":"lazy_saturating_sub","qualname":"<Rational128>::lazy_saturating_sub","value":"pub fn lazy_saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A saturating subtraction that assumes `self` and `other` have the same denominator.\n","sig":null,"attributes":[{"value":"/ A saturating subtraction that assumes `self` and `other` have the same denominator.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":143753,"byte_end":143840,"line_start":178,"line_end":178,"column_start":2,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":144172,"byte_end":144183,"line_start":190,"line_end":190,"column_start":9,"column_end":20},"name":"checked_add","qualname":"<Rational128>::checked_add","value":"pub fn checked_add(Self, Self) -> Result<Self, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Addition. Simply tries to unify the denominators and add the numerators.","sig":null,"attributes":[{"value":"/ Addition. Simply tries to unify the denominators and add the numerators.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":143997,"byte_end":144073,"line_start":187,"line_end":187,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":144075,"byte_end":144078,"line_start":188,"line_end":188,"column_start":2,"column_end":5}},{"value":"/ Overflow might happen during any of the steps. Error is returned in such cases.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":144080,"byte_end":144163,"line_start":189,"line_end":189,"column_start":2,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":144808,"byte_end":144819,"line_start":204,"line_end":204,"column_start":9,"column_end":20},"name":"checked_sub","qualname":"<Rational128>::checked_sub","value":"pub fn checked_sub(Self, Self) -> Result<Self, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Subtraction. Simply tries to unify the denominators and subtract the numerators.","sig":null,"attributes":[{"value":"/ Subtraction. Simply tries to unify the denominators and subtract the numerators.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":144626,"byte_end":144710,"line_start":201,"line_end":201,"column_start":2,"column_end":86}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":144712,"byte_end":144715,"line_start":202,"line_end":202,"column_start":2,"column_end":5}},{"value":"/ Overflow might happen during any of the steps. None is returned in such cases.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":144717,"byte_end":144799,"line_start":203,"line_end":203,"column_start":2,"column_end":84}}]},{"kind":"Mod","id":{"krate":0,"index":501},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":536},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":614},{"krate":0,"index":619},{"krate":0,"index":624},{"krate":0,"index":633},{"krate":0,"index":641},{"krate":0,"index":646}],"decl_id":null,"docs":" Primitive traits for the runtime arithmetic.\n","sig":null,"attributes":[{"value":"/ Primitive traits for the runtime arithmetic.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":152676,"byte_end":152724,"line_start":18,"line_end":18,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":599},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153220,"byte_end":153234,"line_start":35,"line_end":35,"column_start":11,"column_end":25},"name":"BaseArithmetic","qualname":"::traits::BaseArithmetic","value":"BaseArithmetic: From<u8> + Zero + One + IntegerSquareRoot + Add<Self, Output = Self> +\nAddAssign<Self> + Sub<Self, Output = Self> + SubAssign<Self> + Mul<Self,\nOutput = Self> + MulAssign<Self> + Div<Self, Output = Self> +\nDivAssign<Self> + Rem<Self, Output = Self> + RemAssign<Self> + Shl<u32, Output\n= Self> + Shr<u32, Output = Self> + CheckedShl + CheckedShr + CheckedAdd +\nCheckedSub + CheckedMul + CheckedDiv + CheckedRem + Saturating +\nPartialOrd<Self> + Ord + Bounded + HasCompact + Sized + TryFrom<u8> +\nTryInto<u8> + TryFrom<u16> + TryInto<u16> + TryFrom<u32> + TryInto<u32> +\nTryFrom<u64> + TryInto<u64> + TryFrom<u128> + TryInto<u128> + TryFrom<usize> +\nTryInto<usize> + UniqueSaturatedFrom<u8> + UniqueSaturatedInto<u8> +\nUniqueSaturatedFrom<u16> + UniqueSaturatedInto<u16> +\nUniqueSaturatedFrom<u32> + UniqueSaturatedInto<u32> +\nUniqueSaturatedFrom<u64> + UniqueSaturatedInto<u64> +\nUniqueSaturatedFrom<u128> + UniqueSaturatedInto<u128>","parent":null,"children":[],"decl_id":null,"docs":" A meta trait for arithmetic type operations, regardless of any limitation on size.\n","sig":null,"attributes":[{"value":"/ A meta trait for arithmetic type operations, regardless of any limitation on size.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153123,"byte_end":153209,"line_start":34,"line_end":34,"column_start":1,"column_end":87}}]},{"kind":"Trait","id":{"krate":0,"index":602},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":155650,"byte_end":155662,"line_start":151,"line_end":151,"column_start":11,"column_end":23},"name":"AtLeast32Bit","qualname":"::traits::AtLeast32Bit","value":"AtLeast32Bit: BaseArithmetic + From<u16> + From<u32>","parent":null,"children":[],"decl_id":null,"docs":" A meta trait for arithmetic.","sig":null,"attributes":[{"value":"/ A meta trait for arithmetic.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":155349,"byte_end":155381,"line_start":146,"line_end":146,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":155382,"byte_end":155385,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Arithmetic types do all the usual stuff you'd expect numbers to do. They are guaranteed to","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":155386,"byte_end":155480,"line_start":148,"line_end":148,"column_start":1,"column_end":95}},{"value":"/ be able to represent at least `u32` values without loss, hence the trait implies `From<u32>`","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":155481,"byte_end":155577,"line_start":149,"line_end":149,"column_start":1,"column_end":97}},{"value":"/ and smaller integers. All other conversions are fallible.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":155578,"byte_end":155639,"line_start":150,"line_end":150,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":605},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":155882,"byte_end":155902,"line_start":156,"line_end":156,"column_start":11,"column_end":31},"name":"AtLeast32BitUnsigned","qualname":"::traits::AtLeast32BitUnsigned","value":"AtLeast32BitUnsigned: AtLeast32Bit + Unsigned","parent":null,"children":[],"decl_id":null,"docs":" A meta trait for arithmetic.  Same as [`AtLeast32Bit `], but also bounded to be unsigned.\n","sig":null,"attributes":[{"value":"/ A meta trait for arithmetic.  Same as [`AtLeast32Bit `], but also bounded to be unsigned.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":155778,"byte_end":155871,"line_start":155,"line_end":155,"column_start":1,"column_end":94}}]},{"kind":"Trait","id":{"krate":0,"index":608},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":156144,"byte_end":156163,"line_start":162,"line_end":162,"column_start":11,"column_end":30},"name":"UniqueSaturatedFrom","qualname":"::traits::UniqueSaturatedFrom","value":"UniqueSaturatedFrom<T: Sized>: Sized","parent":null,"children":[{"krate":0,"index":610}],"decl_id":null,"docs":" Just like `From` except that if the source value is too big to fit into the destination type\n then it'll saturate the destination.\n","sig":null,"attributes":[{"value":"/ Just like `From` except that if the source value is too big to fit into the destination type","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":155996,"byte_end":156092,"line_start":160,"line_end":160,"column_start":1,"column_end":97}},{"value":"/ then it'll saturate the destination.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":156093,"byte_end":156133,"line_start":161,"line_end":161,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":156259,"byte_end":156280,"line_start":164,"line_end":164,"column_start":5,"column_end":26},"name":"unique_saturated_from","qualname":"::traits::UniqueSaturatedFrom::unique_saturated_from","value":"pub fn unique_saturated_from(T) -> Self","parent":{"krate":0,"index":608},"children":[],"decl_id":null,"docs":" Convert from a value of `T` into an equivalent instance of `Self`.\n","sig":null,"attributes":[{"value":"/ Convert from a value of `T` into an equivalent instance of `Self`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":156184,"byte_end":156254,"line_start":163,"line_end":163,"column_start":2,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":611},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":156447,"byte_end":156466,"line_start":169,"line_end":169,"column_start":11,"column_end":30},"name":"UniqueSaturatedInto","qualname":"::traits::UniqueSaturatedInto","value":"UniqueSaturatedInto<T: Sized>: Sized","parent":null,"children":[{"krate":0,"index":613}],"decl_id":null,"docs":" Just like `Into` except that if the source value is too big to fit into the destination type\n then it'll saturate the destination.\n","sig":null,"attributes":[{"value":"/ Just like `Into` except that if the source value is too big to fit into the destination type","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":156299,"byte_end":156395,"line_start":167,"line_end":167,"column_start":1,"column_end":97}},{"value":"/ then it'll saturate the destination.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":156396,"byte_end":156436,"line_start":168,"line_end":168,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":156546,"byte_end":156567,"line_start":171,"line_end":171,"column_start":5,"column_end":26},"name":"unique_saturated_into","qualname":"::traits::UniqueSaturatedInto::unique_saturated_into","value":"pub fn unique_saturated_into(Self) -> T","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" Consume self to return an equivalent value of `T`.\n","sig":null,"attributes":[{"value":"/ Consume self to return an equivalent value of `T`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":156487,"byte_end":156541,"line_start":170,"line_end":170,"column_start":2,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":624},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":157059,"byte_end":157069,"line_start":187,"line_end":187,"column_start":11,"column_end":21},"name":"Saturating","qualname":"::traits::Saturating","value":"Saturating","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632}],"decl_id":null,"docs":" Saturating arithmetic operations, returning maximum or minimum values instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating arithmetic operations, returning maximum or minimum values instead of overflowing.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":156951,"byte_end":157048,"line_start":186,"line_end":186,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":157186,"byte_end":157200,"line_start":190,"line_end":190,"column_start":5,"column_end":19},"name":"saturating_add","qualname":"::traits::Saturating::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" Saturating addition. Compute `self + rhs`, saturating at the numeric bounds instead of\n overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating addition. Compute `self + rhs`, saturating at the numeric bounds instead of","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":157073,"byte_end":157163,"line_start":188,"line_end":188,"column_start":2,"column_end":92}},{"value":"/ overflowing.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":157165,"byte_end":157181,"line_start":189,"line_end":189,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":157345,"byte_end":157359,"line_start":194,"line_end":194,"column_start":5,"column_end":19},"name":"saturating_sub","qualname":"::traits::Saturating::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" Saturating subtraction. Compute `self - rhs`, saturating at the numeric bounds instead of\n overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating subtraction. Compute `self - rhs`, saturating at the numeric bounds instead of","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":157229,"byte_end":157322,"line_start":192,"line_end":192,"column_start":2,"column_end":95}},{"value":"/ overflowing.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":157324,"byte_end":157340,"line_start":193,"line_end":193,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":157501,"byte_end":157515,"line_start":198,"line_end":198,"column_start":5,"column_end":19},"name":"saturating_mul","qualname":"::traits::Saturating::saturating_mul","value":"pub fn saturating_mul(Self, Self) -> Self","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" Saturating multiply. Compute `self * rhs`, saturating at the numeric bounds instead of\n overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating multiply. Compute `self * rhs`, saturating at the numeric bounds instead of","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":157388,"byte_end":157478,"line_start":196,"line_end":196,"column_start":2,"column_end":92}},{"value":"/ overflowing.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":157480,"byte_end":157496,"line_start":197,"line_end":197,"column_start":2,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":157666,"byte_end":157680,"line_start":202,"line_end":202,"column_start":5,"column_end":19},"name":"saturating_pow","qualname":"::traits::Saturating::saturating_pow","value":"pub fn saturating_pow(Self, usize) -> Self","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" Saturating exponentiation. Compute `self.pow(exp)`, saturating at the numeric bounds\n instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating exponentiation. Compute `self.pow(exp)`, saturating at the numeric bounds","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":157544,"byte_end":157632,"line_start":200,"line_end":200,"column_start":2,"column_end":90}},{"value":"/ instead of overflowing.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":157634,"byte_end":157661,"line_start":201,"line_end":201,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":157753,"byte_end":157767,"line_start":205,"line_end":205,"column_start":5,"column_end":19},"name":"saturating_inc","qualname":"::traits::Saturating::saturating_inc","value":"pub fn saturating_inc(&mut Self) where Self: One","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" Increment self by one, saturating.\n","sig":null,"attributes":[{"value":"/ Increment self by one, saturating.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":157710,"byte_end":157748,"line_start":204,"line_end":204,"column_start":2,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":157960,"byte_end":157974,"line_start":215,"line_end":215,"column_start":5,"column_end":19},"name":"saturating_dec","qualname":"::traits::Saturating::saturating_dec","value":"pub fn saturating_dec(&mut Self) where Self: One","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" Decrement self by one, saturating at zero.\n","sig":null,"attributes":[{"value":"/ Decrement self by one, saturating at zero.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":157909,"byte_end":157955,"line_start":214,"line_end":214,"column_start":2,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":158169,"byte_end":158186,"line_start":225,"line_end":225,"column_start":5,"column_end":22},"name":"saturating_accrue","qualname":"::traits::Saturating::saturating_accrue","value":"pub fn saturating_accrue(&mut Self, Self) where Self: One","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" Increment self by some `amount`, saturating.\n","sig":null,"attributes":[{"value":"/ Increment self by some `amount`, saturating.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":158116,"byte_end":158164,"line_start":224,"line_end":224,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":158399,"byte_end":158416,"line_start":235,"line_end":235,"column_start":5,"column_end":22},"name":"saturating_reduce","qualname":"::traits::Saturating::saturating_reduce","value":"pub fn saturating_reduce(&mut Self, Self) where Self: One","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" Decrement self by some `amount`, saturating at zero.\n","sig":null,"attributes":[{"value":"/ Decrement self by some `amount`, saturating at zero.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":158338,"byte_end":158394,"line_start":234,"line_end":234,"column_start":2,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":641},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":159526,"byte_end":159545,"line_start":281,"line_end":281,"column_start":11,"column_end":30},"name":"SaturatedConversion","qualname":"::traits::SaturatedConversion","value":"SaturatedConversion","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":644}],"decl_id":null,"docs":" Convenience type to work around the highly unergonomic syntax needed\n to invoke the functions of overloaded generic traits, in this case\n `SaturatedFrom` and `SaturatedInto`.\n","sig":null,"attributes":[{"value":"/ Convenience type to work around the highly unergonomic syntax needed","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":159331,"byte_end":159403,"line_start":278,"line_end":278,"column_start":1,"column_end":73}},{"value":"/ to invoke the functions of overloaded generic traits, in this case","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":159404,"byte_end":159474,"line_start":279,"line_end":279,"column_start":1,"column_end":71}},{"value":"/ `SaturatedFrom` and `SaturatedInto`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":159475,"byte_end":159515,"line_start":280,"line_end":280,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":159827,"byte_end":159841,"line_start":287,"line_end":287,"column_start":5,"column_end":19},"name":"saturated_from","qualname":"::traits::SaturatedConversion::saturated_from","value":"pub fn saturated_from<T>(T) -> Self where Self: UniqueSaturatedFrom<T>","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":" Convert from a value of `T` into an equivalent instance of `Self`.","sig":null,"attributes":[{"value":"/ Convert from a value of `T` into an equivalent instance of `Self`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":159549,"byte_end":159619,"line_start":282,"line_end":282,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":159621,"byte_end":159624,"line_start":283,"line_end":283,"column_start":2,"column_end":5}},{"value":"/ This just uses `UniqueSaturatedFrom` internally but with this","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":159626,"byte_end":159691,"line_start":284,"line_end":284,"column_start":2,"column_end":67}},{"value":"/ variant you can provide the destination type using turbofish syntax","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":159693,"byte_end":159764,"line_start":285,"line_end":285,"column_start":2,"column_end":73}},{"value":"/ in case Rust happens not to assume the correct type.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":159766,"byte_end":159822,"line_start":286,"line_end":286,"column_start":2,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":160229,"byte_end":160243,"line_start":299,"line_end":299,"column_start":5,"column_end":19},"name":"saturated_into","qualname":"::traits::SaturatedConversion::saturated_into","value":"pub fn saturated_into<T>(Self) -> T where Self: UniqueSaturatedInto<T>","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":" Consume self to return an equivalent value of `T`.","sig":null,"attributes":[{"value":"/ Consume self to return an equivalent value of `T`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":159967,"byte_end":160021,"line_start":294,"line_end":294,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":160023,"byte_end":160026,"line_start":295,"line_end":295,"column_start":2,"column_end":5}},{"value":"/ This just uses `UniqueSaturatedInto` internally but with this","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":160028,"byte_end":160093,"line_start":296,"line_end":296,"column_start":2,"column_end":67}},{"value":"/ variant you can provide the destination type using turbofish syntax","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":160095,"byte_end":160166,"line_start":297,"line_end":297,"column_start":2,"column_end":73}},{"value":"/ in case Rust happens not to assume the correct type.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":160168,"byte_end":160224,"line_start":298,"line_end":298,"column_start":2,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":723},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1856,"byte_end":1868,"line_start":56,"line_end":56,"column_start":11,"column_end":23},"name":"ThresholdOrd","qualname":"::ThresholdOrd","value":"ThresholdOrd<T>","parent":null,"children":[{"krate":0,"index":725}],"decl_id":null,"docs":" Trait for comparing two numbers with an threshold.","sig":null,"attributes":[{"value":"/ Trait for comparing two numbers with an threshold.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1599,"byte_end":1653,"line_start":50,"line_end":50,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1654,"byte_end":1657,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Returns:","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1658,"byte_end":1670,"line_start":52,"line_end":52,"column_start":1,"column_end":13}},{"value":"/ - `Ordering::Greater` if `self` is greater than `other + threshold`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1671,"byte_end":1743,"line_start":53,"line_end":53,"column_start":1,"column_end":73}},{"value":"/ - `Ordering::Less` if `self` is less than `other - threshold`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1744,"byte_end":1810,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/ - `Ordering::Equal` otherwise.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1811,"byte_end":1845,"line_start":55,"line_end":55,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1946,"byte_end":1950,"line_start":58,"line_end":58,"column_start":5,"column_end":9},"name":"tcmp","qualname":"::ThresholdOrd::tcmp","value":"pub fn tcmp(&Self, &T, T) -> Ordering","parent":{"krate":0,"index":723},"children":[],"decl_id":null,"docs":" Compare if `self` is `threshold` greater or less than `other`.\n","sig":null,"attributes":[{"value":"/ Compare if `self` is `threshold` greater or less than `other`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1875,"byte_end":1941,"line_start":57,"line_end":57,"column_start":2,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":729},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":2954,"byte_end":2966,"line_start":92,"line_end":92,"column_start":11,"column_end":23},"name":"Normalizable","qualname":"::Normalizable","value":"Normalizable<T>","parent":null,"children":[{"krate":0,"index":731}],"decl_id":null,"docs":" A collection-like object that is made of values of type `T` and can normalize its individual\n values around a centric point.","sig":null,"attributes":[{"value":"/ A collection-like object that is made of values of type `T` and can normalize its individual","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":2734,"byte_end":2830,"line_start":88,"line_end":88,"column_start":1,"column_end":97}},{"value":"/ values around a centric point.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":2831,"byte_end":2865,"line_start":89,"line_end":89,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":2866,"byte_end":2869,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Note that the order of items in the collection may affect the result.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":2870,"byte_end":2943,"line_start":91,"line_end":91,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":3181,"byte_end":3190,"line_start":97,"line_end":97,"column_start":5,"column_end":14},"name":"normalize","qualname":"::Normalizable::normalize","value":"pub fn normalize(&Self, T) -> Result<Vec<T>, &'static str>","parent":{"krate":0,"index":729},"children":[],"decl_id":null,"docs":" Normalize self around `targeted_sum`.","sig":null,"attributes":[{"value":"/ Normalize self around `targeted_sum`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":2973,"byte_end":3014,"line_start":93,"line_end":93,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":3016,"byte_end":3019,"line_start":94,"line_end":94,"column_start":2,"column_end":5}},{"value":"/ Only returns `Ok` if the new sum of results is guaranteed to be equal to `targeted_sum`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":3021,"byte_end":3113,"line_start":95,"line_end":95,"column_start":2,"column_end":94}},{"value":"/ Else, returns an error explaining why it failed to do so.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":3115,"byte_end":3176,"line_start":96,"line_end":96,"column_start":2,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":738},"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":5890,"byte_end":5899,"line_start":160,"line_end":160,"column_start":8,"column_end":17},"name":"normalize","qualname":"::normalize","value":"pub fn normalize<T>(&[T], T) -> Result<Vec<T>, &'static str> where T: Clone +\nCopy + Ord + BaseArithmetic + Unsigned + Debug","parent":null,"children":[],"decl_id":null,"docs":" Normalize `input` so that the sum of all elements reaches `targeted_sum`.","sig":null,"attributes":[{"value":"/ Normalize `input` so that the sum of all elements reaches `targeted_sum`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":4042,"byte_end":4119,"line_start":131,"line_end":131,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":4120,"byte_end":4123,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ This implementation is currently in a balanced position between being performant and accurate.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":4124,"byte_end":4222,"line_start":133,"line_end":133,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":4223,"byte_end":4226,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ 1. We prefer storing original indices, and sorting the `input` only once. This will save the","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":4227,"byte_end":4323,"line_start":135,"line_end":135,"column_start":1,"column_end":97}},{"value":"/    cost of sorting per round at the cost of a little bit of memory.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":4324,"byte_end":4395,"line_start":136,"line_end":136,"column_start":1,"column_end":72}},{"value":"/ 2. The granularity of increment/decrements is determined by the number of elements in `input`","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":4396,"byte_end":4493,"line_start":137,"line_end":137,"column_start":1,"column_end":98}},{"value":"/    and their sum difference with `targeted_sum`, namely `diff = diff(sum(input), target_sum)`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":4494,"byte_end":4592,"line_start":138,"line_end":138,"column_start":1,"column_end":99}},{"value":"/    This value is then distributed into `per_round = diff / input.len()` and `leftover = diff %","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":4593,"byte_end":4691,"line_start":139,"line_end":139,"column_start":1,"column_end":99}},{"value":"/    round`. First, per_round is applied to all elements of input, and then we move to leftover,","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":4692,"byte_end":4790,"line_start":140,"line_end":140,"column_start":1,"column_end":99}},{"value":"/    in which case we add/subtract 1 by 1 until `leftover` is depleted.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":4791,"byte_end":4864,"line_start":141,"line_end":141,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":4865,"byte_end":4868,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ When the sum is less than the target, the above approach always holds. In this case, then each","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":4869,"byte_end":4967,"line_start":143,"line_end":143,"column_start":1,"column_end":99}},{"value":"/ individual element is also less than target. Thus, by adding `per_round` to each item, neither","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":4968,"byte_end":5066,"line_start":144,"line_end":144,"column_start":1,"column_end":99}},{"value":"/ of them can overflow the numeric bound of `T`. In fact, neither of the can go beyond","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":5067,"byte_end":5155,"line_start":145,"line_end":145,"column_start":1,"column_end":89}},{"value":"/ `target_sum`*.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":5156,"byte_end":5174,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":5175,"byte_end":5178,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ If sum is more than target, there is small twist. The subtraction of `per_round`","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":5179,"byte_end":5263,"line_start":148,"line_end":148,"column_start":1,"column_end":85}},{"value":"/ form each element might go below zero. In this case, we saturate and add the error to the","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":5264,"byte_end":5357,"line_start":149,"line_end":149,"column_start":1,"column_end":94}},{"value":"/ `leftover` value. This ensures that the result will always stay accurate, yet it might cause the","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":5358,"byte_end":5458,"line_start":150,"line_end":150,"column_start":1,"column_end":101}},{"value":"/ execution to become increasingly slow, since leftovers are applied one by one.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":5459,"byte_end":5541,"line_start":151,"line_end":151,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":5542,"byte_end":5545,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ All in all, the complicated case above is rare to happen in most use cases within this repo ,","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":5546,"byte_end":5643,"line_start":153,"line_end":153,"column_start":1,"column_end":98}},{"value":"/ hence we opt for it due to its simplicity.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":5644,"byte_end":5690,"line_start":154,"line_end":154,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":5691,"byte_end":5694,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ This function will return an error is if length of `input` cannot fit in `T`, or if `sum(input)`","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":5695,"byte_end":5795,"line_start":156,"line_end":156,"column_start":1,"column_end":101}},{"value":"/ cannot fit inside `T`.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":5796,"byte_end":5822,"line_start":157,"line_end":157,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":5823,"byte_end":5826,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ * This proof is used in the implementation as well.","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":5827,"byte_end":5882,"line_start":159,"line_end":159,"column_start":1,"column_end":56}}]}],"impls":[{"id":3,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":18285,"byte_end":18292,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":29064,"byte_end":29071,"line_start":441,"line_end":441,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":29432,"byte_end":29439,"line_start":458,"line_end":458,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":29535,"byte_end":29542,"line_start":464,"line_end":464,"column_start":13,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":29560,"byte_end":29567,"line_start":466,"line_end":466,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":30261,"byte_end":30268,"line_start":490,"line_end":490,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":30378,"byte_end":30385,"line_start":496,"line_end":496,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":30493,"byte_end":30500,"line_start":503,"line_end":503,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":30630,"byte_end":30637,"line_start":510,"line_end":510,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":30741,"byte_end":30748,"line_start":517,"line_end":517,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":30904,"byte_end":30911,"line_start":527,"line_end":527,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":31966,"byte_end":31973,"line_start":570,"line_end":570,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":32091,"byte_end":32098,"line_start":577,"line_end":577,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":46900,"byte_end":46904,"line_start":319,"line_end":319,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":140264,"byte_end":140280,"line_start":29,"line_end":29,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":140741,"byte_end":140757,"line_start":56,"line_end":56,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":140862,"byte_end":140878,"line_start":62,"line_end":62,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":141272,"byte_end":141288,"line_start":78,"line_end":78,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":141399,"byte_end":141415,"line_start":84,"line_end":84,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":141695,"byte_end":141706,"line_start":95,"line_end":95,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":142045,"byte_end":142056,"line_start":108,"line_end":108,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":145286,"byte_end":145297,"line_start":217,"line_end":217,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":145439,"byte_end":145450,"line_start":227,"line_end":227,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":145530,"byte_end":145541,"line_start":233,"line_end":233,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":145646,"byte_end":145657,"line_start":239,"line_end":239,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":146166,"byte_end":146177,"line_start":258,"line_end":258,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":155342,"byte_end":155343,"line_start":142,"line_end":142,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":155772,"byte_end":155773,"line_start":153,"line_end":153,"column_start":66,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":155990,"byte_end":155991,"line_start":158,"line_end":158,"column_start":59,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":156658,"byte_end":156659,"line_start":174,"line_end":174,"column_start":76,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":156843,"byte_end":156844,"line_start":180,"line_end":180,"column_start":76,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":158674,"byte_end":158675,"line_start":246,"line_end":246,"column_start":6,"column_end":7},"value":"","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":160408,"byte_end":160409,"line_start":306,"line_end":306,"column_start":40,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":2025,"byte_end":2026,"line_start":61,"line_end":61,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":3623,"byte_end":3626,"line_start":114,"line_end":114,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1104,"byte_end":1111,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1121,"byte_end":1132,"line_start":37,"line_end":37,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":102}},{"kind":"Mod","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1142,"byte_end":1156,"line_start":38,"line_end":38,"column_start":9,"column_end":23},"ref_id":{"krate":0,"index":268}},{"kind":"Mod","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1166,"byte_end":1176,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":294}},{"kind":"Mod","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1186,"byte_end":1194,"line_start":40,"line_end":40,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":429}},{"kind":"Mod","span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":1204,"byte_end":1210,"line_start":41,"line_end":41,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":501}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":18285,"byte_end":18292,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":29064,"byte_end":29071,"line_start":441,"line_end":441,"column_start":29,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":748},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":29432,"byte_end":29439,"line_start":458,"line_end":458,"column_start":20,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":748},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":29535,"byte_end":29542,"line_start":464,"line_end":464,"column_start":13,"column_end":20},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":748},"to":{"krate":2,"index":2680}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":29560,"byte_end":29567,"line_start":466,"line_end":466,"column_start":14,"column_end":21},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":748},"to":{"krate":2,"index":2711}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":30261,"byte_end":30268,"line_start":490,"line_end":490,"column_start":21,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":748},"to":{"krate":2,"index":2722}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":30378,"byte_end":30385,"line_start":496,"line_end":496,"column_start":19,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":748},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":30493,"byte_end":30500,"line_start":503,"line_end":503,"column_start":19,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":748},"to":{"krate":2,"index":3096}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":30630,"byte_end":30637,"line_start":510,"line_end":510,"column_start":19,"column_end":26},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":748},"to":{"krate":2,"index":3101}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":30741,"byte_end":30748,"line_start":517,"line_end":517,"column_start":15,"column_end":22},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":748},"to":{"krate":25,"index":515}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":30904,"byte_end":30911,"line_start":527,"line_end":527,"column_start":14,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":748},"to":{"krate":25,"index":525}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":31966,"byte_end":31973,"line_start":570,"line_end":570,"column_start":20,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":748},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/biguint.rs","byte_start":32091,"byte_end":32098,"line_start":577,"line_end":577,"column_start":21,"column_end":28},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":748},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":38813,"byte_end":38817,"line_start":41,"line_end":41,"column_start":2,"column_end":6},"kind":"SuperTrait","from":{"krate":2,"index":3034},"to":{"krate":0,"index":198}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":38821,"byte_end":38826,"line_start":42,"line_end":42,"column_start":4,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":2645},"to":{"krate":0,"index":198}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":38830,"byte_end":38837,"line_start":43,"line_end":43,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":25,"index":237},"to":{"krate":0,"index":198}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":38841,"byte_end":38845,"line_start":44,"line_end":44,"column_start":4,"column_end":8},"kind":"SuperTrait","from":{"krate":25,"index":515},"to":{"krate":0,"index":198}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":38849,"byte_end":38859,"line_start":45,"line_end":45,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":624},"to":{"krate":0,"index":198}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":38863,"byte_end":38873,"line_start":46,"line_end":46,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":2722},"to":{"krate":0,"index":198}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":38877,"byte_end":38896,"line_start":47,"line_end":47,"column_start":4,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":611},"to":{"krate":0,"index":198}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":38906,"byte_end":38913,"line_start":48,"line_end":48,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2937},"to":{"krate":0,"index":198}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":38923,"byte_end":38933,"line_start":49,"line_end":49,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":25,"index":633},"to":{"krate":0,"index":198}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39659,"byte_end":39664,"line_start":72,"line_end":72,"column_start":2,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39668,"byte_end":39672,"line_start":73,"line_end":73,"column_start":4,"column_end":8},"kind":"SuperTrait","from":{"krate":2,"index":3034},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39676,"byte_end":39683,"line_start":74,"line_end":74,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":3002},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39687,"byte_end":39692,"line_start":75,"line_end":75,"column_start":4,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":9604},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39696,"byte_end":39706,"line_start":76,"line_end":76,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":624},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39710,"byte_end":39717,"line_start":77,"line_end":77,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":25,"index":237},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39721,"byte_end":39723,"line_start":78,"line_end":78,"column_start":4,"column_end":6},"kind":"SuperTrait","from":{"krate":2,"index":2680},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39727,"byte_end":39736,"line_start":79,"line_end":79,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2675},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39740,"byte_end":39743,"line_start":80,"line_end":80,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":2711},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39747,"byte_end":39757,"line_start":81,"line_end":81,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":2722},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39761,"byte_end":39771,"line_start":82,"line_end":82,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":25,"index":624},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39775,"byte_end":39785,"line_start":83,"line_end":83,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":25,"index":621},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39789,"byte_end":39799,"line_start":84,"line_end":84,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":25,"index":626},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39803,"byte_end":39813,"line_start":85,"line_end":85,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":25,"index":628},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39817,"byte_end":39820,"line_start":86,"line_end":86,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":3091},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39824,"byte_end":39827,"line_start":87,"line_end":87,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":3096},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39831,"byte_end":39834,"line_start":88,"line_end":88,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":3106},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39838,"byte_end":39841,"line_start":89,"line_end":89,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":3101},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39845,"byte_end":39849,"line_start":90,"line_end":90,"column_start":4,"column_end":8},"kind":"SuperTrait","from":{"krate":25,"index":515},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":39853,"byte_end":39856,"line_start":91,"line_end":91,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":25,"index":525},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/fixed_point.rs","byte_start":46900,"byte_end":46904,"line_start":319,"line_end":319,"column_start":40,"column_end":44},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":253},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94471,"byte_end":94476,"line_start":44,"line_end":44,"column_start":2,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94480,"byte_end":94490,"line_start":45,"line_end":45,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":624},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94494,"byte_end":94498,"line_start":46,"line_end":46,"column_start":4,"column_end":8},"kind":"SuperTrait","from":{"krate":2,"index":3034},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94502,"byte_end":94509,"line_start":47,"line_end":47,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":3002},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94513,"byte_end":94515,"line_start":48,"line_end":48,"column_start":4,"column_end":6},"kind":"SuperTrait","from":{"krate":2,"index":2680},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94519,"byte_end":94528,"line_start":49,"line_end":49,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":2675},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94532,"byte_end":94535,"line_start":50,"line_end":50,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":2711},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94539,"byte_end":94549,"line_start":51,"line_end":51,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":2722},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94553,"byte_end":94560,"line_start":52,"line_end":52,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":25,"index":237},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94569,"byte_end":94574,"line_start":53,"line_end":53,"column_start":9,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":9604},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94583,"byte_end":94586,"line_start":54,"line_end":54,"column_start":9,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":3106},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94610,"byte_end":94613,"line_start":55,"line_end":55,"column_start":9,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":3101},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/per_things.rs","byte_start":94632,"byte_end":94635,"line_start":56,"line_end":56,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":25,"index":849},"to":{"krate":0,"index":382}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":140264,"byte_end":140280,"line_start":29,"line_end":29,"column_start":6,"column_end":22},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":140741,"byte_end":140757,"line_start":56,"line_end":56,"column_start":21,"column_end":37},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1932},"to":{"krate":2,"index":2722}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":140862,"byte_end":140878,"line_start":62,"line_end":62,"column_start":14,"column_end":30},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1932},"to":{"krate":2,"index":2711}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":141272,"byte_end":141288,"line_start":78,"line_end":78,"column_start":20,"column_end":36},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1932},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":141399,"byte_end":141415,"line_start":84,"line_end":84,"column_start":28,"column_end":44},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1932},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":141695,"byte_end":141706,"line_start":95,"line_end":95,"column_start":29,"column_end":40},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":142045,"byte_end":142056,"line_start":108,"line_end":108,"column_start":6,"column_end":17},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":145286,"byte_end":145297,"line_start":217,"line_end":217,"column_start":18,"column_end":29},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1943},"to":{"krate":25,"index":237}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":145439,"byte_end":145450,"line_start":227,"line_end":227,"column_start":33,"column_end":44},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":145530,"byte_end":145541,"line_start":233,"line_end":233,"column_start":21,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":2722}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":145646,"byte_end":145657,"line_start":239,"line_end":239,"column_start":14,"column_end":25},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":2711}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/rational.rs","byte_start":146166,"byte_end":146177,"line_start":258,"line_end":258,"column_start":20,"column_end":31},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153237,"byte_end":153241,"line_start":36,"line_end":36,"column_start":2,"column_end":6},"kind":"SuperTrait","from":{"krate":2,"index":2930},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153249,"byte_end":153253,"line_start":37,"line_end":37,"column_start":4,"column_end":8},"kind":"SuperTrait","from":{"krate":25,"index":515},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153257,"byte_end":153260,"line_start":38,"line_end":38,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":25,"index":525},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153264,"byte_end":153281,"line_start":39,"line_end":39,"column_start":4,"column_end":21},"kind":"SuperTrait","from":{"krate":28,"index":4},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153285,"byte_end":153288,"line_start":40,"line_end":40,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":3091},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153313,"byte_end":153322,"line_start":41,"line_end":41,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":3122},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153332,"byte_end":153335,"line_start":42,"line_end":42,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":3096},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153360,"byte_end":153369,"line_start":43,"line_end":43,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":3126},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153379,"byte_end":153382,"line_start":44,"line_end":44,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":3101},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153407,"byte_end":153416,"line_start":45,"line_end":45,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":3130},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153426,"byte_end":153429,"line_start":46,"line_end":46,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":3106},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153454,"byte_end":153463,"line_start":47,"line_end":47,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":3134},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153473,"byte_end":153476,"line_start":48,"line_end":48,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":3112},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153501,"byte_end":153510,"line_start":49,"line_end":49,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":3138},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153520,"byte_end":153523,"line_start":50,"line_end":50,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":3165},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153547,"byte_end":153550,"line_start":51,"line_end":51,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":3171},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153574,"byte_end":153584,"line_start":52,"line_end":52,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":25,"index":635},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153588,"byte_end":153598,"line_start":53,"line_end":53,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":25,"index":638},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153602,"byte_end":153612,"line_start":54,"line_end":54,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":25,"index":621},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153616,"byte_end":153626,"line_start":55,"line_end":55,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":25,"index":624},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153630,"byte_end":153640,"line_start":56,"line_end":56,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":25,"index":626},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153644,"byte_end":153654,"line_start":57,"line_end":57,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":25,"index":628},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153658,"byte_end":153668,"line_start":58,"line_end":58,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":25,"index":630},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153672,"byte_end":153682,"line_start":59,"line_end":59,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":624},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153686,"byte_end":153696,"line_start":60,"line_end":60,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":2,"index":2722},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153706,"byte_end":153709,"line_start":61,"line_end":61,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":2711},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153713,"byte_end":153720,"line_start":62,"line_end":62,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":25,"index":237},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153724,"byte_end":153734,"line_start":63,"line_end":63,"column_start":4,"column_end":14},"kind":"SuperTrait","from":{"krate":18,"index":648},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153738,"byte_end":153743,"line_start":64,"line_end":64,"column_start":4,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153747,"byte_end":153754,"line_start":65,"line_end":65,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2937},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153762,"byte_end":153769,"line_start":66,"line_end":66,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2933},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153777,"byte_end":153784,"line_start":67,"line_end":67,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2937},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153793,"byte_end":153800,"line_start":68,"line_end":68,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2933},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153809,"byte_end":153816,"line_start":69,"line_end":69,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2937},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153825,"byte_end":153832,"line_start":70,"line_end":70,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2933},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153841,"byte_end":153848,"line_start":71,"line_end":71,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2937},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153857,"byte_end":153864,"line_start":72,"line_end":72,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2933},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153873,"byte_end":153880,"line_start":73,"line_end":73,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2937},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153890,"byte_end":153897,"line_start":74,"line_end":74,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2933},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153907,"byte_end":153914,"line_start":75,"line_end":75,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2937},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153925,"byte_end":153932,"line_start":76,"line_end":76,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":2933},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153943,"byte_end":153962,"line_start":77,"line_end":77,"column_start":4,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":608},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153970,"byte_end":153989,"line_start":78,"line_end":78,"column_start":4,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":611},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":153997,"byte_end":154016,"line_start":79,"line_end":79,"column_start":4,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":608},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":154025,"byte_end":154044,"line_start":80,"line_end":80,"column_start":4,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":611},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":154053,"byte_end":154072,"line_start":81,"line_end":81,"column_start":4,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":608},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":154081,"byte_end":154100,"line_start":82,"line_end":82,"column_start":4,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":611},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":154109,"byte_end":154128,"line_start":83,"line_end":83,"column_start":4,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":608},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":154137,"byte_end":154156,"line_start":84,"line_end":84,"column_start":4,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":611},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":154165,"byte_end":154184,"line_start":85,"line_end":85,"column_start":4,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":608},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":154194,"byte_end":154213,"line_start":86,"line_end":86,"column_start":4,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":611},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":155342,"byte_end":155343,"line_start":142,"line_end":142,"column_start":23,"column_end":24},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":601},"to":{"krate":0,"index":599}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":155664,"byte_end":155678,"line_start":151,"line_end":151,"column_start":25,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":599},"to":{"krate":0,"index":602}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":155681,"byte_end":155685,"line_start":151,"line_end":151,"column_start":42,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":2930},"to":{"krate":0,"index":602}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":155693,"byte_end":155697,"line_start":151,"line_end":151,"column_start":54,"column_end":58},"kind":"SuperTrait","from":{"krate":2,"index":2930},"to":{"krate":0,"index":602}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":155772,"byte_end":155773,"line_start":153,"line_end":153,"column_start":66,"column_end":67},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":604},"to":{"krate":0,"index":602}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":155904,"byte_end":155916,"line_start":156,"line_end":156,"column_start":33,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":602},"to":{"krate":0,"index":605}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":155919,"byte_end":155927,"line_start":156,"line_end":156,"column_start":48,"column_end":56},"kind":"SuperTrait","from":{"krate":25,"index":964},"to":{"krate":0,"index":605}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":155990,"byte_end":155991,"line_start":158,"line_end":158,"column_start":59,"column_end":60},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":607},"to":{"krate":0,"index":605}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":156175,"byte_end":156180,"line_start":162,"line_end":162,"column_start":42,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":608}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":156478,"byte_end":156483,"line_start":169,"line_end":169,"column_start":42,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":611}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":156658,"byte_end":156659,"line_start":174,"line_end":174,"column_start":76,"column_end":77},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":616},"to":{"krate":0,"index":608}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":156843,"byte_end":156844,"line_start":180,"line_end":180,"column_start":76,"column_end":77},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":621},"to":{"krate":0,"index":611}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":158674,"byte_end":158675,"line_start":246,"line_end":246,"column_start":6,"column_end":7},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":634},"to":{"krate":0,"index":624}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/traits.rs","byte_start":160408,"byte_end":160409,"line_start":306,"line_end":306,"column_start":40,"column_end":41},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":647},"to":{"krate":0,"index":641}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":2025,"byte_end":2026,"line_start":61,"line_end":61,"column_start":29,"column_end":30},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":727},"to":{"krate":0,"index":723}},{"span":{"file_name":"/Users/myunghacho/.cargo/git/checkouts/substrate-7e08433d4c370a21/22d40c7/primitives/arithmetic/src/lib.rs","byte_start":3623,"byte_end":3626,"line_start":114,"line_end":114,"column_start":39,"column_end":42},"kind":{"Impl":{"id":105}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":729}}]}